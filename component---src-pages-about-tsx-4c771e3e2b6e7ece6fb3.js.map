{"version":3,"sources":["webpack:///./src/pages/about.tsx","webpack:///./src/hooks/useInterval.ts","webpack:///./src/config/index.ts","webpack:///./src/images/logo.png","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/images/about/brain.png","webpack:///./src/images/about/wechat.png"],"names":["START_DATE","Date","query","About","props","callback","delay","savedCallback","data","_useState","useState","_useState2","Object","slicedToArray","experience","setExperience","updateExperience","secondsPassed","getTime","daysPassed","year","Math","floor","month","day","hour","minute","second","concat","useEffect","useRef","current","id","setInterval","clearInterval","react_default","a","createElement","layout","seo","title","keywords","site","siteMetadata","className","src","brain","alt","target","href","wechat","width","__webpack_require__","d","__webpack_exports__","IS_PROD","process","module","exports","p","SEO","_props$description","description","_props$lang","lang","_props$meta","meta","_props$keywords","_props$title","_props$exactTitle","exactTitle","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","render","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","menus","to","text","Header","navMenuOpen","setNavMenuOpen","close","e","stopPropagation","isMenuActive","isMenuActiveProps","isPartiallyCurrent","Fragment","gatsby_browser_entry","logo","onClick","map","n","key","getProps","Sentry","dsn","Layout","children","components_header","_755544856"],"mappings":"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","file":"component---src-pages-about-tsx-4c771e3e2b6e7ece6fb3.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport './about.scss'\nimport brain from '../images/about/brain.png'\nimport wechat from '../images/about/wechat.png'\n// import qr from '../images/QR/qr.jpg'\nimport { GatsbyDataProps } from '../utils/interface'\nimport { useInterval } from '../hooks'\n\nconst START_DATE = new Date('2016-03-01 10:00:00')\nconst DAYS_PER_MONTH = 365 / 12\n\nconst About = (props: GatsbyDataProps) => {\n  const { data } = props\n\n  const [experience, setExperience] = useState('')\n\n  const updateExperience = () => {\n    const now = new Date()\n    const secondsPassed = (now.getTime() - START_DATE.getTime()) / 1000\n    const daysPassed = secondsPassed / 60 / 60 / 24\n\n    const year = Math.floor(daysPassed / 365)\n    const month = Math.floor(daysPassed / DAYS_PER_MONTH % 12)\n    const day = Math.floor(daysPassed % DAYS_PER_MONTH)\n    const hour = Math.floor(secondsPassed / 60 / 60 % 24)\n    const minute = Math.floor(secondsPassed / 60 % 60)\n    const second = Math.floor(secondsPassed % 60)\n\n    setExperience(`（工作经验：${year} 年 ${month} 个月 ${day} 天 ${hour} 小时 ${minute} 分钟 ${second} 秒）`)\n  }\n\n  useEffect(() => {\n    updateExperience()\n  }, [])\n\n  useInterval(updateExperience, 1000)\n\n  return (\n    <Layout>\n      <SEO\n        title='我'\n        keywords={data.site.siteMetadata.keywords}\n      />\n      <div className='mf-content' id='about'>\n        <article>\n\n          <h1>我</h1>\n          <img src={brain} alt='Code in my left brain. Color in my right brain.' />\n          <p>前端工程师一枚<span id='experience'>{experience}</span></p>\n          <p>左脑代码，右脑色彩，游走于“懂设计的开发者”和“懂开发的设计师”之间</p>\n          <p>大前端信徒 / 半拉设计师 / 摄影爱好者</p>\n          <p>目前在马老师门下修福报</p>\n          <p>欢迎来 Github 上关注我：<a target='_blank' href='http://github.com/tonghuashuo'>@tonghuashuo</a></p>\n          <p>或给我来信：<a target='_blank' href='mailto:ideal19920402@gmail.com'>ideal19920402@gmail.com</a></p>\n          <p>或微信上撩我：</p>\n          <img src={wechat} width='320' alt='扫一扫加我微信' />\n          {/* <img src={qr} alt='' /> */}\n\n          <h1>为什么写博客</h1>\n          <ul>\n            <li>把“以为懂了”的东西讲给别人听，以此验证是否真的懂了，顺带加深记忆。</li>\n            <li>Review 自己的代码，看有哪些是可以优化的，哪些甚至是解释不通的。</li>\n            <li>锻炼自己的表达能力，让自己懂和让别人懂是两个境界。</li>\n            <li>如果可能的话，为社区贡献一点有价值的内容。</li>\n            <li>装逼这事儿没什么说不出口的。</li>\n          </ul>\n        </article>\n\n      </div>\n    </Layout>\n  )\n}\n\nexport default About\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n}`\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(() => {})\n\n  // 保存新回调\n  useEffect(() => {\n    savedCallback.current = callback\n  })\n\n  // 建立 interval\n  useEffect(\n    () => {\n      function tick() {\n        savedCallback.current()\n      }\n      if (delay !== null) {\n        let id = setInterval(tick, delay)\n        return () => clearInterval(id)\n      }\n    },\n    [delay]\n  )\n}\n","export const IS_PROD = process.env.NODE_ENV === 'production'\n\nexport const DEBUG_MODE = !IS_PROD\n","module.exports = __webpack_public_path__ + \"static/logo-8503f6989dba3ce27939964a48c8b787.png\";","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ninterface SEOProps {\n  description?: string,\n  lang?: string,\n  meta?: { name: string; content: any; property?: undefined; } | { property: string; content: any; name?: undefined; } | ConcatArray<{ name: string; content: any; property?: undefined; } | { property: string; content: any; name?: undefined; }>,\n  keywords?: string[],\n  title?: string,\n  exactTitle?: boolean\n}\n\nconst SEO = (props: SEOProps) => {\n  const { description = '', lang = `zh`, meta = [], keywords = [], title = '', exactTitle = false } = props\n\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || data.site.siteMetadata.description\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={exactTitle ? '' : `%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              }\n            ].concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`,`),\n                  }\n                : []\n            )\n            .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { useState, MouseEvent } from 'react'\nimport { Link } from 'gatsby'\nimport logo from '../images/logo.png'\nimport './header.scss'\nimport { LinkGetProps } from '@reach/router';\n\nconst menus = [\n  { to: '/blog', text: '博客' },\n  { to: '/project', text: '代表作' },\n  { to: '/lab', text: '实验室' },\n  { to: '/friend', text: '朋友' },\n  { to: '/about', text: '我' }\n]\n\nconst Header = () => {\n\n  const [navMenuOpen, setNavMenuOpen] = useState(false)\n\n  function toggle (e: MouseEvent) {\n    e && e.stopPropagation()\n    setNavMenuOpen(!navMenuOpen)\n  }\n\n  function close (e: MouseEvent) {\n    e && e.stopPropagation()\n    setNavMenuOpen(false)\n  }\n\n  function isMenuActive (isMenuActiveProps: LinkGetProps) {\n    const { isPartiallyCurrent } = isMenuActiveProps\n    return isPartiallyCurrent\n      ? { className: 'menu-link active' }\n      : { className: 'menu-link' }\n  }\n\n  return (\n    <>\n      <header id='mf-header'>\n        <div className='mf-header-wrapper'>\n          <Link to='/' className='logo'>\n            <img src={logo} alt=''/>\n            <span>童话说</span>\n          </Link>\n          <div className={'hamberger' + (navMenuOpen ? ' open' : '')} onClick={toggle}>\n            <div className='bar' />\n            <div className='bar' />\n            <div className='bar' />\n          </div>\n          <nav className={'nav-menu' + (navMenuOpen ? ' open' : '')}>\n            <ul className='menus'>\n              { menus.map(n => (\n                <li className='menu' key={n.to}>\n                  <Link\n                    to={n.to}\n                    getProps={isMenuActive}\n                    onClick={close}\n                  >{n.text}</Link>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </div>\n      </header>\n      <section id='mf-header-placeholder' />\n    </>\n  )\n}\n\nexport default Header\n","import React, { ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport * as Sentry from '@sentry/browser'\nimport 'normalize-scss/sass/normalize/_import-now.scss'\nimport './layout.scss'\nimport Header from './header'\nimport { IS_PROD } from 'config';\n\nif (IS_PROD) {\n  Sentry.init({\n    dsn: 'https://9638de4372be4acebf892d0732a86a4a@sentry.io/1450204'\n  })\n}\n\ninterface LayoutProps {\n  children?: ReactNode\n}\n\nconst Layout = (props: LayoutProps) => {\n  const { children } = props\n\n  return <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header />\n        <main>\n          {children}\n        </main>\n      </>\n    )}\n  />\n}\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/brain-7dc10532e2058d66744cd1398811518d.png\";","module.exports = __webpack_public_path__ + \"static/wechat-8207e67d2601330e08faf6542a6e44d1.png\";"],"sourceRoot":""}