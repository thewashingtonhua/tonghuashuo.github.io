{"version":3,"sources":["webpack:///./src/pages/draft.tsx"],"names":["BottomLine","props","className","text","BlogDraftPage","data","drafts","allMarkdownRemark","edges","map","n","node","filter","fields","type","NodeType","blog","frontmatter","draft","sort","x","y","Date","date","getTime","title","keywords","site","siteMetadata","cover","publicURL","dayjs","format","to","slug","key","id","src","alt","description","dateTime","query"],"mappings":"kHAAA,2IAOMA,EAAmC,SAACC,GAAD,OACvC,yBAAKC,UAAU,eAAc,8BAAOD,EAAME,QAmD7BC,UAhD4B,SAACH,GAAU,IAC5CI,EAASJ,EAATI,KACFC,EAASD,EAAKE,kBAAkBC,MACnCC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QACXC,QAAO,SAAAD,GAAI,OAAIA,EAAKE,OAAOC,OAASC,IAASC,MAAQL,EAAKM,YAAYC,SACtEC,MAAK,SAACC,EAAGC,GAAJ,OAAU,IAAIC,KAAKF,EAAEP,OAAOU,MAAMC,UAAY,IAAIF,KAAKD,EAAER,OAAOU,MAAMC,aAE9E,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,KACNC,SAAUrB,EAAKsB,KAAKC,aAAaF,WAEnC,yBAAKxB,UAAU,2BACb,yBAAKA,UAAU,aACXI,EAAOG,KAAI,SAAAE,GAAQ,MACbkB,EAAK,UAAGlB,EAAKM,YAAYY,aAApB,aAAG,EAAwBC,UAChCP,EAAOQ,IAAMpB,EAAKE,OAAOU,MAAMS,OAAO,gBAC5C,OACE,kBAAC,OAAD,CACE9B,UAAW,QAAUS,EAAKM,YAAYC,MAAQ,SAAW,IACzDe,GAAItB,EAAKE,OAAOqB,KAChBC,IAAKxB,EAAKyB,GACVA,GAAIzB,EAAKE,OAAOuB,IAEhB,yBAAKlC,UAAU,UACb,yBAAKmC,IAAKR,EAAOS,IAAI,MAEvB,yBAAKpC,UAAU,QACb,uBAAGA,UAAU,SAASS,EAAKM,YAAYQ,OACvC,uBAAGvB,UAAU,QAAQS,EAAKM,YAAYsB,aACtC,4BAAQrC,UAAU,gBAChB,uBAAGA,UAAU,QACX,0BAAMsC,SAAS,2BAA2BjB,WASxD,kBAACvB,EAAD,CAAYG,KAAK,eAQlB,IAAMsC,EAAQ","file":"component---src-pages-draft-tsx-86b86b603c50ee2e026b.js","sourcesContent":["import React, { FC } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport dayjs from 'dayjs'\nimport { Layout, SEO } from '../components'\nimport './blog.scss'\nimport { GatsbyDataProps, BlogNode, NodeType } from '../utils/interface'\n\nconst BottomLine: FC<{ text: string }> = (props) => (\n  <div className='bottom-line'><span>{props.text}</span></div>\n)\n\nconst BlogDraftPage: FC<GatsbyDataProps> = (props) => {\n  const { data } = props\n  const drafts = data.allMarkdownRemark.edges\n    .map(n => n.node as BlogNode)\n    .filter(node => node.fields.type === NodeType.blog && node.frontmatter.draft)\n    .sort((x, y) => new Date(x.fields.date).getTime() - new Date(y.fields.date).getTime())\n\n  return (\n    <Layout>\n      <SEO\n        title='草稿'\n        keywords={data.site.siteMetadata.keywords}\n      />\n      <div className='mf-content blog-catalog'>\n        <div className='blog-list'>\n          { drafts.map(node => {\n            const cover = node.frontmatter.cover?.publicURL\n            const date = dayjs(node.fields.date).format('MMM DD, YYYY')\n            return (\n              <Link\n                className={'blog' + (node.frontmatter.draft ? ' draft' : '')}\n                to={node.fields.slug}\n                key={node.id}\n                id={node.fields.id}\n              >\n                <div className='banner'>\n                  <img src={cover} alt='' />\n                </div>\n                <div className='info'>\n                  <p className='title'>{node.frontmatter.title}</p>\n                  <p className='desc'>{node.frontmatter.description}</p>\n                  <footer className='blog__footer'>\n                    <p className='date'>\n                      <time dateTime='{blog.node.fields.date}'>{date}</time>\n                    </p>\n                    {/* <p className='tags'>Tags: {blog.node.frontmatter.tags.join(', ')}</p> */}\n                  </footer>\n                </div>\n              </Link>\n            )\n          })}\n        </div>\n        <BottomLine text='The End' />\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogDraftPage\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n  allMarkdownRemark {\n    totalCount\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          description\n          tags\n          cover {\n            publicURL\n          }\n          series\n          draft\n          original\n        }\n        fields {\n          id\n          slug\n          type\n          date\n        }\n      }\n    }\n  }\n}`\n"],"sourceRoot":""}