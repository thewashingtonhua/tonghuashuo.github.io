{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["HomePage","props","latestBlog","data","allMarkdownRemark","edges","map","n","node","filter","fields","type","NodeType","blog","frontmatter","draft","sort","x","y","Date","date","getTime","blogCover","cover","publicURL","blogDate","dayjs","format","className","to","slug","src","alt","title","description","dateTime","query"],"mappings":"2FAAA,2IAiDeA,UA1CuB,SAACC,GAAU,MAIzCC,EAHWD,EAATE,KACWC,kBAAkBC,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAGnDC,QAAO,SAAAD,GAAI,OAAKA,EAAKE,OAAOC,OAASC,IAASC,OAASL,EAAKM,YAAYC,SACxEC,MAAK,SAACC,EAAGC,GAAJ,OAAU,IAAIC,KAAKD,EAAER,OAAOU,MAAMC,UAAY,IAAIF,KAAKF,EAAEP,OAAOU,MAAMC,aAAW,GAEnFC,EAAS,UAAGpB,EAAWY,YAAYS,aAA1B,aAAG,EAA8BC,UAC1CC,EAAWC,IAAMxB,EAAWQ,OAAOU,MAAMO,OAAO,gBAEtD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,yBAAKC,UAAU,cACb,yBAAKA,UAAU,WACb,4BAAQA,UAAU,kBAChB,uBAAGA,UAAU,SAAb,QACA,kBAAC,OAAD,CAAMC,GAAG,QAAQD,UAAU,QAA3B,WAEF,6BAASA,UAAU,gBACjB,kBAAC,OAAD,CAAMA,UAAU,OAAOC,GAAI3B,EAAWQ,OAAOoB,MAC3C,yBAAKF,UAAU,UACb,yBAAKG,IAAKT,EAAWU,IAAI,MAE3B,yBAAKJ,UAAU,QACb,wBAAIA,UAAU,SAAS1B,EAAWY,YAAYmB,OAC9C,uBAAGL,UAAU,QAAQ1B,EAAWY,YAAYoB,aAC5C,4BAAQN,UAAU,gBAChB,uBAAGA,UAAU,QACX,0BAAMO,SAAUjC,EAAWQ,OAAOU,MAAOK,YActD,IAAMW,EAAQ,c","file":"component---src-pages-index-tsx-e167bb140a334d4ba72b.js","sourcesContent":["import React, { FC } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport dayjs from 'dayjs'\nimport { Layout, SEO } from '../components'\nimport './index.scss'\nimport { GatsbyDataProps, BlogNode, NodeType } from '../utils/interface'\n\nconst HomePage: FC<GatsbyDataProps> = (props) => {\n  const { data } = props\n  const nodes = data.allMarkdownRemark.edges.map(n => n.node) as BlogNode[]\n\n  const latestBlog = nodes\n    .filter(node => (node.fields.type === NodeType.blog && !node.frontmatter.draft))\n    .sort((x, y) => new Date(y.fields.date).getTime() - new Date(x.fields.date).getTime())[0]\n\n  const blogCover = latestBlog.frontmatter.cover?.publicURL\n  const blogDate = dayjs(latestBlog.fields.date).format('MMM DD, YYYY')\n\n  return (\n    <Layout>\n      <SEO />\n      <div className='mf-content'>\n        <div className='landing'>\n          <header className='landing-header'>\n            <p className='title'>最新博客</p>\n            <Link to='/blog' className='more'>查看全部 &raquo;</Link>\n          </header>\n          <section className='landing-body'>\n            <Link className='blog' to={latestBlog.fields.slug}>\n              <div className='banner'>\n                <img src={blogCover} alt='' />\n              </div>\n              <div className='info'>\n                <h2 className='title'>{latestBlog.frontmatter.title}</h2>\n                <p className='desc'>{latestBlog.frontmatter.description}</p>\n                <footer className='blog__footer'>\n                  <p className='date'>\n                    <time dateTime={latestBlog.fields.date}>{blogDate}</time>\n                  </p>\n                </footer>\n              </div>\n            </Link>\n          </section>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default HomePage\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n  allMarkdownRemark {\n    totalCount\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          description\n          from\n          to\n          tags\n          cover {\n            publicURL\n          }\n          series\n          draft\n          original\n        }\n        fields {\n          slug\n          type\n          date\n        }\n        excerpt\n      }\n    }\n  }\n}`\n"],"sourceRoot":""}