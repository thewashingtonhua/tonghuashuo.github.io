{"version":3,"sources":["webpack:///./src/pages/lab/html5-canvas.js","webpack:///./src/config/index.ts","webpack:///./src/images/logo.png","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx"],"names":["HTML5Canvas","props","canvas","useRef","useEffect","current","getContext","ctx","fillStyle","font","fillText","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","keywords","data","site","siteMetadata","className","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","ref","height","width","style","backgroundColor","marginTop","query","__webpack_require__","d","__webpack_exports__","IS_PROD","process","module","exports","p","SEO","_props$description","description","_props$lang","lang","_props$meta","meta","_props$keywords","_props$title","_props$exactTitle","exactTitle","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","render","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","concat","name","content","property","author","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","menus","text","Header","_useState","useState","_useState2","Object","slicedToArray","navMenuOpen","setNavMenuOpen","close","e","stopPropagation","isMenuActive","isMenuActiveProps","isPartiallyCurrent","react_default","Fragment","id","gatsby_browser_entry","src","logo","alt","onClick","map","n","key","getProps","Sentry","dsn","Layout","children","components_header","_755544856"],"mappings":"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","file":"component---src-pages-lab-html-5-canvas-js-5cbd23878f52f357c440.js","sourcesContent":["import React, { PureComponent, useEffect, useRef } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../../components/layout'\nimport SEO from '../../components/seo'\nimport './lab.scss'\nimport { GatsbyDataProps } from '../../utils/interface'\n\nconst HTML5Canvas = (props: GatsbyDataProps) => {\n  const canvas = useRef()\n\n  useEffect(() => {\n    const canvas = this.canvas.current\n    if (canvas.getContext) {\n      const ctx = canvas.getContext('2d')\n      ctx.fillStyle = '#999'\n      ctx.font='18px Arial';\n      ctx.fillText('This browser supports canvas.', 25, 100);\n    }\n  }, [])\n\n  return (\n    <Layout>\n      <SEO\n        title='Canvas | 实验室'\n        keywords={props.data.site.siteMetadata.keywords}\n      />\n      <div className='mf-content lab-item'>\n\n        <article>\n          <Link to='/lab' className='back'>&laquo; Back</Link>\n\n          <h1>Canvas</h1>\n\n          <canvas ref={canvas} height='200' width='300' style={{\n            'backgroundColor': '#DDD',\n            'marginTop': '20px'\n          }}>Canvas is not supported on this browser</canvas>\n        </article>\n      </div>\n    </Layout>\n  )\n}\n\nexport default HTML5Canvas\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n}`\n","export const IS_PROD = process.env.NODE_ENV === 'production'\n\nexport const DEBUG_MODE = !IS_PROD\n","module.exports = __webpack_public_path__ + \"static/logo-8503f6989dba3ce27939964a48c8b787.png\";","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ninterface SEOProps {\n  description?: string,\n  lang?: string,\n  meta?: { name: string; content: any; property?: undefined; } | { property: string; content: any; name?: undefined; } | ConcatArray<{ name: string; content: any; property?: undefined; } | { property: string; content: any; name?: undefined; }>,\n  keywords?: string[],\n  title?: string,\n  exactTitle?: boolean\n}\n\nconst SEO = (props: SEOProps) => {\n  const { description = '', lang = `zh`, meta = [], keywords = [], title = '', exactTitle = false } = props\n\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || data.site.siteMetadata.description\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={exactTitle ? '' : `%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              }\n            ].concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                : []\n            )\n            .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { useState, MouseEvent } from 'react'\nimport { Link } from 'gatsby'\nimport logo from '../images/logo.png'\nimport './header.scss'\nimport { LinkGetProps } from '@reach/router';\n\nconst menus = [\n  { to: '/blog', text: '博客' },\n  { to: '/project', text: '代表作' },\n  { to: '/lab', text: '实验室' },\n  { to: '/friend', text: '朋友' },\n  { to: '/about', text: '我' }\n]\n\nconst Header = () => {\n\n  const [navMenuOpen, setNavMenuOpen] = useState(false)\n\n  function toggle (e: MouseEvent) {\n    e && e.stopPropagation()\n    setNavMenuOpen(!navMenuOpen)\n  }\n\n  function close (e: MouseEvent) {\n    e && e.stopPropagation()\n    setNavMenuOpen(false)\n  }\n\n  function isMenuActive (isMenuActiveProps: LinkGetProps) {\n    const { isPartiallyCurrent } = isMenuActiveProps\n    return isPartiallyCurrent\n      ? { className: 'menu-link active' }\n      : { className: 'menu-link' }\n  }\n\n  return (\n    <>\n      <header id='mf-header'>\n        <div className='mf-header-wrapper'>\n          <Link to='/' className='logo'>\n            <img src={logo} alt=''/>\n            <span>童话说</span>\n          </Link>\n          <div className={'hamberger' + (navMenuOpen ? ' open' : '')} onClick={toggle}>\n            <div className='bar' />\n            <div className='bar' />\n            <div className='bar' />\n          </div>\n          <nav className={'nav-menu' + (navMenuOpen ? ' open' : '')}>\n            <ul className='menus'>\n              { menus.map(n => (\n                <li className='menu' key={n.to}>\n                  <Link\n                    to={n.to}\n                    getProps={isMenuActive}\n                    onClick={close}\n                  >{n.text}</Link>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </div>\n      </header>\n      <section id='mf-header-placeholder' />\n    </>\n  )\n}\n\nexport default Header\n","import React, { ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport * as Sentry from '@sentry/browser'\nimport 'normalize-scss/sass/normalize/_import-now.scss'\nimport './layout.scss'\nimport Header from './header'\nimport { IS_PROD } from 'config';\n\nif (IS_PROD) {\n  Sentry.init({\n    dsn: 'https://9638de4372be4acebf892d0732a86a4a@sentry.io/1450204'\n  })\n}\n\ninterface LayoutProps {\n  children?: ReactNode\n}\n\nconst Layout = (props: LayoutProps) => {\n  const { children } = props\n\n  return <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header />\n        <main>\n          {children}\n        </main>\n      </>\n    )}\n  />\n}\n\nexport default Layout\n"],"sourceRoot":""}