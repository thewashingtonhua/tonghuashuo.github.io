{"data":{"site":{"siteMetadata":{"title":"童话说","keywords":["tonghuashuo","github","front-end","javascript","typescript","react","node","washington","hua","童话","童话说","前端","博客","技术","计算机","互联网"]}},"markdownRemark":{"html":"<!-- TODO: 父组件是 Hooks 时，情况是否会变？ -->\n<!-- 标明组合的情况，Function & Class / 同步 & 异步 / 父 & 子 => 共 8 种情况-->\n<h2>写在前面</h2>\n<p>React 组件的生命周期，相信大家都非常熟悉了，无非那么几个函数，官方文档也都写得非常清楚了。</p>\n<p>那还有什么好说的？这么基础的东西。</p>\n<p>一般我们所知道的，只是单个组件的生命周期。如果是父子组件呢？各个周期怎么走？同步路由呢？异步路由呢？前阵子新出的 Hooks 呢？有几个人敢站出来说我全知道的？（反正我是不敢）</p>\n<p>刚好也是最近遇到一些关于生命周期的问题，项目涉及到大量的异步操作，需要清楚地知道各部分的执行顺序。正好借此机会整理一下。</p>\n<h2>TL,DR;</h2>\n<ol>\n<li>同步路由，只有当子路由 mount 后，父路由才算 mount。</li>\n<li>异步路由，父路先自顾自 mount，然后才会创建子路由的内容。</li>\n<li>Hooks 的加载过程并无例外，但是 Effect 会在父组件挂载 / 更新之后运行。</li>\n<li>父组件更新导致子组件更新时：\n<code class=\"gatsby-code-text\">getSnapshotBeforeUpdate</code> 是子组件早于父组件调用，但</li>\n<li>组件切换的具体过程：</li>\n<li>父组件触发更新过程，执行 <code class=\"gatsby-code-text\">getDerivedStateFromProps</code> 和 <code class=\"gatsby-code-text\">render</code>.</li>\n<li>在父组件的 <code class=\"gatsby-code-text\">getSnapshotBeforeUpdate</code> 之前调用新子组件的 render.</li>\n<li>在父组件的 <code class=\"gatsby-code-text\">getSnapshotBeforeUpdate</code> 之后，<code class=\"gatsby-code-text\">componentDidUpdate</code> 之前，卸载旧的子组件。</li>\n<li>如果新组件使用了 useEffect，在父组件 <code class=\"gatsby-code-text\">componentDidUpdate</code> 之后执行 Effect。</li>\n</ol>\n<h2>同步路由</h2>\n<p>子组件先 didMount，父组件再 didMount</p>\n<h2>异步路由</h2>\n<p>父路由先 didMount，子路由再 didMount</p>\n<h2>Hooks</h2>\n<p>确切地说，Hooks 并不是一种新的组件写法，它只是一种代码复用的方式。这里讨论的本体其实是函数式组件。</p>\n<p>在 Hooks 之前，函数式组件是没有 state 的概念的，因此也就不存在生命周期一说，调用的时候只管执行就完了。但伴随着 Hooks 的到来，函数式组件也拥有了 state，因此讨论函数式组件的生命周期也便成了新的研究对象。</p>\n<blockquote>\n<p>严格说来，函数式组件本质是函数，「函数」是没有生命周期的，Hooks 的出现也并没有改变这一原理。这里我们讨论的是「组件」，「组件」是可以有生命周期的。</p>\n</blockquote>\n<p>函数式组件的生命周期和 Class 不太一样，它没有生命周期钩子函数，只管执行函数。</p>\n<p>具体到 Hooks 相关的部分，主要就是 useEffect、useLayout 的调用时机的问题。</p>","frontmatter":{"title":"说起 React 的生命周期，你或许还不知道……","description":"事情好像没那么简单","cover":{"publicURL":"/static/react-lifecycle-0edf69056144aaf512a28d0670b53b57.jpg"},"tags":["react","lifecycle"],"series":"","draft":true},"fields":{"id":"look-back-on-react-lifecycle","date":"2019-03-24T16:00:00.000Z"}}},"pageContext":{"slug":"/blog/2019/03/25/look-back-on-react-lifecycle"}}