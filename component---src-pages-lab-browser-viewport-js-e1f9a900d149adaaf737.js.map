{"version":3,"sources":["webpack:///./src/pages/lab/browser-viewport.js","webpack:///./src/config/index.ts","webpack:///./src/images/logo.png","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx"],"names":["BrowserViewport","props","_useState","useState","_useState2","Object","_Users_washingtonhua_Projects_me_tonghuashuo_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","innerWidth","setInnerWidth","_useState3","_useState4","innerHeight","setInnerHeight","_useState5","_useState6","outerWidth","setOuterWidth","_useState7","_useState8","outerHeight","setOuterHeight","_useState9","_useState10","clientWidth","setClientWidth","_useState11","_useState12","clientHeight","setClientHeight","_useState13","_useState14","screenWidth","setScreenWidth","_useState15","_useState16","screenHeight","setScreenHeight","_useState17","_useState18","screenAvailWidth","setScreenAvailWidth","_useState19","_useState20","screenAvailHeight","setScreenAvailHeight","_useState21","_useState22","screenOrientation","setScreenOrientation","_useState23","_useState24","screenDeviceXDPI","setScreenDeviceXDPI","_useState25","_useState26","devicePixelRatio","setDevicePixelRatio","getSize","window","document","documentElement","screen","width","height","availWidth","availHeight","msOrientation","orientation","mozOrientation","type","deviceXDPI","useEffect","addEventListener","removeEventListener","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","keywords","data","site","siteMetadata","className","href","cellSpacing","colSpan","query","__webpack_require__","d","__webpack_exports__","IS_PROD","process","module","exports","p","SEO","_props$description","description","_props$lang","lang","_props$meta","meta","_props$keywords","_props$title","_props$exactTitle","exactTitle","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","render","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","concat","name","content","property","author","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","menus","to","text","Header","slicedToArray","navMenuOpen","setNavMenuOpen","close","e","stopPropagation","isMenuActive","isMenuActiveProps","isPartiallyCurrent","react_default","Fragment","id","gatsby_browser_entry","src","logo","alt","onClick","map","n","key","getProps","Sentry","dsn","Layout","children","components_header","_755544856"],"mappings":"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","file":"component---src-pages-lab-browser-viewport-js-e1f9a900d149adaaf737.js","sourcesContent":["import React, { PureComponent, useEffect, useState } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../../components/layout'\nimport SEO from '../../components/seo'\nimport './lab.scss'\nimport { GatsbyDataProps } from '../../utils/interface'\n\nconst BrowserViewport = (props: GatsbyDataProps) => {\n  const [innerWidth, setInnerWidth] = useState('')\n  const [innerHeight, setInnerHeight] = useState('')\n  const [outerWidth, setOuterWidth] = useState('')\n  const [outerHeight, setOuterHeight] = useState('')\n  const [clientWidth, setClientWidth] = useState('')\n  const [clientHeight, setClientHeight] = useState('')\n  const [screenWidth, setScreenWidth] = useState('')\n  const [screenHeight, setScreenHeight] = useState('')\n  const [screenAvailWidth, setScreenAvailWidth] = useState('')\n  const [screenAvailHeight, setScreenAvailHeight] = useState('')\n  const [screenOrientation, setScreenOrientation] = useState('')\n  const [screenDeviceXDPI, setScreenDeviceXDPI] = useState('')\n  const [devicePixelRatio, setDevicePixelRatio] = useState('')\n\n  const getSize = () => {\n    setInnerWidth(window.innerWidth + ' px')\n    setInnerHeight(window.innerHeight + ' px')\n    setOuterWidth(window.outerWidth + ' px')\n    setOuterHeight(window.outerHeight + ' px')\n    setClientWidth(document.documentElement.clientWidth + ' px')\n    setClientHeight(document.documentElement.clientHeight + ' px')\n    setScreenWidth(window.screen.width + ' px')\n    setScreenHeight(window.screen.height + ' px')\n    setScreenAvailWidth(window.screen.availWidth + ' px')\n    setScreenAvailHeight(window.screen.availHeight + ' px')\n    setScreenOrientation(screen.msOrientation || (screen.orientation || screen.mozOrientation || {}).type)\n    setScreenDeviceXDPI(window.screen.deviceXDPI ? (window.screen.deviceXDPI + ' px') : 'N/A')\n    setDevicePixelRatio(window.devicePixelRatio + '')\n  }\n\n  useEffect(() => {\n    getSize()\n\n    window.addEventListener('resize', getSize)\n\n    return () => {\n      window.removeEventListener('resize', getSize)\n    }\n  }, [])\n\n  return (\n    <Layout>\n      <SEO\n        title='Viewport | 实验室'\n        keywords={props.data.site.siteMetadata.keywords}\n      />\n      <div className='mf-content lab-item'>\n        <article>\n          <a href='/lab' className='back'>&laquo; Back</a>\n\n          <h1>Viewport</h1>\n\n          <table cellSpacing={0}>\n            <tbody>\n\n              <tr className='title'>\n                <td colSpan={2}>Content</td>\n              </tr>\n              <tr>\n                <td>document.documentElement.clientWidth (No ScrollBar)</td>\n                <td>{clientWidth}</td>\n              </tr>\n              <tr>\n                <td>document.documentElement.clientHeight (No TopBar, No DevTool)</td>\n                <td>{clientHeight}</td>\n              </tr>\n\n              <tr className='title'>\n                <td colSpan={2}>Browser</td>\n              </tr>\n              <tr>\n                <td>window.innerWidth</td>\n                <td>{innerWidth}</td>\n              </tr>\n              <tr>\n                <td>window.innerHeight (No TopBar, No DevTool)</td>\n                <td>{innerHeight}</td>\n              </tr>\n              <tr>\n                <td>window.outerWidth</td>\n                <td>{outerWidth}</td>\n              </tr>\n              <tr>\n                <td>window.outerHeight</td>\n                <td>{outerHeight}</td>\n              </tr>\n\n              <tr className='title'>\n                <td colSpan={2}>Device</td>\n              </tr>\n              <tr>\n                <td>window.screen.width</td>\n                <td>{screenWidth}</td>\n              </tr>\n              <tr>\n                <td>window.screen.height</td>\n                <td>{screenHeight}</td>\n              </tr>\n              <tr>\n                <td>window.screen.availWidth</td>\n                <td>{screenAvailWidth}</td>\n              </tr>\n              <tr>\n                <td>window.screen.availHeight (No TopBar)</td>\n                <td>{screenAvailHeight}</td>\n              </tr>\n              <tr>\n                <td>window.screen.orientation</td>\n                <td>{screenOrientation}</td>\n              </tr>\n              <tr>\n                <td>window.screen.deviceXDPI (IE Only)</td>\n                <td>{screenDeviceXDPI}</td>\n              </tr>\n              <tr>\n                <td>window.devicePixelRatio</td>\n                <td>{devicePixelRatio}</td>\n              </tr>\n            </tbody>\n          </table>\n        </article>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BrowserViewport\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n}`\n","export const IS_PROD = process.env.NODE_ENV === 'production'\n\nexport const DEBUG_MODE = !IS_PROD\n","module.exports = __webpack_public_path__ + \"static/logo-8503f6989dba3ce27939964a48c8b787.png\";","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ninterface SEOProps {\n  description?: string,\n  lang?: string,\n  meta?: { name: string; content: any; property?: undefined; } | { property: string; content: any; name?: undefined; } | ConcatArray<{ name: string; content: any; property?: undefined; } | { property: string; content: any; name?: undefined; }>,\n  keywords?: string[],\n  title?: string,\n  exactTitle?: boolean\n}\n\nconst SEO = (props: SEOProps) => {\n  const { description = '', lang = `zh`, meta = [], keywords = [], title = '', exactTitle = false } = props\n\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || data.site.siteMetadata.description\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={exactTitle ? '' : `%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              }\n            ].concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                : []\n            )\n            .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { useState, MouseEvent } from 'react'\nimport { Link } from 'gatsby'\nimport logo from '../images/logo.png'\nimport './header.scss'\nimport { LinkGetProps } from '@reach/router';\n\nconst menus = [\n  { to: '/blog', text: '博客' },\n  { to: '/project', text: '代表作' },\n  { to: '/lab', text: '实验室' },\n  { to: '/friend', text: '朋友' },\n  { to: '/about', text: '我' }\n]\n\nconst Header = () => {\n\n  const [navMenuOpen, setNavMenuOpen] = useState(false)\n\n  function toggle (e: MouseEvent) {\n    e && e.stopPropagation()\n    setNavMenuOpen(!navMenuOpen)\n  }\n\n  function close (e: MouseEvent) {\n    e && e.stopPropagation()\n    setNavMenuOpen(false)\n  }\n\n  function isMenuActive (isMenuActiveProps: LinkGetProps) {\n    const { isPartiallyCurrent } = isMenuActiveProps\n    return isPartiallyCurrent\n      ? { className: 'menu-link active' }\n      : { className: 'menu-link' }\n  }\n\n  return (\n    <>\n      <header id='mf-header'>\n        <div className='mf-header-wrapper'>\n          <Link to='/' className='logo'>\n            <img src={logo} alt=''/>\n            <span>童话说</span>\n          </Link>\n          <div className={'hamberger' + (navMenuOpen ? ' open' : '')} onClick={toggle}>\n            <div className='bar' />\n            <div className='bar' />\n            <div className='bar' />\n          </div>\n          <nav className={'nav-menu' + (navMenuOpen ? ' open' : '')}>\n            <ul className='menus'>\n              { menus.map(n => (\n                <li className='menu' key={n.to}>\n                  <Link\n                    to={n.to}\n                    getProps={isMenuActive}\n                    onClick={close}\n                  >{n.text}</Link>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </div>\n      </header>\n      <section id='mf-header-placeholder' />\n    </>\n  )\n}\n\nexport default Header\n","import React, { ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport * as Sentry from '@sentry/browser'\nimport 'normalize-scss/sass/normalize/_import-now.scss'\nimport './layout.scss'\nimport Header from './header'\nimport { IS_PROD } from 'config';\n\nif (IS_PROD) {\n  Sentry.init({\n    dsn: 'https://9638de4372be4acebf892d0732a86a4a@sentry.io/1450204'\n  })\n}\n\ninterface LayoutProps {\n  children?: ReactNode\n}\n\nconst Layout = (props: LayoutProps) => {\n  const { children } = props\n\n  return <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header />\n        <main>\n          {children}\n        </main>\n      </>\n    )}\n  />\n}\n\nexport default Layout\n"],"sourceRoot":""}