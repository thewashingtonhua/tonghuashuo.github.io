{"version":3,"sources":["webpack:///./src/pages/toolbox/html5-geolocation.tsx"],"names":["ERROR_TPYE","undefined","HTML5Geolocation","useState","latitude","setLatitude","longitude","setLongitude","accuracy","setAccuracy","altitude","setAltitude","altitudeAccuracy","setAltitudeAccuracy","heading","setHeading","speed","setSpeed","error","setError","useEffect","navigator","geolocation","getCurrentPosition","position","coords","code","enableHighAccuracy","title","id"],"mappings":"2KAIMA,G,UAAa,MACjBC,EACA,iBACA,iCACA,YAsDaC,UAnDc,WAAM,MACDC,mBAAsB,MADrB,mBAC1BC,EAD0B,KAChBC,EADgB,OAECF,mBAAsB,MAFvB,mBAE1BG,EAF0B,KAEfC,EAFe,OAGDJ,mBAAsB,MAHrB,mBAG1BK,EAH0B,KAGhBC,EAHgB,OAIDN,mBAAsB,MAJrB,mBAI1BO,EAJ0B,KAIhBC,EAJgB,OAKeR,mBAAsB,MALrC,mBAK1BS,EAL0B,KAKRC,EALQ,OAMHV,mBAAsB,MANnB,mBAM1BW,EAN0B,KAMjBC,EANiB,OAOPZ,mBAAsB,MAPf,mBAO1Ba,EAP0B,KAOnBC,EAPmB,OAQPd,mBAAS,IARF,mBAQ1Be,EAR0B,KAQnBC,EARmB,KAkCjC,OAxBAC,qBAAU,WACJC,UAAUC,YACZD,UAAUC,YAAYC,oBACpB,SAAAC,GAEEnB,EAAYmB,EAASC,OAAOrB,UAC5BG,EAAaiB,EAASC,OAAOnB,WAC7BG,EAAYe,EAASC,OAAOjB,UAC5BG,EAAYa,EAASC,OAAOf,UAC5BG,EAAoBW,EAASC,OAAOb,kBACpCG,EAAWS,EAASC,OAAOX,SAC3BG,EAASO,EAASC,OAAOT,UAE3B,SAAAE,GACEA,EAAMQ,KACNP,EAAS,WAAanB,EAAWkB,EAAMQ,SAEzC,CAAEC,oBAAoB,IAGxBR,EAAS,2DAEV,IAGD,kBAAC,IAAD,CAAeS,MAAM,gBACnB,2CAEA,wCAAcxB,GACd,0CAAgBE,GAChB,wCAAcE,GACd,wCAAcE,GACd,iDAAuBE,GACvB,uCAAaE,GACb,qCAAWE,GAEX,uBAAGa,GAAG,SAASX","file":"component---src-pages-toolbox-html-5-geolocation-tsx-95d03cb17d068827f316.js","sourcesContent":["import React, { FC, useState, useEffect } from 'react'\nimport { ToolboxLayout } from '../../components'\nimport './tool.scss'\n\nconst ERROR_TPYE = [\n  undefined,\n  'service denied',\n  'cannot access geolocation info',\n  'timeout'\n]\n\nconst HTML5Geolocation: FC = () => {\n  const [latitude, setLatitude] = useState<number|null>(null)\n  const [longitude, setLongitude] = useState<number|null>(null)\n  const [accuracy, setAccuracy] = useState<number|null>(null)\n  const [altitude, setAltitude] = useState<number|null>(null)\n  const [altitudeAccuracy, setAltitudeAccuracy] = useState<number|null>(null)\n  const [heading, setHeading] = useState<number|null>(null)\n  const [speed, setSpeed] = useState<number|null>(null)\n  const [error, setError] = useState('')\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          // 经纬度数值为正数表示东经、北纬，负数表示西经南纬，遵循直角坐标系\n          setLatitude(position.coords.latitude)\n          setLongitude(position.coords.longitude)\n          setAccuracy(position.coords.accuracy)\n          setAltitude(position.coords.altitude)\n          setAltitudeAccuracy(position.coords.altitudeAccuracy)\n          setHeading(position.coords.heading)\n          setSpeed(position.coords.speed)\n        },\n        error => {\n          error.code\n          setError('[Error] ' + ERROR_TPYE[error.code])\n        },\n        { enableHighAccuracy: true }\n      )\n    } else {\n      setError('[Error] Geolocation is not supported on this browser.')\n    }\n  }, [])\n\n  return (\n    <ToolboxLayout title='Geolocation '>\n      <h1>Geolocation</h1>\n\n      <p>Latitude: {latitude}</p>\n      <p>Longtitude: {longitude}</p>\n      <p>Accuracy: {accuracy}</p>\n      <p>Altitude: {altitude}</p>\n      <p>Altitude Accuracy: {altitudeAccuracy}</p>\n      <p>Heading: {heading}</p>\n      <p>Speed: {speed}</p>\n\n      <p id='error'>{error}</p>\n    </ToolboxLayout>\n  )\n}\n\nexport default HTML5Geolocation\n"],"sourceRoot":""}