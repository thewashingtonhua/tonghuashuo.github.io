{"version":3,"sources":["webpack:///./src/pages/lab.tsx"],"names":["labs","category","url","title","LabPage","props","data","categories","Array","from","Set","map","n","keywords","site","siteMetadata","className","key","filter","lab","to","query"],"mappings":"4FAAA,8FAMMA,GANN,UAMa,CACX,CACEC,SAAU,UACVC,IAAK,kBACLC,MAAO,cAET,CACEF,SAAU,UACVC,IAAK,wBACLC,MAAO,YAET,CACEF,SAAU,QACVC,IAAK,oBACLC,MAAO,UAET,CACEF,SAAU,QACVC,IAAK,yBACLC,MAAO,eAET,CACEF,SAAU,QACVC,IAAK,mBACLC,MAAO,cAET,CACEF,SAAU,QACVC,IAAK,wBACLC,MAAO,cAET,CACEF,SAAU,QACVC,IAAK,oBACLC,MAAO,YAiCIC,UA7BsB,SAACC,GAAU,IACtCC,EAASD,EAATC,KAEFC,EAAaC,MAAMC,KAAK,IAAIC,IAAIV,EAAKW,KAAI,SAAAC,GAAC,OAAIA,EAAEX,cAEtD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEE,MAAM,KACNU,SAAUP,EAAKQ,KAAKC,aAAaF,WAEnC,yBAAKG,UAAU,0BAEXT,EAAWI,KAAI,SAAAV,GAAQ,OACvB,kBAAC,WAAD,CAAUgB,IAAKhB,GACb,4BAAKA,GACL,yBAAKe,UAAU,YACXhB,EAAKkB,QAAO,SAAAN,GAAC,OAAIA,EAAEX,WAAaA,KAAUU,KAAI,SAAAQ,GAAG,OACjD,kBAAC,OAAD,CAAMF,IAAKE,EAAIjB,IAAKc,UAAU,OAAOI,GAAID,EAAIjB,KAAMiB,EAAIhB,kBAahE,IAAMkB,EAAQ","file":"component---src-pages-lab-tsx-79ee157e6b72085c092a.js","sourcesContent":["import React, { Fragment, FC } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { Layout, SEO } from '../components'\nimport './lab.scss'\nimport { GatsbyDataProps } from '../utils/interface'\n\nconst labs = [\n  {\n    category: \"Browser\",\n    url: \"/lab/browser-ua\",\n    title: \"User Agent\"\n  },\n  {\n    category: \"Browser\",\n    url: \"/lab/browser-viewport\",\n    title: \"Viewport\"\n  },\n  {\n    category: \"HTML5\",\n    url: \"/lab/html5-canvas\",\n    title: \"Canvas\"\n  },\n  {\n    category: \"HTML5\",\n    url: \"/lab/html5-geolocation\",\n    title: \"Geolocation\"\n  },\n  {\n    category: \"HTML5\",\n    url: \"/lab/html5-input\",\n    title: \"Input Type\"\n  },\n  {\n    category: \"HTML5\",\n    url: \"/lab/html5-connection\",\n    title: \"Connection\"\n  },\n  {\n    category: \"HTML5\",\n    url: \"/lab/html5-online\",\n    title: \"Online\"\n  }\n]\n\nconst LabPage: FC<GatsbyDataProps> = (props) => {\n  const { data } = props\n\n  const categories = Array.from(new Set(labs.map(n => n.category)))\n\n  return (\n    <Layout>\n      <SEO\n        title='工具'\n        keywords={data.site.siteMetadata.keywords}\n      />\n      <div className='mf-content lab-catalog'>\n\n        { categories.map(category => (\n          <Fragment key={category}>\n            <h1>{category}</h1>\n            <div className='category'>\n              { labs.filter(n => n.category === category).map(lab => (\n                <Link key={lab.url} className='item' to={lab.url}>{lab.title}</Link>\n              )) }\n            </div>\n          </Fragment>\n        ))}\n\n      </div>\n    </Layout>\n  )\n}\n\nexport default LabPage\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n}`\n"],"sourceRoot":""}