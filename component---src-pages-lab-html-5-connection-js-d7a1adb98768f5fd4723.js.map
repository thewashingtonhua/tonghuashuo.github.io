{"version":3,"sources":["webpack:///./src/pages/lab/html5-connection.js","webpack:///./src/config/index.ts","webpack:///./src/images/logo.png","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx"],"names":["HTML5Connection","props","_useState","useState","_useState2","Object","_Users_washingtonhua_Projects_me_tonghuashuo_github_io_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","connectionType","setConnectionType","useEffect","_connection","getConnectionType","connection","navigator","mozConnection","webkitConnection","type","effectiveType","filter","Boolean","join","addEventListener","removeEventListener","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","keywords","data","site","siteMetadata","className","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","id","query","__webpack_require__","d","__webpack_exports__","IS_PROD","process","module","exports","p","SEO","_props$description","description","_props$lang","lang","_props$meta","meta","_props$keywords","_props$title","_props$exactTitle","exactTitle","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","render","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","concat","name","content","property","author","length","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","menus","text","Header","slicedToArray","navMenuOpen","setNavMenuOpen","close","e","stopPropagation","isMenuActive","isMenuActiveProps","isPartiallyCurrent","react_default","Fragment","gatsby_browser_entry","src","logo","alt","onClick","map","n","key","getProps","Sentry","dsn","Layout","children","components_header","_755544856"],"mappings":"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","file":"component---src-pages-lab-html-5-connection-js-d7a1adb98768f5fd4723.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../../components/layout'\nimport SEO from '../../components/seo'\nimport './lab.scss'\nimport { GatsbyDataProps } from '../../utils/interface'\n\nconst HTML5Connection = (props: GatsbyDataProps) => {\n  const [connectionType, setConnectionType] = useState('unknown')\n\n  useEffect(() => {\n    let _connection = null\n\n    function getConnectionType () {\n      const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection\n      if (connection) {\n        _connection = connection\n        const { type, effectiveType } = connection\n        setConnectionType([type, effectiveType].filter(Boolean).join(' / '))\n      }\n    }\n\n    getConnectionType()\n\n    _connection && _connection.addEventListener('change', getConnectionType)\n\n    return () => {\n      _connection && _connection.removeEventListener('change', getConnectionType)\n    }\n  }, [])\n\n  return (\n    <Layout>\n      <SEO\n        title='Connection | 实验室'\n        keywords={props.data.site.siteMetadata.keywords}\n      />\n      <div className='mf-content lab-item'>\n\n        <article>\n          <Link to='/lab' className='back'>&laquo; Back</Link>\n\n          <h1>Connection</h1>\n\n          <p>Type: <span id='type'>{connectionType}</span></p>\n        </article>\n\n      </div>\n    </Layout>\n  )\n}\n\nexport default HTML5Connection\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n}`\n","export const IS_PROD = process.env.NODE_ENV === 'production'\n\nexport const DEBUG_MODE = !IS_PROD\n","module.exports = __webpack_public_path__ + \"static/logo-8503f6989dba3ce27939964a48c8b787.png\";","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ninterface SEOProps {\n  description?: string,\n  lang?: string,\n  meta?: { name: string; content: any; property?: undefined; } | { property: string; content: any; name?: undefined; } | ConcatArray<{ name: string; content: any; property?: undefined; } | { property: string; content: any; name?: undefined; }>,\n  keywords?: string[],\n  title?: string,\n  exactTitle?: boolean\n}\n\nconst SEO = (props: SEOProps) => {\n  const { description = '', lang = `zh`, meta = [], keywords = [], title = '', exactTitle = false } = props\n\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || data.site.siteMetadata.description\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={exactTitle ? '' : `%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              }\n            ].concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                : []\n            )\n            .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { useState, MouseEvent } from 'react'\nimport { Link } from 'gatsby'\nimport logo from '../images/logo.png'\nimport './header.scss'\nimport { LinkGetProps } from '@reach/router';\n\nconst menus = [\n  { to: '/blog', text: '博客' },\n  { to: '/project', text: '代表作' },\n  { to: '/lab', text: '实验室' },\n  { to: '/friend', text: '朋友' },\n  { to: '/about', text: '我' }\n]\n\nconst Header = () => {\n\n  const [navMenuOpen, setNavMenuOpen] = useState(false)\n\n  function toggle (e: MouseEvent) {\n    e && e.stopPropagation()\n    setNavMenuOpen(!navMenuOpen)\n  }\n\n  function close (e: MouseEvent) {\n    e && e.stopPropagation()\n    setNavMenuOpen(false)\n  }\n\n  function isMenuActive (isMenuActiveProps: LinkGetProps) {\n    const { isPartiallyCurrent } = isMenuActiveProps\n    return isPartiallyCurrent\n      ? { className: 'menu-link active' }\n      : { className: 'menu-link' }\n  }\n\n  return (\n    <>\n      <header id='mf-header'>\n        <div className='mf-header-wrapper'>\n          <Link to='/' className='logo'>\n            <img src={logo} alt=''/>\n            <span>童话说</span>\n          </Link>\n          <div className={'hamberger' + (navMenuOpen ? ' open' : '')} onClick={toggle}>\n            <div className='bar' />\n            <div className='bar' />\n            <div className='bar' />\n          </div>\n          <nav className={'nav-menu' + (navMenuOpen ? ' open' : '')}>\n            <ul className='menus'>\n              { menus.map(n => (\n                <li className='menu' key={n.to}>\n                  <Link\n                    to={n.to}\n                    getProps={isMenuActive}\n                    onClick={close}\n                  >{n.text}</Link>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </div>\n      </header>\n      <section id='mf-header-placeholder' />\n    </>\n  )\n}\n\nexport default Header\n","import React, { ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport * as Sentry from '@sentry/browser'\nimport 'normalize-scss/sass/normalize/_import-now.scss'\nimport './layout.scss'\nimport Header from './header'\nimport { IS_PROD } from 'config';\n\nif (IS_PROD) {\n  Sentry.init({\n    dsn: 'https://9638de4372be4acebf892d0732a86a4a@sentry.io/1450204'\n  })\n}\n\ninterface LayoutProps {\n  children?: ReactNode\n}\n\nconst Layout = (props: LayoutProps) => {\n  const { children } = props\n\n  return <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header />\n        <main>\n          {children}\n        </main>\n      </>\n    )}\n  />\n}\n\nexport default Layout\n"],"sourceRoot":""}