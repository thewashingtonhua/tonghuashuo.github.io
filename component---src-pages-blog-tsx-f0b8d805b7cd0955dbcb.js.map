{"version":3,"sources":["webpack:///./node_modules/dayjs/dayjs.min.js","webpack:///./src/pages/blog.tsx","webpack:///./src/config/index.ts","webpack:///./src/images/logo.png","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx"],"names":["module","exports","t","n","e","r","i","s","u","o","a","h","f","c","String","length","Array","join","d","z","utcOffset","Math","abs","floor","m","year","month","clone","add","Number","ceil","p","M","y","w","ms","Q","toLowerCase","replace","$","name","weekdays","split","months","l","v","g","format","pl","date","D","locale","$L","utc","$u","this","parse","prototype","$d","Date","NaN","test","match","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","toString","isSame","startOf","endOf","isAfter","isBefore","$g","set","day","hour","minute","second","millisecond","unix","valueOf","getTime","toDate","apply","slice","$locale","weekStart","$set","min","daysInMonth","get","round","subtract","substr","meridiem","YY","YYYY","MM","MMM","monthsShort","MMMM","DD","dd","weekdaysMin","ddd","weekdaysShort","dddd","H","HH","hh","A","mm","ss","SSS","Z","getTimezoneOffset","diff","toJSON","toISOString","toUTCString","extend","isDayjs","en","Ls","__webpack_require__","__webpack_exports__","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","dayjs__WEBPACK_IMPORTED_MODULE_2__","dayjs__WEBPACK_IMPORTED_MODULE_2___default","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","_config__WEBPACK_IMPORTED_MODULE_6__","BottomLine","props","createElement","className","text","data","blogs","allMarkdownRemark","edges","map","node","filter","fields","type","IS_PROD","frontmatter","draft","sort","x","title","keywords","site","siteMetadata","cover","publicURL","dayjs","to","slug","key","id","src","alt","description","dateTime","process","SEO","_props$description","_props$lang","lang","_props$meta","meta","_props$keywords","_props$title","_props$exactTitle","exactTitle","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","render","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","concat","content","property","author","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","menus","Header","_useState","useState","_useState2","Object","slicedToArray","navMenuOpen","setNavMenuOpen","close","stopPropagation","isMenuActive","isMenuActiveProps","isPartiallyCurrent","react_default","Fragment","gatsby_browser_entry","logo","onClick","getProps","Sentry","dsn","Layout","children","components_header","_755544856"],"mappings":"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","file":"component---src-pages-blog-tsx-f0b8d805b7cd0955dbcb.js","sourcesContent":["!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):t.dayjs=n()}(this,function(){\"use strict\";var t=\"millisecond\",n=\"second\",e=\"minute\",r=\"hour\",i=\"day\",s=\"week\",u=\"month\",o=\"quarter\",a=\"year\",h=/^(\\d{4})-?(\\d{1,2})-?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?.?(\\d{1,3})?$/,f=/\\[([^\\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,c=function(t,n,e){var r=String(t);return!r||r.length>=n?t:\"\"+Array(n+1-r.length).join(e)+t},d={s:c,z:function(t){var n=-t.utcOffset(),e=Math.abs(n),r=Math.floor(e/60),i=e%60;return(n<=0?\"+\":\"-\")+c(r,2,\"0\")+\":\"+c(i,2,\"0\")},m:function(t,n){var e=12*(n.year()-t.year())+(n.month()-t.month()),r=t.clone().add(e,u),i=n-r<0,s=t.clone().add(e+(i?-1:1),u);return Number(-(e+(n-r)/(i?r-s:s-r))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(h){return{M:u,y:a,w:s,d:i,h:r,m:e,s:n,ms:t,Q:o}[h]||String(h||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},$={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},l=\"en\",m={};m[l]=$;var y=function(t){return t instanceof v},M=function(t,n,e){var r;if(!t)return null;if(\"string\"==typeof t)m[t]&&(r=t),n&&(m[t]=n,r=t);else{var i=t.name;m[i]=t,r=i}return e||(l=r),r},g=function(t,n,e){if(y(t))return t.clone();var r=n?\"string\"==typeof n?{format:n,pl:e}:n:{};return r.date=t,new v(r)},D=d;D.l=M,D.i=y,D.w=function(t,n){return g(t,{locale:n.$L,utc:n.$u})};var v=function(){function c(t){this.$L=this.$L||M(t.locale,null,!0)||l,this.parse(t)}var d=c.prototype;return d.parse=function(t){this.$d=function(t){var n=t.date,e=t.utc;if(null===n)return new Date(NaN);if(D.u(n))return new Date;if(n instanceof Date)return new Date(n);if(\"string\"==typeof n&&!/Z$/i.test(n)){var r=n.match(h);if(r)return e?new Date(Date.UTC(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)):new Date(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)}return new Date(n)}(t),this.init()},d.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},d.$utils=function(){return D},d.isValid=function(){return!(\"Invalid Date\"===this.$d.toString())},d.isSame=function(t,n){var e=g(t);return this.startOf(n)<=e&&e<=this.endOf(n)},d.isAfter=function(t,n){return g(t)<this.startOf(n)},d.isBefore=function(t,n){return this.endOf(n)<g(t)},d.$g=function(t,n,e){return D.u(t)?this[n]:this.set(e,t)},d.year=function(t){return this.$g(t,\"$y\",a)},d.month=function(t){return this.$g(t,\"$M\",u)},d.day=function(t){return this.$g(t,\"$W\",i)},d.date=function(t){return this.$g(t,\"$D\",\"date\")},d.hour=function(t){return this.$g(t,\"$H\",r)},d.minute=function(t){return this.$g(t,\"$m\",e)},d.second=function(t){return this.$g(t,\"$s\",n)},d.millisecond=function(n){return this.$g(n,\"$ms\",t)},d.unix=function(){return Math.floor(this.valueOf()/1e3)},d.valueOf=function(){return this.$d.getTime()},d.startOf=function(t,o){var h=this,f=!!D.u(o)||o,c=D.p(t),d=function(t,n){var e=D.w(h.$u?Date.UTC(h.$y,n,t):new Date(h.$y,n,t),h);return f?e:e.endOf(i)},$=function(t,n){return D.w(h.toDate()[t].apply(h.toDate(),(f?[0,0,0,0]:[23,59,59,999]).slice(n)),h)},l=this.$W,m=this.$M,y=this.$D,M=\"set\"+(this.$u?\"UTC\":\"\");switch(c){case a:return f?d(1,0):d(31,11);case u:return f?d(1,m):d(0,m+1);case s:var g=this.$locale().weekStart||0,v=(l<g?l+7:l)-g;return d(f?y-v:y+(6-v),m);case i:case\"date\":return $(M+\"Hours\",0);case r:return $(M+\"Minutes\",1);case e:return $(M+\"Seconds\",2);case n:return $(M+\"Milliseconds\",3);default:return this.clone()}},d.endOf=function(t){return this.startOf(t,!1)},d.$set=function(s,o){var h,f=D.p(s),c=\"set\"+(this.$u?\"UTC\":\"\"),d=(h={},h[i]=c+\"Date\",h.date=c+\"Date\",h[u]=c+\"Month\",h[a]=c+\"FullYear\",h[r]=c+\"Hours\",h[e]=c+\"Minutes\",h[n]=c+\"Seconds\",h[t]=c+\"Milliseconds\",h)[f],$=f===i?this.$D+(o-this.$W):o;if(f===u||f===a){var l=this.clone().set(\"date\",1);l.$d[d]($),l.init(),this.$d=l.set(\"date\",Math.min(this.$D,l.daysInMonth())).toDate()}else d&&this.$d[d]($);return this.init(),this},d.set=function(t,n){return this.clone().$set(t,n)},d.get=function(t){return this[D.p(t)]()},d.add=function(t,o){var h,f=this;t=Number(t);var c=D.p(o),d=function(n){var e=g(f);return D.w(e.date(e.date()+Math.round(n*t)),f)};if(c===u)return this.set(u,this.$M+t);if(c===a)return this.set(a,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(h={},h[e]=6e4,h[r]=36e5,h[n]=1e3,h)[c]||1,l=this.valueOf()+t*$;return D.w(l,this)},d.subtract=function(t,n){return this.add(-1*t,n)},d.format=function(t){var n=this;if(!this.isValid())return\"Invalid Date\";var e=t||\"YYYY-MM-DDTHH:mm:ssZ\",r=D.z(this),i=this.$locale(),s=this.$H,u=this.$m,o=this.$M,a=i.weekdays,h=i.months,c=function(t,r,i,s){return t&&(t[r]||t(n,e))||i[r].substr(0,s)},d=function(t){return D.s(s%12||12,t,\"0\")},$=i.meridiem||function(t,n,e){var r=t<12?\"AM\":\"PM\";return e?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:o+1,MM:D.s(o+1,2,\"0\"),MMM:c(i.monthsShort,o,h,3),MMMM:h[o]||h(this,e),D:this.$D,DD:D.s(this.$D,2,\"0\"),d:String(this.$W),dd:c(i.weekdaysMin,this.$W,a,2),ddd:c(i.weekdaysShort,this.$W,a,3),dddd:a[this.$W],H:String(s),HH:D.s(s,2,\"0\"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:String(u),mm:D.s(u,2,\"0\"),s:String(this.$s),ss:D.s(this.$s,2,\"0\"),SSS:D.s(this.$ms,3,\"0\"),Z:r};return e.replace(f,function(t,n){return n||l[t]||r.replace(\":\",\"\")})},d.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},d.diff=function(t,h,f){var c,d=D.p(h),$=g(t),l=6e4*($.utcOffset()-this.utcOffset()),m=this-$,y=D.m(this,$);return y=(c={},c[a]=y/12,c[u]=y,c[o]=y/3,c[s]=(m-l)/6048e5,c[i]=(m-l)/864e5,c[r]=m/36e5,c[e]=m/6e4,c[n]=m/1e3,c)[d]||m,f?y:D.a(y)},d.daysInMonth=function(){return this.endOf(u).$D},d.$locale=function(){return m[this.$L]},d.locale=function(t,n){if(!t)return this.$L;var e=this.clone();return e.$L=M(t,n,!0),e},d.clone=function(){return D.w(this.toDate(),this)},d.toDate=function(){return new Date(this.$d)},d.toJSON=function(){return this.toISOString()},d.toISOString=function(){return this.$d.toISOString()},d.toString=function(){return this.$d.toUTCString()},c}();return g.prototype=v.prototype,g.extend=function(t,n){return t(n,v,g),g},g.locale=M,g.isDayjs=y,g.unix=function(t){return g(1e3*t)},g.en=m[l],g.Ls=m,g});\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport dayjs from 'dayjs'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport './blog.scss'\nimport { IS_PROD } from '../config'\nimport { GatsbyDataProps } from '../utils/interface'\n\nconst BottomLine = (props: { text: string }) => (\n  <div className='bottom-line'><span>{props.text}</span></div>\n)\n\nexport default (props: GatsbyDataProps) => {\n  const { data } = props\n  const nodes = data.allMarkdownRemark.edges.map(n => n.node)\n  const blogs = nodes\n    .filter(node => node.fields.type === 'blog')\n    .filter(node => !IS_PROD || !node.frontmatter.draft)\n    .sort((x, y) => new Date(y.fields.date).getTime() - new Date(x.fields.date).getTime())\n\n  return (\n    <Layout>\n      <SEO\n        title='博客'\n        keywords={data.site.siteMetadata.keywords}\n      />\n      <div className='mf-content blog-catalog'>\n        <div className='blog-list'>\n          { blogs.map(node => {\n            const cover = node.frontmatter.cover\n              ? node.frontmatter.cover.publicURL\n              : ''\n            const date = dayjs(node.fields.date).format('MMM DD, YYYY')\n            return (\n              <Link className={'blog' + (node.frontmatter.draft ? ' draft' : '')} to={node.fields.slug} key={node.id} id={node.fields.id}>\n                <div className='banner'>\n                  <img src={cover} alt='' />\n                </div>\n                <div className='info'>\n                  <p className='title'>{node.frontmatter.title}</p>\n                  <p className='desc'>{node.frontmatter.description}</p>\n                  <footer className='blog__footer'>\n                    <p className='date'>\n                      <time dateTime='{blog.node.fields.date}'>{date}</time>\n                    </p>\n                    {/* <p className='tags'>Tags: {blog.node.frontmatter.tags.join(', ')}</p> */}\n                  </footer>\n                </div>\n              </Link>\n            )\n          })}\n        </div>\n        <BottomLine text='The End' />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n  allMarkdownRemark {\n    totalCount\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          description\n          tags\n          cover {\n            publicURL\n          }\n          series\n          draft\n          original\n        }\n        fields {\n          id\n          slug\n          type\n          date\n        }\n      }\n    }\n  }\n}`\n","export const IS_PROD = process.env.NODE_ENV === 'production'\n\nexport const DEBUG_MODE = !IS_PROD\n","module.exports = __webpack_public_path__ + \"static/logo-8503f6989dba3ce27939964a48c8b787.png\";","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ninterface SEOProps {\n  description?: string,\n  lang?: string,\n  meta?: { name: string; content: any; property?: undefined; } | { property: string; content: any; name?: undefined; } | ConcatArray<{ name: string; content: any; property?: undefined; } | { property: string; content: any; name?: undefined; }>,\n  keywords?: string[],\n  title?: string,\n  exactTitle?: boolean\n}\n\nconst SEO = (props: SEOProps) => {\n  const { description = '', lang = `zh`, meta = [], keywords = [], title = '', exactTitle = false } = props\n\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || data.site.siteMetadata.description\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={exactTitle ? '' : `%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              }\n            ].concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                : []\n            )\n            .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { useState, MouseEvent } from 'react'\nimport { Link } from 'gatsby'\nimport logo from '../images/logo.png'\nimport './header.scss'\nimport { LinkGetProps } from '@reach/router';\n\nconst menus = [\n  { to: '/blog', text: '博客' },\n  { to: '/project', text: '代表作' },\n  { to: '/lab', text: '实验室' },\n  { to: '/friend', text: '朋友' },\n  { to: '/about', text: '我' }\n]\n\nconst Header = () => {\n\n  const [navMenuOpen, setNavMenuOpen] = useState(false)\n\n  function toggle (e: MouseEvent) {\n    e && e.stopPropagation()\n    setNavMenuOpen(!navMenuOpen)\n  }\n\n  function close (e: MouseEvent) {\n    e && e.stopPropagation()\n    setNavMenuOpen(false)\n  }\n\n  function isMenuActive (isMenuActiveProps: LinkGetProps) {\n    const { isPartiallyCurrent } = isMenuActiveProps\n    return isPartiallyCurrent\n      ? { className: 'menu-link active' }\n      : { className: 'menu-link' }\n  }\n\n  return (\n    <>\n      <header id='mf-header'>\n        <div className='mf-header-wrapper'>\n          <Link to='/' className='logo'>\n            <img src={logo} alt=''/>\n            <span>童话说</span>\n          </Link>\n          <div className={'hamberger' + (navMenuOpen ? ' open' : '')} onClick={toggle}>\n            <div className='bar' />\n            <div className='bar' />\n            <div className='bar' />\n          </div>\n          <nav className={'nav-menu' + (navMenuOpen ? ' open' : '')}>\n            <ul className='menus'>\n              { menus.map(n => (\n                <li className='menu' key={n.to}>\n                  <Link\n                    to={n.to}\n                    getProps={isMenuActive}\n                    onClick={close}\n                  >{n.text}</Link>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </div>\n      </header>\n      <section id='mf-header-placeholder' />\n    </>\n  )\n}\n\nexport default Header\n","import React, { ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport * as Sentry from '@sentry/browser'\nimport 'normalize-scss/sass/normalize/_import-now.scss'\nimport './layout.scss'\nimport Header from './header'\nimport { IS_PROD } from 'config';\n\nif (IS_PROD) {\n  Sentry.init({\n    dsn: 'https://9638de4372be4acebf892d0732a86a4a@sentry.io/1450204'\n  })\n}\n\ninterface LayoutProps {\n  children?: ReactNode\n}\n\nconst Layout = (props: LayoutProps) => {\n  const { children } = props\n\n  return <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header />\n        <main>\n          {children}\n        </main>\n      </>\n    )}\n  />\n}\n\nexport default Layout\n"],"sourceRoot":""}