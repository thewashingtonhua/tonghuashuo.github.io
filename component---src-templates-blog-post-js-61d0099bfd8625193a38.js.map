{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/images/logo.png","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./node_modules/dayjs/src/constant.js","webpack:///./node_modules/dayjs/src/utils.js","webpack:///./node_modules/dayjs/src/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","dayjs__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","_ref","data","post","markdownRemark","cover","frontmatter","publicURL","date","dayjs","fields","format","a","createElement","title","keywords","site","siteMetadata","className","to","draft","id","dateTime","src","alt","dangerouslySetInnerHTML","__html","html","module","exports","p","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","render","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","Header","menus","text","state","navMenuOpen","toggle","e","stopPropagation","_this","setState","close","isMenuActive","isPartiallyCurrent","_this2","this","react_default","Fragment","gatsby_browser_entry","logo","onClick","map","key","getProps","PureComponent","Layout","children","components_header","_755544856","node","MILLISECONDS_A_SECOND","MILLISECONDS_A_MINUTE","MILLISECONDS_A_HOUR","SECONDS_A_MINUTE","MILLISECONDS_A_DAY","SECONDS_A_HOUR","MILLISECONDS_A_WEEK","SECONDS_A_DAY","MS","S","MIN","H","D","W","M","Q","Y","DATE","FORMAT_DEFAULT","INVALID_DATE_STRING","REGEX_PARSE","REGEX_FORMAT","en","weekdays","split","months","padStart","pad","s","String","Array","utils","padZoneStr","negMinuts","minutes","Math","abs","hourOffset","floor","minuteOffset","monthDiff","b","wholeMonthDiff","year","month","anchor","clone","add","c","anchor2","Number","absFloor","ceil","prettyUnit","u","y","w","h","m","ms","toLowerCase","replace","isUndefined","undefined","L","Ls","isDayjs","src_Dayjs","parseLocale","preset","object","isLocal","l","cfg","wrapper","instance","locale","$L","Utils","parseDate","reg","Date","NaN","test","match","[object Object]","parse","$d","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","toString","that","units","other","startOf","endOf","valueOf","getTime","isStartOf","instanceFactory","ins","instanceFactorySet","method","slice","toDate","apply","weekStart","$locale","arg","int","unit","$set","number","set","min","daysInMonth","setDate","step","nextTimeStamp","formatStr","isValid","str","zoneStr","getTimezoneOffset","getShort","arr","index","full","substr","get$H","matches","YY","YYYY","MM","MMM","monthsShort","MMMM","DD","dd","weekdaysMin","ddd","weekdaysShort","dddd","HH","hh","A","mm","ss","SSS","Z","indexOf","round","input","float","zoneDelta","utcOffset","diff","result","toISOString","years","hours","seconds","milliseconds","toUTCString","prototype","extend","plugin","option","unix","timestamp"],"mappings":"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","file":"component---src-templates-blog-post-js-61d0099bfd8625193a38.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport dayjs from 'dayjs'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport 'normalize-scss/sass/normalize/_import-now.scss'\nimport '../styles/prism-styles.scss'\nimport './blog-post.scss'\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n\n  const cover = post.frontmatter.cover\n    ? post.frontmatter.cover.publicURL\n    : ''\n  const date = dayjs(post.fields.date).format('MMM DD, YYYY')\n\n  return (\n    <Layout>\n      <SEO\n        title={`${post.frontmatter.title} | 博客`}\n        keywords={data.site.siteMetadata.keywords}\n      />\n\n      <div className='mf-content blog-post'>\n        <p className='back-to-parent'><Link to='/blog'>&laquo; 回到博客列表</Link></p>\n        <article className={post.frontmatter.draft ? ' draft' : ''} id={`blog__${post.fields.id}`}>\n          <h1 className='title'>{post.frontmatter.title}</h1>\n          <div className='metas'>\n            <p className='publish-date'>\n              <time dateTime={post.fields.date}>{date}</time>\n            </p>\n            {/* <p className='tags'>Tags: {post.frontmatter.tags.join(', ')}</p> */}\n          </div>\n          <div className='banner'>\n            <img src={cover} alt='' />\n          </div>\n          <div className='content' dangerouslySetInnerHTML={{ __html: post.html }} />\n        </article>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\nquery($slug: String!) {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n  markdownRemark(fields: { slug: { eq: $slug } }) {\n    html\n    frontmatter {\n      title\n      description\n      cover {\n        publicURL\n      }\n      tags\n      series\n      draft\n    }\n    fields {\n      id\n      date\n    }\n  }\n}`","module.exports = __webpack_public_path__ + \"static/logo-8503f6989dba3ce27939964a48c8b787.png\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || data.site.siteMetadata.description\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              }\n            ].concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                : []\n            )\n            .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `zh`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport { Link, withPrefix } from 'gatsby'\nimport logo from '../images/logo.png'\nimport './header.scss'\n\nclass Header extends PureComponent {\n  menus = [\n    { to: '/blog', text: '博客' },\n    { to: '/project', text: '代表作' },\n    { to: '/lab', text: '实验室' },\n    { to: '/friend', text: '朋友' },\n    { to: '/about', text: '我' }\n  ]\n\n  state = {\n    navMenuOpen: false\n  }\n\n  toggle = e => {\n    e && e.stopPropagation()\n    this.setState({ navMenuOpen: !this.state.navMenuOpen })\n  }\n\n  close = e => {\n    e && e.stopPropagation()\n    this.setState({ navMenuOpen: false })\n  }\n\n  isMenuActive = ({ isPartiallyCurrent }) => {\n    return isPartiallyCurrent\n      ? { className: 'menu active' }\n      : { className: 'menu' }\n  }\n\n  render () {\n    const { navMenuOpen } = this.state\n\n    return (\n      <>\n        <header id='mf-header'>\n          <div className='mf-header-wrapper'>\n            <Link to='/' className='logo'>\n              <img src={logo} alt=''/>\n              <span>童话说</span>\n            </Link>\n            <div className={'hamberger' + (navMenuOpen ? ' open' : '')} onClick={this.toggle}>\n              <div className='bar' />\n              <div className='bar' />\n              <div className='bar' />\n            </div>\n            <nav className={'nav-menu' + (navMenuOpen ? ' open' : '')}>\n              <div className='menus'>\n                { this.menus.map(n => (\n                  <Link\n                    key={n.to}\n                    to={n.to}\n                    getProps={this.isMenuActive}\n                    onClick={this.close}\n                  >{n.text}</Link>\n                ))}\n              </div>\n            </nav>\n          </div>\n        </header>\n        <section id='mf-header-placeholder' />\n      </>\n    )\n  }\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport 'normalize-scss/sass/normalize/_import-now.scss'\nimport 'prismjs/plugins/line-numbers/prism-line-numbers.css'\nimport '../styles/vendor.scss'\nimport './layout.scss'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header />\n        <main>\n          {children}\n        </main>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","export const SECONDS_A_MINUTE = 60\nexport const SECONDS_A_HOUR = SECONDS_A_MINUTE * 60\nexport const SECONDS_A_DAY = SECONDS_A_HOUR * 24\nexport const SECONDS_A_WEEK = SECONDS_A_DAY * 7\n\nexport const MILLISECONDS_A_SECOND = 1e3\nexport const MILLISECONDS_A_MINUTE = SECONDS_A_MINUTE * MILLISECONDS_A_SECOND\nexport const MILLISECONDS_A_HOUR = SECONDS_A_HOUR * MILLISECONDS_A_SECOND\nexport const MILLISECONDS_A_DAY = SECONDS_A_DAY * MILLISECONDS_A_SECOND\nexport const MILLISECONDS_A_WEEK = SECONDS_A_WEEK * MILLISECONDS_A_SECOND\n\n// English locales\nexport const MS = 'millisecond'\nexport const S = 'second'\nexport const MIN = 'minute'\nexport const H = 'hour'\nexport const D = 'day'\nexport const W = 'week'\nexport const M = 'month'\nexport const Q = 'quarter'\nexport const Y = 'year'\nexport const DATE = 'date'\n\nexport const FORMAT_DEFAULT = 'YYYY-MM-DDTHH:mm:ssZ'\n\nexport const INVALID_DATE_STRING = 'Invalid Date'\n\n// regex\nexport const REGEX_PARSE = /^(\\d{4})-?(\\d{1,2})-?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?.?(\\d{1,3})?$/\nexport const REGEX_FORMAT = /\\[.*?\\]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\n\nexport const en = {\n  name: 'en',\n  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_')\n}\n","import * as C from './constant'\n\nconst padStart = (string, length, pad) => {\n  const s = String(string)\n  if (!s || s.length >= length) return string\n  return `${Array((length + 1) - s.length).join(pad)}${string}`\n}\n\nconst padZoneStr = (negMinuts) => {\n  const minutes = Math.abs(negMinuts)\n  const hourOffset = Math.floor(minutes / 60)\n  const minuteOffset = minutes % 60\n  return `${negMinuts <= 0 ? '+' : '-'}${padStart(hourOffset, 2, '0')}:${padStart(minuteOffset, 2, '0')}`\n}\n\nconst monthDiff = (a, b) => {\n  // function from moment.js in order to keep the same result\n  const wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month())\n  const anchor = a.clone().add(wholeMonthDiff, 'months')\n  const c = b - anchor < 0\n  const anchor2 = a.clone().add(wholeMonthDiff + (c ? -1 : 1), 'months')\n  return Number(-(wholeMonthDiff + ((b - anchor) / (c ? (anchor - anchor2) :\n    (anchor2 - anchor)))) || 0)\n}\n\nconst absFloor = n => (n < 0 ? Math.ceil(n) || 0 : Math.floor(n))\n\nconst prettyUnit = (u) => {\n  const special = {\n    M: C.M,\n    y: C.Y,\n    w: C.W,\n    d: C.D,\n    h: C.H,\n    m: C.MIN,\n    s: C.S,\n    ms: C.MS\n  }\n  return special[u] || String(u || '').toLowerCase().replace(/s$/, '')\n}\n\nconst isUndefined = s => s === undefined\n\nexport default {\n  padStart,\n  padZoneStr,\n  monthDiff,\n  absFloor,\n  prettyUnit,\n  isUndefined\n}\n","import * as C from './constant'\nimport U from './utils'\n\nlet L = 'en' // global locale\nconst Ls = {} // global loaded locale\nLs[L] = C.en\n\nconst isDayjs = d => d instanceof Dayjs // eslint-disable-line no-use-before-define\n\nconst parseLocale = (preset, object, isLocal) => {\n  let l\n  if (!preset) return null\n  if (typeof preset === 'string') {\n    if (Ls[preset]) {\n      l = preset\n    }\n    if (object) {\n      Ls[preset] = object\n      l = preset\n    }\n  } else {\n    const { name } = preset\n    Ls[name] = preset\n    l = name\n  }\n  if (!isLocal) L = l\n  return l\n}\n\nconst dayjs = (date, c) => {\n  if (isDayjs(date)) {\n    return date.clone()\n  }\n  // eslint-disable-next-line no-nested-ternary\n  const cfg = c ? (typeof c === 'string' ? { format: c } : c) : {}\n  cfg.date = date\n  return new Dayjs(cfg) // eslint-disable-line no-use-before-define\n}\n\nconst wrapper = (date, instance) => dayjs(date, { locale: instance.$L })\n\nconst Utils = U // for plugin use\nUtils.parseLocale = parseLocale\nUtils.isDayjs = isDayjs\nUtils.wrapper = wrapper\n\nconst parseDate = (date) => {\n  let reg\n  if (date === null) return new Date(NaN) // Treat null as an invalid date\n  if (Utils.isUndefined(date)) return new Date()\n  if (date instanceof Date) return date\n  // eslint-disable-next-line no-cond-assign\n  if ((typeof date === 'string')\n    && (/.*[^Z]$/i.test(date)) // looking for a better way\n    && (reg = date.match(C.REGEX_PARSE))) {\n    // 2018-08-08 or 20180808\n    return new Date(\n      reg[1], reg[2] - 1, reg[3] || 1,\n      reg[4] || 0, reg[5] || 0, reg[6] || 0, reg[7] || 0\n    )\n  }\n  return new Date(date) // timestamp\n}\n\nclass Dayjs {\n  constructor(cfg) {\n    this.parse(cfg) // for plugin\n  }\n\n  parse(cfg) {\n    this.$d = parseDate(cfg.date)\n    this.init(cfg)\n  }\n\n  init(cfg) {\n    const { $d } = this\n    this.$y = $d.getFullYear()\n    this.$M = $d.getMonth()\n    this.$D = $d.getDate()\n    this.$W = $d.getDay()\n    this.$H = $d.getHours()\n    this.$m = $d.getMinutes()\n    this.$s = $d.getSeconds()\n    this.$ms = $d.getMilliseconds()\n    this.$L = this.$L || parseLocale(cfg.locale, null, true) || L\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  $utils() {\n    return Utils\n  }\n\n  isValid() {\n    return !(this.$d.toString() === C.INVALID_DATE_STRING)\n  }\n\n  isSame(that, units) {\n    const other = dayjs(that)\n    return this.startOf(units) <= other && other <= this.endOf(units)\n  }\n\n  isAfter(that, units) {\n    return dayjs(that) < this.startOf(units)\n  }\n\n  isBefore(that, units) {\n    return this.endOf(units) < dayjs(that)\n  }\n\n  year() {\n    return this.$y\n  }\n\n  month() {\n    return this.$M\n  }\n\n  day() {\n    return this.$W\n  }\n\n  date() {\n    return this.$D\n  }\n\n  hour() {\n    return this.$H\n  }\n\n  minute() {\n    return this.$m\n  }\n\n  second() {\n    return this.$s\n  }\n\n  millisecond() {\n    return this.$ms\n  }\n\n  unix() {\n    return Math.floor(this.valueOf() / 1000)\n  }\n\n  valueOf() {\n    // timezone(hour) * 60 * 60 * 1000 => ms\n    return this.$d.getTime()\n  }\n\n  startOf(units, startOf) { // startOf -> endOf\n    const isStartOf = !Utils.isUndefined(startOf) ? startOf : true\n    const unit = Utils.prettyUnit(units)\n    const instanceFactory = (d, m) => {\n      const ins = wrapper(new Date(this.$y, m, d), this)\n      return isStartOf ? ins : ins.endOf(C.D)\n    }\n    const instanceFactorySet = (method, slice) => {\n      const argumentStart = [0, 0, 0, 0]\n      const argumentEnd = [23, 59, 59, 999]\n      return wrapper(this.toDate()[method].apply( // eslint-disable-line prefer-spread\n        this.toDate(),\n        (isStartOf ? argumentStart : argumentEnd).slice(slice)\n      ), this)\n    }\n\n    switch (unit) {\n      case C.Y:\n        return isStartOf ? instanceFactory(1, 0) :\n          instanceFactory(31, 11)\n      case C.M:\n        return isStartOf ? instanceFactory(1, this.$M) :\n          instanceFactory(0, this.$M + 1)\n      case C.W: {\n        const weekStart = this.$locale().weekStart || 0\n        return isStartOf ? instanceFactory(this.$D - (this.$W - weekStart), this.$M) :\n          instanceFactory(this.$D + (6 - (this.$W - weekStart)), this.$M)\n      }\n      case C.D:\n      case C.DATE:\n        return instanceFactorySet('setHours', 0)\n      case C.H:\n        return instanceFactorySet('setMinutes', 1)\n      case C.MIN:\n        return instanceFactorySet('setSeconds', 2)\n      case C.S:\n        return instanceFactorySet('setMilliseconds', 3)\n      default:\n        return this.clone()\n    }\n  }\n\n  endOf(arg) {\n    return this.startOf(arg, false)\n  }\n\n  $set(units, int) { // private set\n    const unit = Utils.prettyUnit(units)\n    const name = {\n      [C.D]: 'setDate',\n      [C.DATE]: 'setDate',\n      [C.M]: 'setMonth',\n      [C.Y]: 'setFullYear',\n      [C.H]: 'setHours',\n      [C.MIN]: 'setMinutes',\n      [C.S]: 'setSeconds',\n      [C.MS]: 'setMilliseconds'\n    }[unit]\n    const arg = unit === C.D ? this.$D + (int - this.$W) : int\n\n    if (this.$d[name]) this.$d[name](arg)\n\n    this.init()\n    return this\n  }\n\n  set(string, int) {\n    return this.clone().$set(string, int)\n  }\n\n  add(number, units) {\n    number = Number(number) // eslint-disable-line no-param-reassign\n    const unit = Utils.prettyUnit(units)\n    const instanceFactory = (u, n) => {\n      const date = this.set(C.DATE, 1).set(u, n + number)\n      return date.set(C.DATE, Math.min(this.$D, date.daysInMonth()))\n    }\n    const instanceFactorySet = (n) => {\n      const date = new Date(this.$d)\n      date.setDate(date.getDate() + (n * number))\n      return wrapper(date, this)\n    }\n    if (unit === C.M) {\n      return instanceFactory(C.M, this.$M)\n    }\n    if (unit === C.Y) {\n      return instanceFactory(C.Y, this.$y)\n    }\n    if (unit === C.D) {\n      return instanceFactorySet(1)\n    }\n    if (unit === C.W) {\n      return instanceFactorySet(7)\n    }\n    const step = {\n      [C.MIN]: C.MILLISECONDS_A_MINUTE,\n      [C.H]: C.MILLISECONDS_A_HOUR,\n      [C.S]: C.MILLISECONDS_A_SECOND\n    }[unit] || 1 // ms\n\n    const nextTimeStamp = this.valueOf() + (number * step)\n    return wrapper(nextTimeStamp, this)\n  }\n\n  subtract(number, string) {\n    return this.add(number * -1, string)\n  }\n\n  format(formatStr) {\n    if (!this.isValid()) return C.INVALID_DATE_STRING\n\n    const str = formatStr || C.FORMAT_DEFAULT\n    const zoneStr = Utils.padZoneStr(this.$d.getTimezoneOffset())\n    const locale = this.$locale()\n    const {\n      weekdays, months\n    } = locale\n    const getShort = (arr, index, full, length) => (\n      (arr && arr[index]) || full[index].substr(0, length)\n    )\n    const get$H = (match) => {\n      if (this.$H === 0) return 12\n      return Utils.padStart(this.$H < 13 ? this.$H : this.$H - 12, match === 'hh' ? 2 : 1, '0')\n    }\n\n    const matches = {\n      YY: String(this.$y).slice(-2),\n      YYYY: String(this.$y),\n      M: String(this.$M + 1),\n      MM: Utils.padStart(this.$M + 1, 2, '0'),\n      MMM: getShort(locale.monthsShort, this.$M, months, 3),\n      MMMM: months[this.$M],\n      D: String(this.$D),\n      DD: Utils.padStart(this.$D, 2, '0'),\n      d: String(this.$W),\n      dd: getShort(locale.weekdaysMin, this.$W, weekdays, 2),\n      ddd: getShort(locale.weekdaysShort, this.$W, weekdays, 3),\n      dddd: weekdays[this.$W],\n      H: String(this.$H),\n      HH: Utils.padStart(this.$H, 2, '0'),\n      h: get$H('h'),\n      hh: get$H('hh'),\n      a: this.$H < 12 ? 'am' : 'pm',\n      A: this.$H < 12 ? 'AM' : 'PM',\n      m: String(this.$m),\n      mm: Utils.padStart(this.$m, 2, '0'),\n      s: String(this.$s),\n      ss: Utils.padStart(this.$s, 2, '0'),\n      SSS: Utils.padStart(this.$ms, 3, '0'),\n      Z: zoneStr\n    }\n\n    return str.replace(C.REGEX_FORMAT, (match) => {\n      if (match.indexOf('[') > -1) return match.replace(/\\[|\\]/g, '')\n      return matches[match] || zoneStr.replace(':', '') // 'ZZ'\n    })\n  }\n\n  utcOffset() {\n    // Because a bug at FF24, we're rounding the timezone offset around 15 minutes\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(this.$d.getTimezoneOffset() / 15) * 15\n  }\n\n  diff(input, units, float) {\n    const unit = Utils.prettyUnit(units)\n    const that = dayjs(input)\n    const zoneDelta = (that.utcOffset() - this.utcOffset()) * C.MILLISECONDS_A_MINUTE\n    const diff = this - that\n    let result = Utils.monthDiff(this, that)\n\n    result = {\n      [C.Y]: result / 12,\n      [C.M]: result,\n      [C.Q]: result / 3,\n      [C.W]: (diff - zoneDelta) / C.MILLISECONDS_A_WEEK,\n      [C.D]: (diff - zoneDelta) / C.MILLISECONDS_A_DAY,\n      [C.H]: diff / C.MILLISECONDS_A_HOUR,\n      [C.MIN]: diff / C.MILLISECONDS_A_MINUTE,\n      [C.S]: diff / C.MILLISECONDS_A_SECOND\n    }[unit] || diff // milliseconds\n\n    return float ? result : Utils.absFloor(result)\n  }\n\n  daysInMonth() {\n    return this.endOf(C.M).$D\n  }\n\n  $locale() { // get locale object\n    return Ls[this.$L]\n  }\n\n  locale(preset, object) {\n    const that = this.clone()\n    that.$L = parseLocale(preset, object, true)\n    return that\n  }\n\n  clone() {\n    return wrapper(this.toDate(), this)\n  }\n\n  toDate() {\n    return new Date(this.$d)\n  }\n\n  toArray() {\n    return [\n      this.$y,\n      this.$M,\n      this.$D,\n      this.$H,\n      this.$m,\n      this.$s,\n      this.$ms\n    ]\n  }\n\n  toJSON() {\n    return this.toISOString()\n  }\n\n  toISOString() {\n    // ie 8 return\n    // new Dayjs(this.valueOf() + this.$d.getTimezoneOffset() * 60000)\n    // .format('YYYY-MM-DDTHH:mm:ss.SSS[Z]')\n    return this.$d.toISOString()\n  }\n\n  toObject() {\n    return {\n      years: this.$y,\n      months: this.$M,\n      date: this.$D,\n      hours: this.$H,\n      minutes: this.$m,\n      seconds: this.$s,\n      milliseconds: this.$ms\n    }\n  }\n\n  toString() {\n    return this.$d.toUTCString()\n  }\n}\n\ndayjs.prototype = Dayjs.prototype\n\ndayjs.extend = (plugin, option) => {\n  plugin(option, Dayjs, dayjs)\n  return dayjs\n}\n\ndayjs.locale = parseLocale\n\ndayjs.isDayjs = isDayjs\n\ndayjs.unix = timestamp => (\n  dayjs(timestamp * 1e3)\n)\n\ndayjs.en = Ls[L]\n\nexport default dayjs\n"],"sourceRoot":""}