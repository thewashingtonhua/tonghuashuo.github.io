{"version":3,"sources":["webpack:///./src/pages/project.js","webpack:///./src/images/logo.png","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_ref","data","projects","allMarkdownRemark","edges","filter","_ref2","node","fields","type","a","createElement","title","keywords","site","siteMetadata","className","length","map","_ref3","cover","frontmatter","publicURL","to","slug","key","id","src","alt","description","module","exports","p","SEO","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","render","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","Header","menus","text","state","navMenuOpen","toggle","e","stopPropagation","_this","setState","close","isMenuActive","isPartiallyCurrent","_this2","this","react_default","Fragment","gatsby_browser_entry","logo","onClick","getProps","PureComponent","Layout","children","components_header","_755544856"],"mappings":"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","file":"component---src-pages-project-js-2539ce1780ee72f8da9b.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport './project.scss'\n\nexport default ({ data }) => {\n  const projects = data.allMarkdownRemark.edges\n    .filter(({ node }) => node.fields.type === 'project')\n\n  return (\n    <Layout>\n      <SEO\n        title='代表作'\n        keywords={data.site.siteMetadata.keywords}\n      />\n      <div className='mf-content project-catalog'>\n        <h1 className='title'>代表作({projects.length})</h1>\n        <div className='project-list'>\n          { projects.map(({ node }) => {\n            const cover = node.frontmatter.cover\n              ? node.frontmatter.cover.publicURL\n              : ''\n            return (\n              <Link className='project' to={node.fields.slug} key={node.fields.slug} id={node.fields.id}>\n                <div className='cover'>\n                  <img src={cover} alt='' />\n                </div>\n                <div className='intro'>\n                  <h2>{node.frontmatter.title}</h2>\n                  <p>{node.frontmatter.description}</p>\n                </div>\n              </Link>\n            )\n          })}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n  allMarkdownRemark(sort: { fields: [frontmatter___from], order: DESC }) {\n    totalCount\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          description\n          cover {\n            publicURL\n          }\n        }\n        fields {\n          id\n          slug\n          type\n        }\n      }\n    }\n  }\n}`","module.exports = __webpack_public_path__ + \"static/logo-8503f6989dba3ce27939964a48c8b787.png\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || data.site.siteMetadata.description\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              }\n            ].concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                : []\n            )\n            .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `zh`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport { Link, withPrefix } from 'gatsby'\nimport logo from '../images/logo.png'\nimport './header.scss'\n\nclass Header extends PureComponent {\n  menus = [\n    { to: '/blog', text: '博客' },\n    { to: '/project', text: '代表作' },\n    { to: '/lab', text: '实验室' },\n    { to: '/friend', text: '朋友' },\n    { to: '/about', text: '我' }\n  ]\n\n  state = {\n    navMenuOpen: false\n  }\n\n  toggle = e => {\n    e && e.stopPropagation()\n    this.setState({ navMenuOpen: !this.state.navMenuOpen })\n  }\n\n  close = e => {\n    e && e.stopPropagation()\n    this.setState({ navMenuOpen: false })\n  }\n\n  isMenuActive = ({ isPartiallyCurrent }) => {\n    return isPartiallyCurrent\n      ? { className: 'menu active' }\n      : { className: 'menu' }\n  }\n\n  render () {\n    const { navMenuOpen } = this.state\n\n    return (\n      <>\n        <header id='mf-header'>\n          <div className='mf-header-wrapper'>\n            <Link to='/' className='logo'>\n              <img src={logo} alt=''/>\n              <span>童话说</span>\n            </Link>\n            <div className={'hamberger' + (navMenuOpen ? ' open' : '')} onClick={this.toggle}>\n              <div className='bar' />\n              <div className='bar' />\n              <div className='bar' />\n            </div>\n            <nav className={'nav-menu' + (navMenuOpen ? ' open' : '')}>\n              <div className='menus'>\n                { this.menus.map(n => (\n                  <Link\n                    key={n.to}\n                    to={n.to}\n                    getProps={this.isMenuActive}\n                    onClick={this.close}\n                  >{n.text}</Link>\n                ))}\n              </div>\n            </nav>\n          </div>\n        </header>\n        <section id='mf-header-placeholder' />\n      </>\n    )\n  }\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport 'normalize-scss/sass/normalize/_import-now.scss'\nimport 'prismjs/plugins/line-numbers/prism-line-numbers.css'\nimport '../styles/vendor.scss'\nimport './layout.scss'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header />\n        <main>\n          {children}\n        </main>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}