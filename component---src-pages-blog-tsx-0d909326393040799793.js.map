{"version":3,"sources":["webpack:///./src/pages/blog.tsx"],"names":["BottomLine","props","className","text","data","blogs","allMarkdownRemark","edges","map","n","node","filter","fields","type","sort","x","y","Date","date","getTime","drafts","published","blog","frontmatter","draft","push","visibleBlogs","IS_PROD","Boolean","flat","title","keywords","site","siteMetadata","cover","publicURL","dayjs","format","to","slug","key","id","src","alt","description","dateTime","query"],"mappings":"6FAAA,2IAQMA,EAAa,SAACC,GAAD,OACjB,yBAAKC,UAAU,eAAc,8BAAOD,EAAME,QAG7B,mBAACF,GAA2B,IACjCG,EAASH,EAATG,KAEFC,EADQD,EAAKE,kBAAkBC,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAEnDC,QAAO,SAAAD,GAAI,MAAyB,SAArBA,EAAKE,OAAOC,QAC3BC,MAAK,SAACC,EAAGC,GAAJ,OAAU,IAAIC,KAAKD,EAAEJ,OAAOM,MAAMC,UAAY,IAAIF,KAAKF,EAAEH,OAAOM,MAAMC,aAExEC,EAAS,GACTC,EAAY,GARuB,uBASzC,YAAmBhB,EAAnB,+CAA0B,KAAfiB,EAAe,QACxBA,EAAKC,YAAYC,MACbJ,EAAOK,KAAKH,GACZD,EAAUI,KAAKH,IAZoB,kFAezC,IAAMI,EAAe,EAClBC,KAAWP,EACZC,GACAV,OAAOiB,SAASC,OAElB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,KACNC,SAAU3B,EAAK4B,KAAKC,aAAaF,WAEnC,yBAAK7B,UAAU,2BACb,yBAAKA,UAAU,aACXwB,EAAalB,KAAI,SAAAE,GACjB,IAAMwB,EAAQxB,EAAKa,YAAYW,MAC3BxB,EAAKa,YAAYW,MAAMC,UACvB,GACEjB,EAAOkB,IAAM1B,EAAKE,OAAOM,MAAMmB,OAAO,gBAC5C,OACE,kBAAC,OAAD,CAAMnC,UAAW,QAAUQ,EAAKa,YAAYC,MAAQ,SAAW,IAAKc,GAAI5B,EAAKE,OAAO2B,KAAMC,IAAK9B,EAAK+B,GAAIA,GAAI/B,EAAKE,OAAO6B,IACtH,yBAAKvC,UAAU,UACb,yBAAKwC,IAAKR,EAAOS,IAAI,MAEvB,yBAAKzC,UAAU,QACb,uBAAGA,UAAU,SAASQ,EAAKa,YAAYO,OACvC,uBAAG5B,UAAU,QAAQQ,EAAKa,YAAYqB,aACtC,4BAAQ1C,UAAU,gBAChB,uBAAGA,UAAU,QACX,0BAAM2C,SAAS,2BAA2B3B,WASxD,kBAAClB,EAAD,CAAYG,KAAK,eAMlB,IAAM2C,EAAQ","file":"component---src-pages-blog-tsx-0d909326393040799793.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport dayjs from 'dayjs'\nimport { Layout, SEO } from '../components'\nimport './blog.scss'\nimport { IS_PROD } from '../config'\nimport { GatsbyDataProps } from '../utils/interface'\n\nconst BottomLine = (props: { text: string }) => (\n  <div className='bottom-line'><span>{props.text}</span></div>\n)\n\nexport default (props: GatsbyDataProps) => {\n  const { data } = props\n  const nodes = data.allMarkdownRemark.edges.map(n => n.node)\n  const blogs = nodes\n    .filter(node => node.fields.type === 'blog')\n    .sort((x, y) => new Date(y.fields.date).getTime() - new Date(x.fields.date).getTime())\n\n  const drafts = []\n  const published = []\n  for (const blog of blogs) {\n    blog.frontmatter.draft\n      ? drafts.push(blog)\n      : published.push(blog)\n  }\n\n  const visibleBlogs = [\n    !IS_PROD && drafts,\n    published\n  ].filter(Boolean).flat()\n\n  return (\n    <Layout>\n      <SEO\n        title='博客'\n        keywords={data.site.siteMetadata.keywords}\n      />\n      <div className='mf-content blog-catalog'>\n        <div className='blog-list'>\n          { visibleBlogs.map(node => {\n            const cover = node.frontmatter.cover\n              ? node.frontmatter.cover.publicURL\n              : ''\n            const date = dayjs(node.fields.date).format('MMM DD, YYYY')\n            return (\n              <Link className={'blog' + (node.frontmatter.draft ? ' draft' : '')} to={node.fields.slug} key={node.id} id={node.fields.id}>\n                <div className='banner'>\n                  <img src={cover} alt='' />\n                </div>\n                <div className='info'>\n                  <p className='title'>{node.frontmatter.title}</p>\n                  <p className='desc'>{node.frontmatter.description}</p>\n                  <footer className='blog__footer'>\n                    <p className='date'>\n                      <time dateTime='{blog.node.fields.date}'>{date}</time>\n                    </p>\n                    {/* <p className='tags'>Tags: {blog.node.frontmatter.tags.join(', ')}</p> */}\n                  </footer>\n                </div>\n              </Link>\n            )\n          })}\n        </div>\n        <BottomLine text='The End' />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n  allMarkdownRemark {\n    totalCount\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          description\n          tags\n          cover {\n            publicURL\n          }\n          series\n          draft\n          original\n        }\n        fields {\n          id\n          slug\n          type\n          date\n        }\n      }\n    }\n  }\n}`\n"],"sourceRoot":""}