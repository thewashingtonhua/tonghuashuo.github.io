{"version":3,"sources":["webpack:///./src/templates/project-detail.js","webpack:///./src/images/logo.png","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_ref","data","post","markdownRemark","a","createElement","title","frontmatter","keywords","site","siteMetadata","className","to","id","fields","dangerouslySetInnerHTML","__html","html","module","exports","p","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","render","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","Header","menus","text","state","navMenuOpen","toggle","e","stopPropagation","_this","setState","close","isMenuActive","isPartiallyCurrent","_this2","this","react_default","Fragment","gatsby_browser_entry","src","logo","alt","onClick","map","key","getProps","PureComponent","Layout","children","components_header","_755544856","node"],"mappings":"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","file":"component---src-templates-project-detail-js-0683446e90163b083a39.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport 'normalize-scss/sass/normalize/_import-now.scss'\nimport './project-detail.scss'\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n\n  return (\n    <Layout>\n      <SEO\n        title={`${post.frontmatter.title} | 代表作`}\n        keywords={data.site.siteMetadata.keywords}\n      />\n      <div className='mf-content project-detail'>\n        <p className='back-to-parent'><Link to='/project'>&laquo; 回到项目列表</Link></p>\n        <article className='content' id={`project__${post.fields.id}`} dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\nquery($slug: String!) {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n  markdownRemark(fields: { slug: { eq: $slug } }) {\n    html\n    frontmatter {\n      title\n    }\n    fields {\n      id\n    }\n  }\n}`","module.exports = __webpack_public_path__ + \"static/logo-8503f6989dba3ce27939964a48c8b787.png\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || data.site.siteMetadata.description\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              }\n            ].concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                : []\n            )\n            .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `zh`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport { Link, withPrefix } from 'gatsby'\nimport logo from '../images/logo.png'\nimport './header.scss'\n\nclass Header extends PureComponent {\n  menus = [\n    { to: '/blog', text: '博客' },\n    { to: '/project', text: '代表作' },\n    { to: '/lab', text: '实验室' },\n    { to: '/friend', text: '朋友' },\n    { to: '/about', text: '我' }\n  ]\n\n  state = {\n    navMenuOpen: false\n  }\n\n  toggle = e => {\n    e && e.stopPropagation()\n    this.setState({ navMenuOpen: !this.state.navMenuOpen })\n  }\n\n  close = e => {\n    e && e.stopPropagation()\n    this.setState({ navMenuOpen: false })\n  }\n\n  isMenuActive = ({ isPartiallyCurrent }) => {\n    return isPartiallyCurrent\n      ? { className: 'menu active' }\n      : { className: 'menu' }\n  }\n\n  render () {\n    const { navMenuOpen } = this.state\n\n    return (\n      <>\n        <header id='mf-header'>\n          <div className='mf-header-wrapper'>\n            <Link to='/' className='logo'>\n              <img src={logo} alt=''/>\n              <span>童话说</span>\n            </Link>\n            <div className={'hamberger' + (navMenuOpen ? ' open' : '')} onClick={this.toggle}>\n              <div className='bar' />\n              <div className='bar' />\n              <div className='bar' />\n            </div>\n            <nav className={'nav-menu' + (navMenuOpen ? ' open' : '')}>\n              <div className='menus'>\n                { this.menus.map(n => (\n                  <Link\n                    key={n.to}\n                    to={n.to}\n                    getProps={this.isMenuActive}\n                    onClick={this.close}\n                  >{n.text}</Link>\n                ))}\n              </div>\n            </nav>\n          </div>\n        </header>\n        <section id='mf-header-placeholder' />\n      </>\n    )\n  }\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport 'normalize-scss/sass/normalize/_import-now.scss'\nimport 'prismjs/plugins/line-numbers/prism-line-numbers.css'\nimport '../styles/vendor.scss'\nimport './layout.scss'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header />\n        <main>\n          {children}\n        </main>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}