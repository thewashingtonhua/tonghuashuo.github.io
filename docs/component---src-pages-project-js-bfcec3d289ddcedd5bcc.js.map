{"version":3,"sources":["webpack:///./src/pages/project.js","webpack:///./src/images/logo.png","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_ref","data","a","createElement","title","keywords","site","siteMetadata","module","exports","p","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","render","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","Header","menus","to","text","state","navMenuOpen","toggle","e","stopPropagation","_this","setState","close","isMenuActive","isPartiallyCurrent","className","_this2","this","react_default","Fragment","id","gatsby_browser_entry","src","logo","alt","onClick","map","key","getProps","PureComponent","Layout","children","components_header","style","margin","maxWidth","padding","paddingTop","_755544856","node"],"mappings":"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","file":"component---src-pages-project-js-bfcec3d289ddcedd5bcc.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport 'normalize-scss/sass/normalize/_import-now.scss'\nimport './project.scss'\n\nexport default ({ data }) => (\n  <Layout>\n    <SEO\n      title='代表作'\n      keywords={data.site.siteMetadata.keywords}\n    />\n  </Layout>\n)\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n}`","module.exports = __webpack_public_path__ + \"static/logo-8503f6989dba3ce27939964a48c8b787.png\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || data.site.siteMetadata.description\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n              {\n                name: `viewport`,\n                content: `width=device-width, initial-scale=1, minimum-scale=1.0, maximum-scale=1.0, userscalable=no, shrink-to-fit=no, viewport-fit=cover`\n              },\n              {\n                name: `X-UA-Compatible`,\n                content: `ie=edge,chrome=1`\n              },\n              {\n                name: `render`,\n                content: `webkit`\n              },\n              {\n                name: `force-rendering`,\n                content: `webkit`\n              },\n              {\n                name: `format-detection`,\n                content: `telephone=no`\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `zh`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport { Link, withPrefix } from 'gatsby'\nimport logo from '../images/logo.png'\nimport './header.scss'\n\nclass Header extends PureComponent {\n  menus = [\n    { to: '/blog', text: '博客' },\n    { to: '/project', text: '代表作' },\n    { to: '/lab', text: '实验室' },\n    { to: '/friend', text: '朋友' },\n    { to: '/about', text: '我' }\n  ]\n\n  state = {\n    navMenuOpen: false\n  }\n\n  toggle = e => {\n    e && e.stopPropagation()\n    this.setState({ navMenuOpen: !this.state.navMenuOpen })\n  }\n\n  close = e => {\n    e && e.stopPropagation()\n    this.setState({ navMenuOpen: false })\n  }\n\n  isMenuActive = ({ isPartiallyCurrent }) => {\n    return isPartiallyCurrent\n      ? { className: 'menu active' }\n      : { className: 'menu' }\n  }\n\n  render () {\n    const { navMenuOpen } = this.state\n\n    return (\n      <>\n        <header id='mf-header'>\n          <div className='mf-header-wrapper'>\n            <Link to='/' className='logo'>\n              <img src={logo} alt=''/>\n              <span>童话说</span>\n            </Link>\n            <div className={'hamberger' + (navMenuOpen ? ' open' : '')} onClick={this.toggle}>\n              <div className='bar'></div>\n              <div className='bar'></div>\n              <div className='bar'></div>\n            </div>\n            <nav className={'nav-menu' + (navMenuOpen ? ' open' : '')}>\n              <div className='menus'>\n                { this.menus.map(n => (\n                  <Link\n                    key={n.to}\n                    to={n.to}\n                    getProps={this.isMenuActive}\n                    onClick={this.close}\n                  >{n.text}</Link>\n                ))}\n              </div>\n            </nav>\n          </div>\n        </header>\n        <section id='mf-header-placeholder' />\n      </>\n    )\n  }\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.scss'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header />\n        <main\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </main>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}