{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/images/logo.png","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Home","render","console","log","this","props","data","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","keywords","site","siteMetadata","React","Component","query","module","exports","__webpack_require__","p","SEO","_ref","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","Header","menus","to","text","state","navMenuOpen","toggle","e","stopPropagation","_this","setState","isMenuActive","isPartiallyCurrent","className","_this2","react_default","Fragment","id","gatsby_browser_entry","src","logo","alt","onClick","map","n","key","getProps","componentDidMount","PureComponent","Layout","children","components_header","style","margin","maxWidth","padding","paddingTop","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-420c7a4e4a8f514778bc.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport 'normalize-scss/sass/normalize/_import-now.scss'\nimport './index.scss'\n\n// export default ({ data }) => (\n//   <Layout>\n//     <SEO\n//       title='首页'\n//       keywords={data.site.siteMetadata.keywords}\n//     />\n//   </Layout>\n// )\nexport default class Home extends React.Component {\n  render () {\n    console.log(this.props)\n    const { data } = this.props\n    return (\n      <Layout>\n        <SEO\n          title='首页'\n          keywords={data.site.siteMetadata.keywords}\n        />\n      </Layout>\n    )\n  }\n}\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n}`","module.exports = __webpack_public_path__ + \"static/logo-8503f6989dba3ce27939964a48c8b787.png\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || data.site.siteMetadata.description\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n              {\n                name: `viewport`,\n                content: `width=device-width, initial-scale=1, minimum-scale=1.0, maximum-scale=1.0, userscalable=no, shrink-to-fit=no, viewport-fit=cover`\n              },\n              {\n                name: `X-UA-Compatible`,\n                content: `ie=edge,chrome=1`\n              },\n              {\n                name: `render`,\n                content: `webkit`\n              },\n              {\n                name: `force-rendering`,\n                content: `webkit`\n              },\n              {\n                name: `format-detection`,\n                content: `telephone=no`\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `zh`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport { Link, withPrefix } from 'gatsby'\nimport logo from '../images/logo.png'\nimport './header.scss'\n\nclass Header extends PureComponent {\n  menus = [\n    { to: '/blog', text: '博客' },\n    { to: '/project', text: '代表作' },\n    { to: '/lab', text: '实验室' },\n    { to: '/friend', text: '朋友' },\n    { to: '/about', text: '我' }\n  ]\n\n  state = {\n    navMenuOpen: false\n  }\n\n  toggle = e => {\n    e && e.stopPropagation()\n    this.setState({ navMenuOpen: !this.state.navMenuOpen })\n  }\n\n  isMenuActive = ({ isPartiallyCurrent }) => {\n    return isPartiallyCurrent\n      ? { className: 'menu active' }\n      : { className: 'menu' }\n  }\n\n  render () {\n    const { navMenuOpen } = this.state\n\n    return (\n      <>\n        <header id='mf-header'>\n          <div className='mf-header-wrapper'>\n            <Link to='/' className='logo'>\n              <img src={logo} alt=''/>\n              <span>童话说</span>\n            </Link>\n            <div className={'hamberger' + (navMenuOpen ? ' open' : '')} onClick={this.toggle}>\n              <div className='bar'></div>\n              <div className='bar'></div>\n              <div className='bar'></div>\n            </div>\n            <nav className={'nav-menu' + (navMenuOpen ? ' open' : '')}>\n              <div className='menus'>\n                { this.menus.map(n => (\n                  <Link\n                    key={n.to}\n                    to={n.to}\n                    getProps={this.isMenuActive}\n                  >{n.text}</Link>\n                ))}\n              </div>\n            </nav>\n          </div>\n        </header>\n        <section id='mf-header-placeholder' />\n      </>\n    )\n  }\n\n  componentDidMount () {\n    console.log(this.props)\n  }\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.scss'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header />\n        <main\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </main>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}