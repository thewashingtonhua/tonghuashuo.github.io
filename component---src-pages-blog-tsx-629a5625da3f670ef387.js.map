{"version":3,"sources":["webpack:///./src/pages/blog.tsx"],"names":["BottomLine","props","className","text","BlogCatalogPage","data","allMarkdownRemark","edges","map","n","node","filter","fields","type","NodeType","blog","sort","x","y","Date","date","getTime","reduce","cache","frontmatter","draft","drafts","published","visibleBlogs","IS_PROD","title","keywords","site","siteMetadata","cover","publicURL","dayjs","format","to","slug","key","id","src","alt","description","dateTime","query"],"mappings":"4QAQMA,EAAmC,SAACC,GAAD,OACvC,yBAAKC,UAAU,eAAc,8BAAOD,EAAME,QA+D7BC,UA5D8B,SAACH,GAAU,IAC9CI,EAASJ,EAATI,KAD8C,EAExCA,EAAKC,kBAAkBC,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAEnDC,QAAO,SAAAD,GAAI,OAAIA,EAAKE,OAAOC,OAASC,IAASC,QAC7CC,MAAK,SAACC,EAAGC,GAAJ,OAAU,IAAIC,KAAKD,EAAEN,OAAOQ,MAAMC,UAAY,IAAIF,KAAKF,EAAEL,OAAOQ,MAAMC,aAG5CC,QAAO,SAACC,EAAOR,GAAR,OACvCA,EAAKS,YAAYC,MACb,CAAC,GAAD,mBAAKF,EAAM,IAAX,CAAeR,IAAOQ,EAAM,IAC5B,CAACA,EAAM,GAAP,sBAAeA,EAAM,IAArB,CAAyBR,OAC5B,CAAC,GAAkB,KAZgC,mBAQ/CW,EAR+C,KAQvCC,EARuC,KAehDC,EAAeC,IAAO,YACpBF,GADoB,sBAEpBD,GAFoB,YAETC,IAEnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEG,MAAM,KACNC,SAAU1B,EAAK2B,KAAKC,aAAaF,WAEnC,yBAAK7B,UAAU,2BACb,yBAAKA,UAAU,aACX0B,EAAapB,KAAI,SAAAE,GAAQ,MACnBwB,EAAK,UAAGxB,EAAKc,YAAYU,aAApB,aAAG,EAAwBC,UAChCf,EAAOgB,IAAM1B,EAAKE,OAAOQ,MAAMiB,OAAO,gBAC5C,OACE,kBAAC,OAAD,CACEnC,UAAW,QAAUQ,EAAKc,YAAYC,MAAQ,SAAW,IACzDa,GAAI5B,EAAKE,OAAO2B,KAChBC,IAAK9B,EAAK+B,GACVA,GAAI/B,EAAKE,OAAO6B,IAEhB,yBAAKvC,UAAU,UACb,yBAAKwC,IAAKR,EAAOS,IAAI,MAEvB,yBAAKzC,UAAU,QACb,uBAAGA,UAAU,SAASQ,EAAKc,YAAYM,OACvC,uBAAG5B,UAAU,QAAQQ,EAAKc,YAAYoB,aACtC,4BAAQ1C,UAAU,gBAChB,uBAAGA,UAAU,QACX,0BAAM2C,SAAS,2BAA2BzB,WASxD,kBAACpB,EAAD,CAAYG,KAAK,eAQlB,IAAM2C,EAAQ","file":"component---src-pages-blog-tsx-629a5625da3f670ef387.js","sourcesContent":["import React, { FC } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport dayjs from 'dayjs'\nimport { Layout, SEO } from '../components'\nimport './blog.scss'\nimport { IS_PROD } from '../config'\nimport { GatsbyDataProps, BlogNode, NodeType } from '../utils/interface'\n\nconst BottomLine: FC<{ text: string }> = (props) => (\n  <div className='bottom-line'><span>{props.text}</span></div>\n)\n\nconst BlogCatalogPage: FC<GatsbyDataProps> = (props) => {\n  const { data } = props\n  const nodes = data.allMarkdownRemark.edges.map(n => n.node) as BlogNode[]\n  const blogs = nodes\n    .filter(node => node.fields.type === NodeType.blog)\n    .sort((x, y) => new Date(y.fields.date).getTime() - new Date(x.fields.date).getTime())\n\n  // 把草稿和已发布的分开\n  const [drafts, published] = blogs.reduce((cache, blog) => (\n    blog.frontmatter.draft\n      ? [[...cache[0], blog], cache[1]]\n      : [cache[0], [...cache[1], blog]]\n  ), [[] as BlogNode[], [] as BlogNode[]])\n\n  // 草稿不对外发布\n  const visibleBlogs = IS_PROD\n    ? [...published]\n    : [...drafts, ...published]\n\n  return (\n    <Layout>\n      <SEO\n        title='博客'\n        keywords={data.site.siteMetadata.keywords}\n      />\n      <div className='mf-content blog-catalog'>\n        <div className='blog-list'>\n          { visibleBlogs.map(node => {\n            const cover = node.frontmatter.cover?.publicURL\n            const date = dayjs(node.fields.date).format('MMM DD, YYYY')\n            return (\n              <Link\n                className={'blog' + (node.frontmatter.draft ? ' draft' : '')}\n                to={node.fields.slug}\n                key={node.id}\n                id={node.fields.id}\n              >\n                <div className='banner'>\n                  <img src={cover} alt='' />\n                </div>\n                <div className='info'>\n                  <p className='title'>{node.frontmatter.title}</p>\n                  <p className='desc'>{node.frontmatter.description}</p>\n                  <footer className='blog__footer'>\n                    <p className='date'>\n                      <time dateTime='{blog.node.fields.date}'>{date}</time>\n                    </p>\n                    {/* <p className='tags'>Tags: {blog.node.frontmatter.tags.join(', ')}</p> */}\n                  </footer>\n                </div>\n              </Link>\n            )\n          })}\n        </div>\n        <BottomLine text='The End' />\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogCatalogPage\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n  allMarkdownRemark {\n    totalCount\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          description\n          tags\n          cover {\n            publicURL\n          }\n          series\n          draft\n          original\n        }\n        fields {\n          id\n          slug\n          type\n          date\n        }\n      }\n    }\n  }\n}`\n"],"sourceRoot":""}