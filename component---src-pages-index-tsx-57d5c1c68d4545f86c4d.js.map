{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["props","data","latestBlog","allMarkdownRemark","edges","map","n","node","filter","fields","type","frontmatter","draft","sort","x","y","Date","date","getTime","blogCover","cover","publicURL","blogDate","dayjs","format","title","site","siteMetadata","exactTitle","keywords","className","to","slug","src","alt","description","dateTime","query"],"mappings":"2FAAA,6HAOe,mBAACA,GAA2B,IACjCC,EAASD,EAATC,KAGFC,EAFQD,EAAKE,kBAAkBC,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAGnDC,QAAO,SAAAD,GAAI,MAA0B,SAArBA,EAAKE,OAAOC,OAAoBH,EAAKI,YAAYC,SACjEC,MAAK,SAACC,EAAGC,GAAJ,OAAU,IAAIC,KAAKD,EAAEN,OAAOQ,MAAMC,UAAY,IAAIF,KAAKF,EAAEL,OAAOQ,MAAMC,aAAW,GAKnFC,EAAYjB,EAAWS,YAAYS,MACrClB,EAAWS,YAAYS,MAAMC,UAC7B,GACEC,EAAWC,IAAMrB,EAAWO,OAAOQ,MAAMO,OAAO,gBAEtD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOxB,EAAKyB,KAAKC,aAAaF,MAC9BG,YAAU,EACVC,SAAU5B,EAAKyB,KAAKC,aAAaE,WAEnC,yBAAKC,UAAU,cACb,4BAAQA,UAAU,kBAChB,kBAAC,OAAD,CAAMC,GAAG,QAAQD,UAAU,SAA3B,QACA,kBAAC,OAAD,CAAMC,GAAG,QAAQD,UAAU,QAA3B,WAEF,yBAAKA,UAAU,sBACb,kBAAC,OAAD,CAAMA,UAAU,OAAOC,GAAI7B,EAAWO,OAAOuB,MAC3C,yBAAKF,UAAU,UACb,yBAAKG,IAAKd,EAAWe,IAAI,MAE3B,yBAAKJ,UAAU,QACb,wBAAIA,UAAU,SAAS5B,EAAWS,YAAYc,OAC9C,uBAAGK,UAAU,QAAQ5B,EAAWS,YAAYwB,aAC5C,4BAAQL,UAAU,gBAChB,uBAAGA,UAAU,QACX,0BAAMM,SAAUlC,EAAWS,YAAYM,MAAOK,WAoCzD,IAAMe,EAAQ","file":"component---src-pages-index-tsx-57d5c1c68d4545f86c4d.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport dayjs from 'dayjs'\nimport { Layout, SEO } from '../components'\nimport './index.scss'\nimport { GatsbyDataProps } from '../utils/interface'\n\nexport default (props: GatsbyDataProps) => {\n  const { data } = props\n  const nodes = data.allMarkdownRemark.edges.map(n => n.node)\n\n  const latestBlog = nodes\n    .filter(node => (node.fields.type === 'blog' && !node.frontmatter.draft))\n    .sort((x, y) => new Date(y.fields.date).getTime() - new Date(x.fields.date).getTime())[0]\n  // const latestProjects = nodes\n  //   .filter(node => (node.fields.type === 'project' && !node.frontmatter.draft))\n  //   .sort((x, y) => new Date(y.frontmatter.from).getTime() - new Date(x.frontmatter.from).getTime()).slice(0, 2)\n\n  const blogCover = latestBlog.frontmatter.cover\n    ? latestBlog.frontmatter.cover.publicURL\n    : ''\n  const blogDate = dayjs(latestBlog.fields.date).format('MMM DD, YYYY')\n\n  return (\n    <Layout>\n      <SEO\n        title={data.site.siteMetadata.title}\n        exactTitle\n        keywords={data.site.siteMetadata.keywords}\n      />\n      <div className='mf-content'>\n        <header className='channel-header'>\n          <Link to='/blog' className='title'>最新博客</Link>\n          <Link to='/blog' className='more'>查看全部 &raquo;</Link>\n        </header>\n        <div className='channel-body blogs'>\n          <Link className='blog' to={latestBlog.fields.slug}>\n            <div className='banner'>\n              <img src={blogCover} alt='' />\n            </div>\n            <div className='info'>\n              <h2 className='title'>{latestBlog.frontmatter.title}</h2>\n              <p className='desc'>{latestBlog.frontmatter.description}</p>\n              <footer className='blog__footer'>\n                <p className='date'>\n                  <time dateTime={latestBlog.frontmatter.date}>{blogDate}</time>\n                </p>\n                {/* <p className='tags'>Tags: {latestBlog.frontmatter.tags.join(', ')}</p> */}\n              </footer>\n            </div>\n          </Link>\n        </div>\n\n        {/* <header className='channel-header'>\n          <Link to='/project' className='title'>最新项目</Link>\n          <Link to='/project' className='more'>查看全部 &raquo;</Link>\n        </header>\n        <div className='channel-body projects'>\n          { latestProjects.map(node => {\n            const cover = node.frontmatter.cover\n              ? node.frontmatter.cover.publicURL\n              : ''\n            return (\n              <Link className='project' to={node.fields.slug} key={node.id}>\n                <div className='cover'>\n                  <img src={cover} alt='' />\n                </div>\n                <div className='intro'>\n                  <h2>{node.frontmatter.title}</h2>\n                  <p>{node.frontmatter.description}</p>\n                </div>\n              </Link>\n            )\n          })}\n        </div> */}\n\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n  allMarkdownRemark {\n    totalCount\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          description\n          from\n          to\n          tags\n          cover {\n            publicURL\n          }\n          series\n          draft\n        }\n        fields {\n          slug\n          type\n          date\n        }\n        excerpt\n      }\n    }\n  }\n}`\n"],"sourceRoot":""}