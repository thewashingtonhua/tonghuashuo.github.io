{"version":3,"sources":["webpack:///./src/pages/recruit.tsx","webpack:///./src/config/index.ts","webpack:///./src/images/logo.png","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","About","props","data","a","createElement","title","keywords","site","siteMetadata","className","id","href","IS_PROD","process","module","exports","p","SEO","_props$description","description","_props$lang","lang","_props$meta","meta","_props$keywords","_props$title","_props$exactTitle","exactTitle","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","render","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","concat","name","content","property","author","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","menus","to","text","Header","_useState","useState","_useState2","Object","slicedToArray","navMenuOpen","setNavMenuOpen","close","e","stopPropagation","isMenuActive","isMenuActiveProps","isPartiallyCurrent","react_default","Fragment","gatsby_browser_entry","src","logo","alt","onClick","map","key","getProps","Sentry","dsn","Layout","children","components_header","_755544856"],"mappings":"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","file":"component---src-pages-recruit-tsx-24edfa24c330316b283b.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport './recruit.scss'\nimport { GatsbyDataProps } from '../utils/interface'\n\n\nconst About = (props: GatsbyDataProps) => {\n  const { data } = props\n\n  return (\n    <Layout>\n      <SEO\n        title='招人'\n        keywords={data.site.siteMetadata.keywords}\n      />\n      <div className='mf-content' id='recruit'>\n        <article>\n\n          <h1>招人</h1>\n\n          <h2>阿里巴巴集团 · 研发效能部，招前端工程师</h2>\n          <p>社招内推，P6~P7，上海浦东张江</p>\n          <p>React、TypeScript、RxJS，具备工程师的基本修养</p>\n          <p>简历发到：<a href='mailto:xintong.hxt@alibaba-inc.com'>xintong.hxt@alibaba-inc.com</a></p>\n\n          <h2>顺便</h2>\n          <p>Node.js、算法、视觉、产品、数据分析，也在招，也可以推。</p>\n          <p>（只不过我主要负责前端，所以……）</p>\n\n        </article>\n\n      </div>\n    </Layout>\n  )\n}\n\nexport default About\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n}`\n","export const IS_PROD = process.env.NODE_ENV === 'production'\n\nexport const DEBUG_MODE = !IS_PROD\n","module.exports = __webpack_public_path__ + \"static/logo-8503f6989dba3ce27939964a48c8b787.png\";","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ninterface SEOProps {\n  description?: string,\n  lang?: string,\n  meta?: { name: string; content: any; property?: undefined; } | { property: string; content: any; name?: undefined; } | ConcatArray<{ name: string; content: any; property?: undefined; } | { property: string; content: any; name?: undefined; }>,\n  keywords?: string[],\n  title?: string,\n  exactTitle?: boolean\n}\n\nconst SEO = (props: SEOProps) => {\n  const { description = '', lang = `zh`, meta = [], keywords = [], title = '', exactTitle = false } = props\n\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || data.site.siteMetadata.description\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={exactTitle ? '' : `%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              }\n            ].concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`,`),\n                  }\n                : []\n            )\n            .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { useState, MouseEvent } from 'react'\nimport { Link } from 'gatsby'\nimport logo from '../images/logo.png'\nimport './header.scss'\nimport { LinkGetProps } from '@reach/router';\n\nconst menus = [\n  { to: '/blog', text: '博客' },\n  { to: '/project', text: '代表作' },\n  { to: '/lab', text: '实验室' },\n  { to: '/friend', text: '朋友' },\n  { to: '/recruit', text: '招人' },\n  { to: '/about', text: '我' }\n]\n\nconst Header = () => {\n\n  const [navMenuOpen, setNavMenuOpen] = useState(false)\n\n  function toggle (e: MouseEvent) {\n    e && e.stopPropagation()\n    setNavMenuOpen(!navMenuOpen)\n  }\n\n  function close (e: MouseEvent) {\n    e && e.stopPropagation()\n    setNavMenuOpen(false)\n  }\n\n  function isMenuActive (isMenuActiveProps: LinkGetProps) {\n    const { isPartiallyCurrent } = isMenuActiveProps\n    return isPartiallyCurrent\n      ? { className: 'menu-link active' }\n      : { className: 'menu-link' }\n  }\n\n  return (\n    <>\n      <header id='mf-header'>\n        <div className='mf-header-wrapper'>\n          <Link to='/' className='logo'>\n            <img src={logo} alt=''/>\n            <span>童话说</span>\n          </Link>\n          <div className={'hamberger' + (navMenuOpen ? ' open' : '')} onClick={toggle}>\n            <div className='bar' />\n            <div className='bar' />\n            <div className='bar' />\n          </div>\n          <nav className={'nav-menu' + (navMenuOpen ? ' open' : '')}>\n            <ul className='menus'>\n              { menus.map(n => (\n                <li className='menu' key={n.to}>\n                  <Link\n                    to={n.to}\n                    getProps={isMenuActive}\n                    onClick={close}\n                  >{n.text}</Link>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </div>\n      </header>\n      <section id='mf-header-placeholder' />\n    </>\n  )\n}\n\nexport default Header\n","import React, { ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport * as Sentry from '@sentry/browser'\nimport 'normalize-scss/sass/normalize/_import-now.scss'\nimport './layout.scss'\nimport Header from './header'\nimport { IS_PROD } from 'config';\n\nif (IS_PROD) {\n  Sentry.init({\n    dsn: 'https://9638de4372be4acebf892d0732a86a4a@sentry.io/1450204'\n  })\n}\n\ninterface LayoutProps {\n  children?: ReactNode\n}\n\nconst Layout = (props: LayoutProps) => {\n  const { children } = props\n\n  return <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header />\n        <main>\n          {children}\n        </main>\n      </>\n    )}\n  />\n}\n\nexport default Layout\n"],"sourceRoot":""}