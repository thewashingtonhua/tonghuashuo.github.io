{"version":3,"sources":["webpack:///./src/pages/lab/browser-ua.js"],"names":["BrowserUA","props","useState","browser","setBrowser","os","setOS","ua","setUA","platform","setPlatform","error","setError","otherBrowserCheck","_browser","browserVersion","indexOf","match","substr","uVersion","replace","toString","slice","useEffect","window","navigator","_ua","userAgent","_platform","Number","getBrowser","toLowerCase","_os","isWin","isMac","isUnix","isLinux","isAndroid","isIPhone","isIPod","isIPad","isIOS","isWinPhone","isXBox","isBlackBerry","isMeeGo","isSymbian","macVersionStr","length","androidVersion","iosVersion","str","exec","getOS","e","console","title","keywords","data","site","siteMetadata","className","to","id","query"],"mappings":"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","file":"component---src-pages-lab-browser-ua-js-1e56c68613a2b614f2a8.js","sourcesContent":["import React, { PureComponent, useState, useEffect } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../../components/layout'\nimport SEO from '../../components/seo'\nimport './lab.scss'\nimport { GatsbyDataProps } from '../../utils/interface'\n\nconst BrowserUA = (props: GatsbyDataProps) => {\n\n  const [browser, setBrowser] = useState('')\n  const [os, setOS] = useState('')\n  const [ua, setUA] = useState('')\n  const [platform, setPlatform] = useState('')\n  const [error, setError] = useState('')\n\n  // 获取浏览器信息（主流）\n  const getBrowser = ua => {\n    let _browser = 'Unknown'\n    let browserVersion = ''\n\n    if (ua.indexOf('edge') > -1) {                // Edge / 12+\n      browserVersion = ua.match(/edge\\/\\d+(.\\d+)+/)[0].substr(5)\n      _browser = 'Microsoft Edge ' + browserVersion\n    } else if (ua.indexOf('edgios') > -1) {       // Edge for iOS\n      const edgeVersion = ua.match(/edgios\\/\\d+(.\\d+)+/)[0].substr(7)\n      _browser = 'Edge for iOS ' + edgeVersion\n    } else if (ua.indexOf('msie') > -1) {         // IE <= 10\n      browserVersion = ua.match(/msie\\s\\d+/)[0].substr(5)\n      _browser = 'IE ' + browserVersion\n    } else if (ua.indexOf('trident') > -1) {      // IE 11  only have 'Trident', IE 8,9,10   have both 'MSIE' & 'Trident', IE 6,7 only have 'MSIE'\n      _browser = 'IE 11'\n    } else if (ua.indexOf('firefox') > -1) {      // Firefox\n      browserVersion = ua.match(/firefox\\/\\d+(.\\d+)+/)[0].substr(8)\n      if (ua.indexOf('mobile') > -1) {\n        browserVersion += ' (mobile)'\n      }\n      _browser = 'Firefox ' + browserVersion\n    } else if (ua.indexOf('opera') > -1) {        // Opera 9.8-\n      browserVersion = ua.match(/opera\\/\\d+(.\\d+)+/)[0].substr(6)\n      if (Number(browserVersion) >= 9.8) {        // Opera 10+\n        browserVersion = ua.match(/version\\/\\d+(.\\d+)+/)[0].substr(8)\n      }\n      if (ua.indexOf('mini') > -1) {              // Opera mini\n        browserVersion = 'mini ' + ua.match(/mini\\/\\d+(.\\d+)+/)[0].substr(5)\n      }\n      _browser = 'Opera ' + browserVersion\n    } else if (ua.indexOf('opr') > -1) {          // Opera with webkit/blink\n      browserVersion = ua.match(/opr\\/\\d+(.\\d+)+/)[0].substr(4)\n      if (ua.indexOf('dev') > -1) {               // Opera dev edition\n        browserVersion += ' (edition developer)'\n      } else if (ua.indexOf('beta') > -1) {       // Opera beta edition\n        browserVersion += ' (edition beta)'\n      }\n      if (ua.indexOf('mobile') > -1) {\n        browserVersion += ' (mobile)'             // Opera Mobile\n      }\n      _browser = 'Opera ' + browserVersion\n    } else if (ua.indexOf('chrome') > -1) {       // Chrome\n      browserVersion = ua.match(/chrome\\/\\d+(.\\d+)+/)[0].substr(7)\n      if (ua.indexOf('mobile') > -1) {\n        browserVersion += ' (mobile)'             // Chrome Mobile\n      }\n      _browser = 'Chrome ' + browserVersion\n    } else if (ua.indexOf('safari') > -1) {       // Safari\n      if ((ua.indexOf('blackberry') > -1) || (ua.indexOf('bb10') > -1) || (ua.indexOf('playbook') > -1)) {\n        const webkitVersion = ua.match(/webkit\\/\\d+(.\\d+)+/)[0].substr(7)\n        _browser = 'BlackBerry built-in / Webkit ' + webkitVersion\n      } else {\n        browserVersion = ua.match(/safari\\/\\d+(.\\d+)+/)[0].substr(7)\n        _browser = 'Safari ' + browserVersion\n      }\n    }\n\n    _browser = otherBrowserCheck(ua, _browser)\n\n    return _browser\n  }\n\n  // 获取国产浏览器信息\n  const otherBrowserCheck = (ua, _browser) => {\n    let browserVersion = ''\n    let webkitVersion = ''\n    let chromeVersion = ''\n\n    // qqbrowser\n    if (ua.indexOf('qqbrowser') > -1) {\n      browserVersion = ua.match(/qqbrowser\\/\\d+(.\\d+)+/)[0].substr(10)\n      if (ua.indexOf('mobile') > -1) {\n        browserVersion += '(mobile)'\n      }\n      chromeVersion = ua.match(/chrome\\/\\d+(.\\d+)+/)[0].substr(7)\n      _browser = 'QQ Browser ' + browserVersion + ' / Chrome ' + chromeVersion\n    }\n\n    // WeiXin\n    if (ua.indexOf('micromessenger') > -1) {\n      const weixinVersion = ua.match(/micromessenger\\/\\d+(.\\d+)+/)[0].substr(15)\n      webkitVersion = ua.match(/webkit\\/\\d+(.\\d+)+/)[0].substr(7)\n      _browser = 'WeiXin ' + weixinVersion + ' / wekit ' + webkitVersion\n    }\n\n    // QQ\n    if (ua.indexOf('qq/') > -1) {\n      const qqVersion = ua.match(/qq\\/\\d+(.\\d+)+/)[0].substr(3)\n      webkitVersion = ua.match(/webkit\\/\\d+(.\\d+)+/)[0].substr(7)\n      _browser = 'QQ ' + qqVersion + ' / wekit ' + webkitVersion\n    }\n\n    // XiaoMi MIUI Browser\n    if (ua.indexOf('miui') > -1) {\n      chromeVersion = ua.match(/chrome\\/\\d+(.\\d+)+/)[0].substr(7)\n      _browser = 'XiaoMi MIUI Browser ' + browserVersion + ' / Chrome ' + chromeVersion\n    }\n\n    // UC\n    if (ua.indexOf('ucbrowser') > -1 || ua.indexOf(' ubrowser') > -1) {\n      browserVersion = ua.match(/browser\\/\\d+(.\\d+)+/)[0].substr(8)\n      if (ua.indexOf('mobile') > -1) {\n        browserVersion += ' (mobile)'\n        const match = ua.match(/u\\d\\/\\d+(.\\d+)+/)\n        let uVersion = ''\n        if (match) {\n          uVersion = match[0].substr(1).replace('/', ' ')\n        }\n        _browser = 'UC Browser ' + browserVersion + ' / U' + uVersion\n      } else {\n        if (ua.indexOf('chrome') > -1) {\n          chromeVersion = ua.match(/chrome\\/\\d+(.\\d+)+/)[0].substr(7)\n          _browser = 'UC Browser ' + browserVersion + ' / Chrome ' + chromeVersion\n        } else if (ua.indexOf('edge') > -1) {\n          const edgeVersion = ua.match(/edge\\/\\d+(.\\d+)+/)[0].substr(5)\n          _browser = 'UC Browser ' + browserVersion + ' / edge ' + edgeVersion\n        } else if (ua.indexOf('msie') > -1) {\n          const ieVersion = ua.match(/msie\\s\\d+/)[0].substr(5)\n          _browser = 'UC Browser ' + browserVersion + ' / IE ' + ieVersion\n        } else if (ua.indexOf('trident') > -1) {\n          _browser = 'UC Browser ' + browserVersion + ' / IE 11'\n        }\n      }\n    }\n\n    // sougou\n    if (ua.indexOf('sogou') > -1 || ua.indexOf(' se ') > -1) {\n      if (ua.indexOf('mobile') > -1) {\n        browserVersion = ua.match(/browser\\/\\d+(.\\d+)+/)[0].substr(8)\n        browserVersion += ' (mobile)'\n        webkitVersion = ua.match(/webkit\\/\\d+(.\\d+)+/)[0].substr(7)\n        _browser = 'Sogou Browser ' + browserVersion + ' / Webkit ' + webkitVersion\n      } else {\n        if (ua.indexOf('chrome') > -1) {\n          chromeVersion = ua.match(/chrome\\/\\d+(.\\d+)+/)[0].substr(7)\n          _browser = 'Sogou Browser / Chrome ' + chromeVersion\n        } else if (ua.indexOf('edge') > -1) {\n          const edgeVersion = ua.match(/edge\\/\\d+(.\\d+)+/)[0].substr(5)\n          _browser = 'Sogou Browser / edge ' + edgeVersion\n        } else if (ua.indexOf('msie') > -1) {\n          const ieVersion = ua.match(/msie\\s\\d+/)[0].substr(5)\n          _browser = 'Sogou Browser / IE ' + ieVersion\n        } else if (ua.indexOf('trident') > -1) {\n          _browser = 'Sogou Browser / IE 11'\n        }\n      }\n    }\n\n    // 360 mobile (desktop is not special, refer to IE/Chrome)\n    if (ua.indexOf('360 aphone browser') > -1) {\n      browserVersion = ua.match(/browser\\s\\(\\d+(.\\d+)+\\)/)[0].toString().slice(9, -1)\n      if (ua.indexOf('mobile') > -1) {\n        browserVersion += ' (mobile)'\n      }\n      chromeVersion = ua.match(/chrome\\/\\d+(.\\d+)+/)[0].substr(7)\n      _browser = '360 Browser ' + browserVersion + ' / Chrome ' + chromeVersion\n    }\n\n    // liebao\n    if (ua.indexOf('lbbrowser') > -1) {\n      chromeVersion = ua.match(/chrome\\/\\d+(.\\d+)+/)[0].substr(7)\n      _browser = 'LieBao Browser / Chrome ' + chromeVersion\n    }\n\n    // liebao mobile\n    if (ua.indexOf('liebao') > -1) {\n      browserVersion = ua.match(/liebaofast\\/\\d+(.\\d+)+/)[0].substr(10)\n      if (ua.indexOf('mobile') > -1) {\n        browserVersion += ' (mobile)'\n      }\n      chromeVersion = ua.match(/chrome\\/\\d+(.\\d+)+/)[0].substr(7)\n      _browser = 'LieBao Fast Browser ' + browserVersion + ' / Chrome ' + chromeVersion\n    }\n\n    // baidu\n    if (ua.indexOf('bidu') > -1) {\n      if (ua.indexOf('chrome') > -1) {\n        browserVersion = ua.match(/browser\\/\\d+(.\\d+)+/)[0].substr(8)\n        chromeVersion = ua.match(/chrome\\/\\d+(.\\d+)+/)[0].substr(7)\n        _browser = 'Baidu Browser ' + browserVersion + ' / Chrome ' + chromeVersion\n      } else if (ua.indexOf('edge') > -1) {\n        browserVersion = ua.match(/browser\\s\\d+(.\\d+)+/)[0].substr(8)\n        const edgeVersion = ua.match(/edge\\/\\d+(.\\d+)+/)[0].substr(5)\n        _browser = 'Baidu Browser ' + browserVersion + ' / edge ' + edgeVersion\n      } else if (ua.indexOf('msie') > -1) {\n        browserVersion = ua.match(/browser\\s\\d+(.\\d+)+/)[0].substr(8)\n        const ieVersion = ua.match(/msie\\s\\d+/)[0].substr(5)\n        _browser = 'Baidu Browser ' + browserVersion + ' / IE ' + ieVersion\n      } else if (ua.indexOf('trident') > -1) {\n        browserVersion = ua.match(/browser\\s\\d+(.\\d+)+/)[0].substr(8)\n        _browser = 'Baidu Browser ' + browserVersion + ' / IE 11'\n      }\n    }\n\n    // baidu mobile\n    if (ua.indexOf('baidu') > -1) {\n      browserVersion = ua.match(/browser\\/\\d+(.\\d+)+/)[0].substr(8)\n      if (ua.indexOf('mobile') > -1) {\n        browserVersion += ' (mobile)'\n      }\n      chromeVersion = ua.match(/chrome\\/\\d+(.\\d+)+/)[0].substr(7)\n      _browser = 'Baidu Browser ' + browserVersion + ' / Chrome ' + chromeVersion\n    }\n\n    // maxthon\n    if (ua.indexOf('maxthon') > -1) {\n      browserVersion = ua.match(/maxthon\\/\\d+(.\\d+)+/)[0].substr(8)\n      if (ua.indexOf('mobile') > -1) {\n        browserVersion += ' (mobile)'\n      }\n      chromeVersion = ua.match(/chrome\\/\\d+(.\\d+)+/)[0].substr(7)\n      _browser = 'Maxthon ' + browserVersion + ' / Chrome ' + chromeVersion\n    }\n\n    // maxthon mobile\n    if (ua.indexOf('mxbrowser') > -1) {\n      browserVersion = ua.match(/mxbrowser\\/\\d+(.\\d+)+/)[0].substr(10)\n      if (ua.indexOf('mobile') > -1) {\n        browserVersion += ' (mobile)'\n      }\n      chromeVersion = ua.match(/chrome\\/\\d+(.\\d+)+/)[0].substr(7)\n      _browser = 'Maxthon ' + browserVersion + ' / Chrome ' + chromeVersion\n    }\n\n    // Dolphin\n    if (ua.indexOf('dolphin') > -1) {\n      browserVersion = ua.match(/dolphinbrowsercn\\/\\d+(.\\d+)+/)[0].substr(17)\n      chromeVersion = ua.match(/chrome\\/\\d+(.\\d+)+/)[0].substr(7)\n      _browser = 'Dolphin Browser ' + browserVersion + ' / Chrome ' + chromeVersion\n    }\n\n    // The World\n    if (ua.indexOf('theworld') > -1) {\n      browserVersion = ua.match(/theworld\\s\\d+/)[0].substr(8)\n      if (ua.indexOf('mobile') > -1) {\n        browserVersion += ' (mobile)'\n      }\n      chromeVersion = ua.match(/webkit\\/\\d+(.\\d+)+/)[0].substr(7)\n      _browser = 'The World ' + browserVersion + ' / wekit ' + chromeVersion\n    }\n\n    return _browser\n  }\n\n  const getOS = (ua, platform) => {\n    let _os = 'Unknown OS'\n\n    const isWin = (platform === 'Win32') || (platform === 'Windows')\n    const isMac = (platform === 'Mac68K') || (platform === 'MacPPC') || (platform === 'Macintosh') || (platform === 'MacIntel')\n    const isUnix = (platform === 'X11') && !isWin && !isMac\n    const isLinux = (platform.toLowerCase().indexOf('linux') > -1) || (ua.indexOf('linux') > -1)\n\n    const isAndroid = ua.indexOf('android') > -1\n    const isIPhone = ua.indexOf('iphone') > -1\n    const isIPod = ua.indexOf('ipod') > -1\n    const isIPad = ua.indexOf('ipad') > -1\n    const isIOS = isIPhone || isIPad || isIPod\n    const isWinPhone = ua.indexOf('windows phone') > -1\n    const isXBox = ua.indexOf('xbox') > -1\n    const isBlackBerry = (ua.indexOf('blackberry') > -1) || (ua.indexOf('bb10') > -1) || (ua.indexOf('playbook') > -1)\n    const isMeeGo = ua.indexOf('meego') > -1\n    const isSymbian = ua.indexOf('symbian') > -1\n\n    if (isMac) {\n      _os = 'Mac'\n      const macVersionStr = ua.match(/mac\\sos\\sx\\s[0-9]{1,2}(_[0-9]{1,2})+/)\n      if (macVersionStr && macVersionStr.length) {\n        const macVersion = macVersionStr[0].replace(/mac\\sos\\sx\\s/, '').replace(/_/g, '.')\n        _os = _os + ' ' + macVersion\n      }\n      return _os\n    }\n\n    if (isUnix) {\n      _os = 'Unix'\n      return _os\n    }\n\n    if (isLinux && !isAndroid) {\n      _os = 'Linux'\n      if (ua.indexOf('kf') > -1) {\n        _os += '/Amazon Kindle'\n      }\n      return _os\n    }\n\n    if (isWin) {\n      _os = 'Windows'\n      if (ua.indexOf('windows nt 5.0') > -1 || ua.indexOf('windows 2000') > -1) {\n        _os = 'Windows 2000'\n      } else if (ua.indexOf('windows nt 5.1') > -1 || ua.indexOf('windows xp') > -1) {\n        _os = 'Windows XP'\n      } else if (ua.indexOf('windows nt 5.2') > -1 || ua.indexOf('windows 2003') > -1) {\n        _os = 'Windows 2003'\n      } else if (ua.indexOf('windows nt 6.0') > -1 || ua.indexOf('windows Vista') > -1) {\n        _os = 'Windows Vista'\n      } else if (ua.indexOf('windows nt 6.1') > -1 || ua.indexOf('windows 7') > -1) {\n        _os = 'Windows 7'\n      } else if (ua.indexOf('windows nt 6.2') > -1 || ua.indexOf('Windows 8') > -1) {\n        _os = 'Windows 8'\n      } else if (ua.indexOf('windows nt 6.3') > -1 || ua.indexOf('windows 8.1') > -1) {\n        _os = 'Windows 8.1'\n      } else if (ua.indexOf('windows nt 6.4') > -1 || ua.indexOf('windows nt 10.0') > -1 || ua.indexOf('windows 10') > -1) {\n        _os = 'Windows 10'\n      }\n      return _os\n    }\n\n    if (isAndroid) {\n      _os = 'Android'\n      const androidVersion = ua.match(/android\\s[\\.\\d]+/)[0].substr(8)\n      if (androidVersion) {\n        _os = _os + ' ' + androidVersion\n      }\n      return _os\n    }\n\n    if (isIOS) {\n      let iosVersion = ''\n      if (isIPhone) {\n        const reg = /cpu\\siphone\\sos\\s\\d+(_\\d+)+/\n        const str = ua.match(reg)\n        if (str[0].length) {\n          iosVersion = str[0].substr(14).replace(/_/g, '.')\n        }\n        _os = 'iOS ' + iosVersion + ' / iPhone'\n      } else if (isIPad) {\n        const reg = /cpu\\sos\\s\\d+(_\\d+)+/\n        const str = ua.match(reg)\n        if (str[0].length) {\n          iosVersion = str[0].substr(6).replace(/_/g, '.')\n        }\n        _os = 'iOS ' + iosVersion + ' / iPad'\n      } else if (isIPod) {\n        const reg = /cpu\\siphone\\sos\\s\\d+(_\\d+)+/\n        const str = ua.match(reg)\n        if (str[0].length) {\n          iosVersion = str[0].substr(6).replace(/_/g, '.')\n        }\n        _os = 'iOS ' + iosVersion + ' / iPod'\n      } else {\n        _os = 'iOS'\n      }\n      return _os\n    }\n\n    if (isWinPhone) {\n      const reg = /\\d+(.\\d)+/\n      const str = ua.substr(ua.indexOf('windows phone') + 14, 7)\n      const winPhoneVersion = reg.exec(str)[0]\n      _os = 'Windows Phone ' + winPhoneVersion\n      return _os\n    }\n\n    if (isSymbian) {\n      const series = ua.match(/series\\d+/)[0].toString().substr(6)\n      _os = 'Symbian S' + series\n      return _os\n    }\n\n    if (isBlackBerry) {\n      _os = 'BlackBerry'\n      if (ua.indexOf('playbook') > -1) {\n        _os += ' / PlayBook'\n      } else if (ua.indexOf('bb10') > -1) {\n        _os += ' / BB10'\n      }\n      return _os\n    }\n\n    if (isXBox) {\n      _os = 'XBox'\n      if (ua.indexOf('xbox one') > -1) {\n        _os += ' One'\n      } else {\n        _os += ' 360'\n      }\n      return _os\n    }\n\n    if (isMeeGo) {\n      _os = 'MeeGo'\n      return _os\n    }\n\n    return _os\n  }\n\n  useEffect(() => {\n    if (window.navigator) {\n      const { userAgent: _ua, platform: _platform } = window.navigator\n\n      try {\n        setBrowser(getBrowser(_ua.toLowerCase()))\n        setOS(getOS(_ua.toLowerCase(), _platform))\n        setUA(_ua)\n        setPlatform(_platform)\n      } catch (e) {\n        console.error(`Caught Error`, e)\n      }\n    } else {\n      setError('Browser info not detected.')\n    }\n  }, [])\n\n  return (\n    <Layout>\n      <SEO\n        title='User Agent | 实验室'\n        keywords={props.data.site.siteMetadata.keywords}\n      />\n      <div className='mf-content lab-item'>\n        <article>\n\n          <Link to='/lab' className='back'>&laquo; Back</Link>\n\n          <h1>UserAgent</h1>\n\n          <p>Browser: <span id='browser'>{browser || 'Detecting ...'}</span></p>\n          <p>OS: <span id='os'>{os || 'Detecting ...'}</span></p>\n\n          <p>UA: <span id='ua'>{ua || 'Detecting ...'}</span></p>\n          <p>Platform: <span id='platform'>{platform || 'Detecting ...'}</span></p>\n\n          <p id='error'>{error}</p>\n        </article>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BrowserUA\n\nexport const query = graphql`\n\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n}`\n"],"sourceRoot":""}