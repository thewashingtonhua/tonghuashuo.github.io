{"version":3,"sources":["webpack:///./src/pages/toolbox/browser-viewport.tsx"],"names":["BrowserViewport","useState","innerWidth","setInnerWidth","innerHeight","setInnerHeight","outerWidth","setOuterWidth","outerHeight","setOuterHeight","clientWidth","setClientWidth","clientHeight","setClientHeight","screenWidth","setScreenWidth","screenHeight","setScreenHeight","screenAvailWidth","setScreenAvailWidth","screenAvailHeight","setScreenAvailHeight","screenOrientation","setScreenOrientation","screenDeviceXDPI","setScreenDeviceXDPI","devicePixelRatio","setDevicePixelRatio","getSize","screen","window","document","documentElement","width","height","availWidth","availHeight","msOrientation","mozOrientation","orientation","type","deviceXDPI","useEffect","addEventListener","removeEventListener","title","cellSpacing","className","colSpan"],"mappings":"8JA6HeA,UAxHa,WAAM,MACIC,mBAAS,IADb,mBACzBC,EADyB,KACbC,EADa,OAEMF,mBAAS,IAFf,mBAEzBG,EAFyB,KAEZC,EAFY,OAGIJ,mBAAS,IAHb,mBAGzBK,EAHyB,KAGbC,EAHa,OAIMN,mBAAS,IAJf,mBAIzBO,EAJyB,KAIZC,EAJY,OAKMR,mBAAS,IALf,mBAKzBS,EALyB,KAKZC,EALY,OAMQV,mBAAS,IANjB,mBAMzBW,EANyB,KAMXC,EANW,OAOMZ,mBAAS,IAPf,mBAOzBa,EAPyB,KAOZC,EAPY,OAQQd,mBAAS,IARjB,mBAQzBe,EARyB,KAQXC,EARW,OASgBhB,mBAAS,IATzB,mBASzBiB,EATyB,KASPC,EATO,OAUkBlB,mBAAS,IAV3B,mBAUzBmB,EAVyB,KAUNC,EAVM,OAWkBpB,mBAAS,IAX3B,mBAWzBqB,EAXyB,KAWNC,EAXM,OAYgBtB,mBAAS,IAZzB,mBAYzBuB,EAZyB,KAYPC,EAZO,OAagBxB,mBAAS,IAbzB,mBAazByB,GAbyB,KAaPC,GAbO,KAe1BC,GAAU,WACd,IACMC,EADUC,OACOD,OACvB1B,EAAc2B,OAAO5B,WAAa,OAClCG,EAAeyB,OAAO1B,YAAc,OACpCG,EAAcuB,OAAOxB,WAAa,OAClCG,EAAeqB,OAAOtB,YAAc,OACpCG,EAAeoB,SAASC,gBAAgBtB,YAAc,OACtDG,EAAgBkB,SAASC,gBAAgBpB,aAAe,OACxDG,EAAec,EAAOI,MAAQ,OAC9BhB,EAAgBY,EAAOK,OAAS,OAChCf,EAAoBU,EAAOM,WAAa,OACxCd,EAAqBQ,EAAOO,YAAc,OAC1Cb,GAAsBM,EAAOQ,eAAiBR,EAAOS,gBAAkBT,EAAOU,aAAe,CAAEC,KAAM,KAAMA,MAC3Gf,EAAoBI,EAAOY,WAAcZ,EAAOY,WAAa,MAAS,OACtEd,GAAoBG,OAAOJ,iBAAmB,KAahD,OAVAgB,qBAAU,WAKR,OAJAd,KAEAE,OAAOa,iBAAiB,SAAUf,IAE3B,WACLE,OAAOc,oBAAoB,SAAUhB,OAEtC,IAGD,kBAAC,IAAD,CAAeiB,MAAM,YACnB,wCAEA,2BAAOC,YAAa,GAClB,gCACA,+BAEE,wBAAIC,UAAU,SACZ,wBAAIC,QAAS,GAAb,YAEF,4BACE,mFACA,4BAAKtC,IAEP,4BACE,6FACA,4BAAKE,IAGP,wBAAImC,UAAU,SACZ,wBAAIC,QAAS,GAAb,YAEF,4BACE,iDACA,4BAAK9C,IAEP,4BACE,0EACA,4BAAKE,IAEP,4BACE,iDACA,4BAAKE,IAEP,4BACE,kDACA,4BAAKE,IAGP,wBAAIuC,UAAU,SACZ,wBAAIC,QAAS,GAAb,WAEF,4BACE,mDACA,4BAAKlC,IAEP,4BACE,oDACA,4BAAKE,IAEP,4BACE,wDACA,4BAAKE,IAEP,4BACE,qEACA,4BAAKE,IAEP,4BACE,yDACA,4BAAKE,IAEP,4BACE,kEACA,4BAAKE,IAEP,4BACE,uDACA,4BAAKE","file":"component---src-pages-toolbox-browser-viewport-tsx-a0b68b5e4f457e1624de.js","sourcesContent":["import React, { FC, useEffect, useState } from 'react'\nimport { ToolboxLayout } from '../../components'\nimport './tool.scss'\nimport { IWindow } from '../../utils/interface'\n\nconst BrowserViewport: FC = () => {\n  const [innerWidth, setInnerWidth] = useState('')\n  const [innerHeight, setInnerHeight] = useState('')\n  const [outerWidth, setOuterWidth] = useState('')\n  const [outerHeight, setOuterHeight] = useState('')\n  const [clientWidth, setClientWidth] = useState('')\n  const [clientHeight, setClientHeight] = useState('')\n  const [screenWidth, setScreenWidth] = useState('')\n  const [screenHeight, setScreenHeight] = useState('')\n  const [screenAvailWidth, setScreenAvailWidth] = useState('')\n  const [screenAvailHeight, setScreenAvailHeight] = useState('')\n  const [screenOrientation, setScreenOrientation] = useState('')\n  const [screenDeviceXDPI, setScreenDeviceXDPI] = useState('')\n  const [devicePixelRatio, setDevicePixelRatio] = useState('')\n\n  const getSize = () => {\n    const _window = window as IWindow\n    const screen = _window.screen\n    setInnerWidth(window.innerWidth + ' px')\n    setInnerHeight(window.innerHeight + ' px')\n    setOuterWidth(window.outerWidth + ' px')\n    setOuterHeight(window.outerHeight + ' px')\n    setClientWidth(document.documentElement.clientWidth + ' px')\n    setClientHeight(document.documentElement.clientHeight + ' px')\n    setScreenWidth(screen.width + ' px')\n    setScreenHeight(screen.height + ' px')\n    setScreenAvailWidth(screen.availWidth + ' px')\n    setScreenAvailHeight(screen.availHeight + ' px')\n    setScreenOrientation((screen.msOrientation || screen.mozOrientation || screen.orientation || { type: '' }).type)\n    setScreenDeviceXDPI(screen.deviceXDPI ? (screen.deviceXDPI + ' px') : 'N/A')\n    setDevicePixelRatio(window.devicePixelRatio + '')\n  }\n\n  useEffect(() => {\n    getSize()\n\n    window.addEventListener('resize', getSize)\n\n    return () => {\n      window.removeEventListener('resize', getSize)\n    }\n  }, [])\n\n  return (\n    <ToolboxLayout title='Viewport'>\n      <h1>Viewport</h1>\n\n      <table cellSpacing={0}>\n        <thead></thead>\n        <tbody>\n\n          <tr className='title'>\n            <td colSpan={2}>Content</td>\n          </tr>\n          <tr>\n            <td>document.documentElement.clientWidth (No ScrollBar)</td>\n            <td>{clientWidth}</td>\n          </tr>\n          <tr>\n            <td>document.documentElement.clientHeight (No TopBar, No DevTool)</td>\n            <td>{clientHeight}</td>\n          </tr>\n\n          <tr className='title'>\n            <td colSpan={2}>Browser</td>\n          </tr>\n          <tr>\n            <td>window.innerWidth</td>\n            <td>{innerWidth}</td>\n          </tr>\n          <tr>\n            <td>window.innerHeight (No TopBar, No DevTool)</td>\n            <td>{innerHeight}</td>\n          </tr>\n          <tr>\n            <td>window.outerWidth</td>\n            <td>{outerWidth}</td>\n          </tr>\n          <tr>\n            <td>window.outerHeight</td>\n            <td>{outerHeight}</td>\n          </tr>\n\n          <tr className='title'>\n            <td colSpan={2}>Device</td>\n          </tr>\n          <tr>\n            <td>window.screen.width</td>\n            <td>{screenWidth}</td>\n          </tr>\n          <tr>\n            <td>window.screen.height</td>\n            <td>{screenHeight}</td>\n          </tr>\n          <tr>\n            <td>window.screen.availWidth</td>\n            <td>{screenAvailWidth}</td>\n          </tr>\n          <tr>\n            <td>window.screen.availHeight (No TopBar)</td>\n            <td>{screenAvailHeight}</td>\n          </tr>\n          <tr>\n            <td>window.screen.orientation</td>\n            <td>{screenOrientation}</td>\n          </tr>\n          <tr>\n            <td>window.screen.deviceXDPI (IE Only)</td>\n            <td>{screenDeviceXDPI}</td>\n          </tr>\n          <tr>\n            <td>window.devicePixelRatio</td>\n            <td>{devicePixelRatio}</td>\n          </tr>\n        </tbody>\n      </table>\n    </ToolboxLayout>\n  )\n}\n\nexport default BrowserViewport\n"],"sourceRoot":""}