{"version":3,"sources":["webpack:///./src/pages/lab/html5-geolocation.js","webpack:///./src/images/logo.png","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["HTML5Geolocation","state","latitude","longitude","accuracy","altitude","altitudeAccuracy","heading","speed","error","render","_this$state","this","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","keywords","props","data","site","siteMetadata","className","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","id","componentDidMount","_this2","navigator","geolocation","getCurrentPosition","position","coords","setState","1","2","3","code","enableHighAcuracy","PureComponent","query","module","exports","__webpack_require__","p","SEO","_ref","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","Header","menus","text","navMenuOpen","toggle","e","stopPropagation","_this","close","isMenuActive","isPartiallyCurrent","react_default","Fragment","gatsby_browser_entry","src","logo","alt","onClick","map","n","key","getProps","Layout","children","components_header","_755544856","node"],"mappings":"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","file":"component---src-pages-lab-html-5-geolocation-js-eb9deb09aed6524e7cd6.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../../components/layout'\nimport SEO from '../../components/seo'\nimport './lab.scss'\n\nexport default class HTML5Geolocation extends PureComponent {\n  state = {\n    latitude: null,\n    longitude: null,\n    accuracy: null,\n    altitude: null,\n    altitudeAccuracy: null,\n    heading: null,\n    speed: null,\n    error: ''\n  }\n\n  render () {\n    const {\n      latitude,\n      longitude,\n      accuracy,\n      altitude,\n      altitudeAccuracy,\n      heading,\n      speed,\n      error\n    } = this.state\n\n    return (\n      <Layout>\n        <SEO\n          title='Geolocation | 实验室'\n          keywords={this.props.data.site.siteMetadata.keywords}\n        />\n        <div className='mf-content lab-item'>\n\n          <article>\n            <Link to='/lab' className='back'>&laquo; Back</Link>\n\n            <h1>Geolocation</h1>\n\n            <p>Latitude: {latitude}</p>\n            <p>Longtitude: {longitude}</p>\n            <p>Accuracy: {accuracy}</p>\n            <p>Altitude: {altitude}</p>\n            <p>Altitude Accuracy: {altitudeAccuracy}</p>\n            <p>Heading: {heading}</p>\n            <p>Speed: {speed}</p>\n\n            <p id='error'>{error}</p>\n          </article>\n        </div>\n      </Layout>\n    )\n  }\n\n  componentDidMount () {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          const coords = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n            accuracy: position.coords.accuracy,\n            altitude: position.coords.altitude,\n            altitudeAccuracy: position.coords.altitudeAccuracy,\n            heading: position.coords.heading,\n            speed: position.coords.speed\n          }\n          // 经纬度数值为正数表示东经、北纬，负数表示西经南纬，遵循直角坐标系\n          this.setState(coords)\n        },\n        error => {\n          const ERROR_TPYE = {\n            1: 'service denied',\n            2: 'cannot access geolocation info',\n            3: 'timeout'\n          }\n          this.setState({\n            error: '[Error] ' + ERROR_TPYE[error.code]\n          })\n        },\n        {\n          enableHighAcuracy: true\n        }\n      )\n    } else {\n      this.setState({\n        error: '[Error] Geolocation is not supported on this browser.'\n      })\n    }\n  }\n}\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n}`","module.exports = __webpack_public_path__ + \"static/logo-8503f6989dba3ce27939964a48c8b787.png\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || data.site.siteMetadata.description\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              }\n            ].concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                : []\n            )\n            .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `zh`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport { Link, withPrefix } from 'gatsby'\nimport logo from '../images/logo.png'\nimport './header.scss'\n\nclass Header extends PureComponent {\n  menus = [\n    { to: '/blog', text: '博客' },\n    { to: '/project', text: '代表作' },\n    { to: '/lab', text: '实验室' },\n    { to: '/friend', text: '朋友' },\n    { to: '/about', text: '我' }\n  ]\n\n  state = {\n    navMenuOpen: false\n  }\n\n  toggle = e => {\n    e && e.stopPropagation()\n    this.setState({ navMenuOpen: !this.state.navMenuOpen })\n  }\n\n  close = e => {\n    e && e.stopPropagation()\n    this.setState({ navMenuOpen: false })\n  }\n\n  isMenuActive = ({ isPartiallyCurrent }) => {\n    return isPartiallyCurrent\n      ? { className: 'menu active' }\n      : { className: 'menu' }\n  }\n\n  render () {\n    const { navMenuOpen } = this.state\n\n    return (\n      <>\n        <header id='mf-header'>\n          <div className='mf-header-wrapper'>\n            <Link to='/' className='logo'>\n              <img src={logo} alt=''/>\n              <span>童话说</span>\n            </Link>\n            <div className={'hamberger' + (navMenuOpen ? ' open' : '')} onClick={this.toggle}>\n              <div className='bar' />\n              <div className='bar' />\n              <div className='bar' />\n            </div>\n            <nav className={'nav-menu' + (navMenuOpen ? ' open' : '')}>\n              <div className='menus'>\n                { this.menus.map(n => (\n                  <Link\n                    key={n.to}\n                    to={n.to}\n                    getProps={this.isMenuActive}\n                    onClick={this.close}\n                  >{n.text}</Link>\n                ))}\n              </div>\n            </nav>\n          </div>\n        </header>\n        <section id='mf-header-placeholder' />\n      </>\n    )\n  }\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport 'normalize-scss/sass/normalize/_import-now.scss'\nimport 'prismjs/plugins/line-numbers/prism-line-numbers.css'\nimport '../styles/vendor.scss'\nimport './layout.scss'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header />\n        <main>\n          {children}\n        </main>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}