{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/2020/12/28/es-2020","result":{"data":{"site":{"siteMetadata":{"title":"童话说","keywords":["tonghuashuo","github","front-end","javascript","typescript","react","node","washington","hua","童话","童话说","前端","博客","技术","计算机","互联网"]}},"allMarkdownRemark":{"totalCount":83,"edges":[{"node":{"id":"c205d1bc-0577-5639-90aa-37b6f09d3547","frontmatter":{"title":"CSS Scan","description":"VSCode 扩展，自动补全 CSS 变量","tags":null,"cover":{"publicURL":"/static/72e94c39ebb670dd23625675c0a22ace/blank.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"css-scan","slug":"/project/css-scan","type":"project","date":null}}},{"node":{"id":"450957d8-90c2-5456-a2e3-6f60bd8f2ce4","frontmatter":{"title":"Fridge","description":"Teambition 设计资产速查工具","tags":null,"cover":{"publicURL":"/static/97b869f04b74e763be87e4369e4690e3/fridge.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"fridge","slug":"/project/fridge","type":"project","date":null}}},{"node":{"id":"71ffc9c2-24f4-5a91-a9fc-4694778e43c7","frontmatter":{"title":"Github-Flutter","description":"基于 Flutter 开发的 Github 客户端","tags":null,"cover":{"publicURL":"/static/72e94c39ebb670dd23625675c0a22ace/blank.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"github-flutter","slug":"/project/github-flutter","type":"project","date":null}}},{"node":{"id":"6a3bf076-bd85-5f11-8eb1-16e95286adaf","frontmatter":{"title":"FBC","description":"联合办公空间的会员服务","tags":null,"cover":{"publicURL":"/static/73b8b250e607c97c493edf1b542345fa/fbc.jpg"},"series":null,"draft":false,"original":null},"fields":{"id":"fbc","slug":"/project/fbc","type":"project","date":null}}},{"node":{"id":"096c5d70-0164-57e4-91c0-1aafddde7880","frontmatter":{"title":"INEX 影力所","description":"泛娱乐领域的垂直数字货币交易所","tags":null,"cover":{"publicURL":"/static/40ff0dfa20bfd2e8e2b2ea8abb900b5b/inex.jpg"},"series":null,"draft":false,"original":null},"fields":{"id":"inex","slug":"/project/inex","type":"project","date":null}}},{"node":{"id":"290932e4-635f-592d-be69-7d9c3b5d7ba0","frontmatter":{"title":"小书签","description":"让 Chrome 的书签更好用","tags":null,"cover":{"publicURL":"/static/72e94c39ebb670dd23625675c0a22ace/blank.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"the-collector","slug":"/project/the-collector","type":"project","date":null}}},{"node":{"id":"eebfa8f3-a1a0-5049-98ac-6a1fb792d9a1","frontmatter":{"title":"Teamedia","description":"Teambition 出品的网盘应用","tags":null,"cover":{"publicURL":"/static/a5318825484a23816f7831bab7f12d82/teamedia.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"teamedia","slug":"/project/teamedia","type":"project","date":null}}},{"node":{"id":"a2ea7f53-9ec5-5042-b8ca-5be79e9c6785","frontmatter":{"title":"小扫描","description":"磁盘占用一眼","tags":null,"cover":{"publicURL":"/static/72e94c39ebb670dd23625675c0a22ace/blank.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"the-scanner","slug":"/project/the-scanner","type":"project","date":null}}},{"node":{"id":"d3fe6409-636c-5419-97f1-f15c8dca1056","frontmatter":{"title":"小图标","description":"一站式 Favicon 解决方案","tags":null,"cover":{"publicURL":"/static/956c5d68ba30b313078082a832a80573/the-favicon.jpg"},"series":null,"draft":false,"original":null},"fields":{"id":"the-favicon","slug":"/project/the-favicon","type":"project","date":null}}},{"node":{"id":"7b74e9c9-8dc8-59b9-86d9-ad7f13a67df6","frontmatter":{"title":"小剧透","description":"Web 版「剧情连拍」","tags":null,"cover":{"publicURL":"/static/72e94c39ebb670dd23625675c0a22ace/blank.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"the-spoiler","slug":"/project/the-spoiler","type":"project","date":null}}},{"node":{"id":"4f46ae77-847c-5508-acae-7c8d89c42804","frontmatter":{"title":"Thoughts 所思","description":"Teambition 出品的企业知识管理应用","tags":null,"cover":{"publicURL":"/static/faff3495c115cab9b6fd951f3c6b96f9/thoughts.jpg"},"series":null,"draft":false,"original":null},"fields":{"id":"thoughts","slug":"/project/thoughts","type":"project","date":null}}},{"node":{"id":"7a64b536-2246-5627-93d5-c19fa4db4d5d","frontmatter":{"title":"Xshowroom 买手圈","description":"时尚业专业买手服务平台","tags":null,"cover":{"publicURL":"/static/72ea2ae7921cb5aa0b3b4f56578ed2b9/xshowroom.jpg"},"series":null,"draft":false,"original":null},"fields":{"id":"xshowroom","slug":"/project/xshowroom","type":"project","date":null}}},{"node":{"id":"24f860b7-781d-5fca-a7d2-dc224a10bd4c","frontmatter":{"title":"新阅","description":"在线视频协作平台","tags":null,"cover":{"publicURL":"/static/64b35564f5bc639232b66b6559065b31/xinyue.jpg"},"series":null,"draft":false,"original":null},"fields":{"id":"xinyue","slug":"/project/xinyue","type":"project","date":null}}},{"node":{"id":"d1c71d6f-df93-5ee7-a16e-6c6059b0753d","frontmatter":{"title":"聊聊「深色模式」","description":"你说的黑不是黑，你说的暗是什么暗","tags":["design","dark"],"cover":{"publicURL":"/static/d221320d45d5d7ac530fe7af1ab4cd79/blank.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"dark-mode","slug":"/blog/2021/03/25/dark-mode","type":"blog","date":"2021-03-25"}}},{"node":{"id":"849f7e22-afe3-59ea-a1be-7e2af371bcf0","frontmatter":{"title":"金三银四，聊聊前端面试","description":"人嘛，总是在不断的试错中成长起来的","tags":["interview"],"cover":{"publicURL":"/static/d221320d45d5d7ac530fe7af1ab4cd79/blank.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"thoughts-about-fe-interview","slug":"/blog/2021/03/30/thoughts-about-fe-interview","type":"blog","date":"2021-03-30"}}},{"node":{"id":"762fa5fc-4c10-5f45-affe-4554be6fe1da","frontmatter":{"title":"Fridge 背后的故事","description":"能动手的，咱们尽量别吵吵","tags":["electron","iconfont","svg","fridge"],"cover":{"publicURL":"/static/d221320d45d5d7ac530fe7af1ab4cd79/blank.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"story-behind-fridge","slug":"/blog/2021/04/30/story-behind-fridge","type":"blog","date":"2021-04-30"}}},{"node":{"id":"2acb1ff4-952a-5385-93d9-b8cf641a7056","frontmatter":{"title":"多端 Web 应用实践","description":"去往梦想的路，总是坑坑洼洼的","tags":["cross-platform"],"cover":{"publicURL":"/static/d221320d45d5d7ac530fe7af1ab4cd79/blank.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"web-cross-platform-in-action","slug":"/blog/2021/05/10/web-cross-platform-in-action","type":"blog","date":"2021-05-10"}}},{"node":{"id":"a7901198-846c-51d8-a642-d65043ac39cc","frontmatter":{"title":"为什么我们总是在不断地造轮子","description":"圆的圆的圆的东西","tags":["thinking"],"cover":{"publicURL":"/static/120fefa8e824de66889cf2e45b746ebe/wheel.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"why-do-we-keep-building-wheels","slug":"/blog/2021/06/10/why-do-we-keep-building-wheels","type":"blog","date":"2021-06-10"}}},{"node":{"id":"c656cf72-a356-54a5-815f-822a793f974d","frontmatter":{"title":"聊聊前端架构","description":"前端如果只是写写页面的话，路就走窄了","tags":["architecture","架构"],"cover":{"publicURL":"/static/d221320d45d5d7ac530fe7af1ab4cd79/blank.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"frontend-architecture","slug":"/blog/2021/07/15/frontend-architecture","type":"blog","date":"2021-07-15"}}},{"node":{"id":"24a1fcac-33bb-541f-8b8a-1100af03085a","frontmatter":{"title":"Flutter 扫雷记","description":"穿上新买的鞋，走上复古的小路","tags":["flutter"],"cover":{"publicURL":"/static/b6ce1e63c11d6fddd7a988bfb312deb5/flutter.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"learning-flutter","slug":"/blog/2021/08/03/learning-flutter","type":"blog","date":"2021-08-03"}}},{"node":{"id":"de00674b-5c36-544d-9bd6-c860f677b2f1","frontmatter":{"title":"关于 Semver 的迷思","description":"做人呐，最重要的就是乐观啦","tags":["design","optimistic","update"],"cover":{"publicURL":"/static/d221320d45d5d7ac530fe7af1ab4cd79/blank.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"thinkings-about-semver","slug":"/blog/2021/10/31/thinkings-about-semver","type":"blog","date":"2021-10-31"}}},{"node":{"id":"00425197-525b-5ca0-92bf-d83460391100","frontmatter":{"title":"关于 P7 的思考","description":"对「硬通货」的一点浅见","tags":["career"],"cover":{"publicURL":"/static/d221320d45d5d7ac530fe7af1ab4cd79/blank.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"thinkings-about-p7","slug":"/blog/2021/11/31/thinkings-about-p7","type":"blog","date":"2021-11-31"}}},{"node":{"id":"a03c38bd-7cf4-5017-a488-1ab0e4df7358","frontmatter":{"title":"GraphQL：从起飞到落地","description":"你经手的下一个项目，很可能就有它","tags":["design"],"cover":{"publicURL":"/static/d221320d45d5d7ac530fe7af1ab4cd79/blank.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"learning-graphql","slug":"/blog/2021/09/10/learning-graphql","type":"blog","date":"2021-09-10"}}},{"node":{"id":"4a508543-30f6-5796-b242-61ff3edf8dc7","frontmatter":{"title":"一个非著名前端开发者的 2021","description":"只为遇见更好的自己","tags":["summary","2021","2022"],"cover":{"publicURL":"/static/d221320d45d5d7ac530fe7af1ab4cd79/blank.jpg"},"series":"summary","draft":true,"original":true},"fields":{"id":"summary-2021","slug":"/blog/2021/12/31/summary-2021","type":"blog","date":"2021-12-31"}}},{"node":{"id":"6b794aa1-bed2-53af-a8af-7b995f20236e","frontmatter":{"title":"「童话说」又改版啦","description":"只为遇见更好的自己","tags":["blog","4.0","update"],"cover":{"publicURL":"/static/d221320d45d5d7ac530fe7af1ab4cd79/blank.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"introducing-ths-v4","slug":"/blog/2021/12/15/introducing-ths-v4","type":"blog","date":"2021-12-15"}}},{"node":{"id":"6f48fb1e-8bd1-52af-898e-03a118de4b36","frontmatter":{"title":"设计一套乐观更新机制","description":"做人呐，最重要的就是乐观啦","tags":["design","optimistic","update"],"cover":{"publicURL":"/static/92603cdac7e5c420caea18ea2c459646/optimistic-update.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"building-an-optimisic-update-mechanism","slug":"/blog/2020/07/13/building-an-optimisic-update-mechanism","type":"blog","date":"2020-07-13"}}},{"node":{"id":"73b26631-8c2e-5f12-8e8d-f417e263d448","frontmatter":{"title":"我的数组返回了啥","description":"功夫再高，一针下去也得倒","tags":["javascript","array"],"cover":{"publicURL":"/static/2cc085eb3cdf21f44644810589c3bd8a/array.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"what-does-my-array-return","slug":"/blog/2020/12/07/what-does-my-array-return","type":"blog","date":"2020-12-07"}}},{"node":{"id":"d66a351c-5c82-5b53-85ba-d46840f71f87","frontmatter":{"title":"你铁定已经知道的 ES 2020","description":"迟到，总比不到好","tags":["ecmascript","2020"],"cover":{"publicURL":"/static/5bbe9cbd4d341256fe533f89aa242cb6/es2020.jpg"},"series":"ecmascript","draft":false,"original":true},"fields":{"id":"es-2020","slug":"/blog/2020/12/28/es-2020","type":"blog","date":"2020-12-28"}}},{"node":{"id":"37339c37-51e2-5652-a7a7-d27896e3c069","frontmatter":{"title":"基于 mono-repo 的项目架构","description":"分久必合","tags":["architecture","mono-repo","架构"],"cover":{"publicURL":"/static/d221320d45d5d7ac530fe7af1ab4cd79/blank.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"1/2021-05-03-design-a-monorepo-project","slug":"/project/1/2021-05-03-design-a-monorepo-project","type":"project","date":"2021-05-03"}}},{"node":{"id":"191091e7-5478-53ee-99f6-8faa30c141d2","frontmatter":{"title":"一个非著名前端开发者的 2020","description":"继续，让进步发生","tags":["summary","2020","2021"],"cover":{"publicURL":"/static/40556f5636111e701f3949914488b854/summary-2020.jpg"},"series":"summary","draft":false,"original":true},"fields":{"id":"summary-2020","slug":"/blog/2020/12/31/summary-2020","type":"blog","date":"2020-12-31"}}},{"node":{"id":"91dc7b72-f6a0-5363-98b4-34bd3ee018e0","frontmatter":{"title":"如何 Think in Hooks","description":"差不多是时候该换换脑子了","tags":["react","hooks"],"cover":{"publicURL":"/static/26d13ef2591ee05a3c4bba7fc34daa88/think-in-hooks.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"how-to-think-in-hooks","slug":"/blog/2019/02/15/how-to-think-in-hooks","type":"blog","date":"2019-02-15"}}},{"node":{"id":"10413b69-d495-5634-a0ed-20f9e2b5d22d","frontmatter":{"title":"除了 SSR，就没有别的办法了吗","description":"当 MVVM 遇上 SEO，该如何是好","tags":["static","site","gatsby","pug"],"cover":{"publicURL":"/static/c2ac5cf49eafd77a1b2ce1fab7f53515/explore-static-site-generation.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"explore-static-site-generation","slug":"/blog/2019/02/07/explore-static-site-generation","type":"blog","date":"2019-02-07"}}},{"node":{"id":"bfbd5e1d-0801-5145-907c-532a5b5295b7","frontmatter":{"title":"【译】我们为什么要写 super(props)?","description":"好像知道，又好像不知道","tags":["react"],"cover":{"publicURL":"/static/9fbf74366dc5b9e4aab57572a9f0470d/overreacted.jpg"},"series":"overreacted","draft":false,"original":false},"fields":{"id":"why-do-we-write-super-props","slug":"/blog/2019/02/22/why-do-we-write-super-props","type":"blog","date":"2019-02-22"}}},{"node":{"id":"9399b22c-110e-538a-9111-cef715eccc94","frontmatter":{"title":"你可能已经知道的 ES 2018 和 2019","description":"好饭不怕晚","tags":["ecmascript","2018","2019"],"cover":{"publicURL":"/static/5646b4878e533cd7c725ce4c17984071/es2019.jpg"},"series":"ecmascript","draft":false,"original":true},"fields":{"id":"es2018-and-es2019","slug":"/blog/2019/02/11/es2018-and-es2019","type":"blog","date":"2019-02-11"}}},{"node":{"id":"2e4af78a-f010-524d-b227-7ed7f84ba2ef","frontmatter":{"title":"探索 React 组件之间的生命周期","description":"有时候，生活就是一团麻","tags":["react","lifecycle"],"cover":{"publicURL":"/static/0edf69056144aaf512a28d0670b53b57/react-lifecycle.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"react-lifecycle","slug":"/blog/2019/05/02/react-lifecycle","type":"blog","date":"2019-05-02"}}},{"node":{"id":"123e0512-24c5-5fab-8658-28ca773d9301","frontmatter":{"title":"【译】React 如何区分 Class 和 Function？","description":"所谓的简单，只是因为有人帮你把复杂的问题给解决掉了","tags":["react"],"cover":{"publicURL":"/static/9fbf74366dc5b9e4aab57572a9f0470d/overreacted.jpg"},"series":"overreacted","draft":false,"original":false},"fields":{"id":"how-does-react-tell-a-class-from-a-function","slug":"/blog/2019/03/06/how-does-react-tell-a-class-from-a-function","type":"blog","date":"2019-03-06"}}},{"node":{"id":"41cfe78e-2fe7-51d7-89fe-77ec89823496","frontmatter":{"title":"重新 Think in Hooks","description":"忘记过去之所学，我们从头来过","tags":["react","hooks"],"cover":{"publicURL":"/static/f9fcd719dcab55af4a1ad3d3cfbe0585/rethink-in-hooks.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"rethink-in-hooks","slug":"/blog/2019/05/27/rethink-in-hooks","type":"blog","date":"2019-05-27"}}},{"node":{"id":"119810c8-6b66-5af5-bc64-ba57e4d6e0ca","frontmatter":{"title":"TypeScript 次日指南","description":"坑这种东西，是不会写在文档上的","tags":["typescript"],"cover":{"publicURL":"/static/8239307adc5ccdfc32320e1bcadb6300/typescript.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"typescript-the-second-day","slug":"/blog/2019/07/28/typescript-the-second-day","type":"blog","date":"2019-07-28"}}},{"node":{"id":"3e2d98b6-6f15-5dd1-9509-5b6992f6de35","frontmatter":{"title":"TypeScript：又一个终将逝去的青春","description":"你，轰轰烈烈地来；你，平平淡淡地走。","tags":["typescript"],"cover":{"publicURL":"/static/b7b7642447ca6a5b28abf9f90bf06ef8/typescript-another-fading-youth.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"typescript-another-fading-youth","slug":"/blog/2019/10/10/typescript-another-fading-youth","type":"blog","date":"2019-10-10"}}},{"node":{"id":"7a389490-54d6-5222-a9d8-6d940a7042c7","frontmatter":{"title":"每天一点ES6(15)：Promise","description":"对你的承诺，永远不变","tags":["ecmascript","2015","es6","javascript","promise"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-15-promise","slug":"/blog/2018/03/04/es6-daily-15-promise","type":"blog","date":"2018-03-04"}}},{"node":{"id":"c16b75cf-1a3c-53dc-ad8b-9745a01d0288","frontmatter":{"title":"Homebrew 也有后悔药：回退一次小版本更新","description":"有了后悔药，可劲随便造","tags":["homebrew"],"cover":{"publicURL":"/static/2cd1cc709ca5d68b1a1fb9eb6283b820/homebrew.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"how-to-downgrade-from-homebrew","slug":"/blog/2019/10/11/how-to-downgrade-from-homebrew","type":"blog","date":"2019-10-11"}}},{"node":{"id":"0c389436-d27a-538e-b03d-8b4e7f9902a9","frontmatter":{"title":"每天一点ES6(14)：Iterator","description":"遍历也能搞出花来，怎么遍历你说了算","tags":["ecmascript","2015","es6","javascript","iterator","generator"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-14-iterator","slug":"/blog/2018/02/28/es6-daily-14-iterator","type":"blog","date":"2018-02-28"}}},{"node":{"id":"ca25cf33-2c0f-50a7-beac-6fe2833c4582","frontmatter":{"title":"一个非著名前端开发者的 2019","description":"感谢曾经努力的自己","tags":["summary","2019","2020"],"cover":{"publicURL":"/static/1011f23d2ed2635035a07878c03ed1da/summary-2019.jpg"},"series":"summary","draft":false,"original":true},"fields":{"id":"summary-2019","slug":"/blog/2019/12/31/summary-2019","type":"blog","date":"2019-12-31"}}},{"node":{"id":"89fec0ed-c56b-5eaa-a3a6-403c30c0dda3","frontmatter":{"title":"每天一点ES6(16)：Generator","description":"一起来摩擦摩擦发电吧","tags":["ecmascript","2015","es6","javascript","promise"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-16-generator","slug":"/blog/2018/06/14/es6-daily-16-generator","type":"blog","date":"2018-06-14"}}},{"node":{"id":"3aa48aa9-7f16-5426-9811-60b9e5cadfb0","frontmatter":{"title":"每天一点ES6(17)：Async / Await","description":"异步？先等等！","tags":["ecmascript","2015","es6","javascript","async","await","generator"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-17-async-await","slug":"/blog/2018/10/06/es6-daily-17-async-await","type":"blog","date":"2018-10-06"}}},{"node":{"id":"060f6efb-7f62-5c82-9c9c-a7b637cc39a8","frontmatter":{"title":"每天一点ES6(18)：Class","description":"这回总没人质疑 JS 不是面向对象了吧？","tags":["ecmascript","2015","es6","javascript","class"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-18-class","slug":"/blog/2018/12/17/es6-daily-18-class","type":"blog","date":"2018-12-17"}}},{"node":{"id":"5da03431-c5b3-5a75-85ea-11eb913c680b","frontmatter":{"title":"每天一点ES6(19)：Module","description":"可能是 ES6 中对未来影响最大的一项改变","tags":["ecmascript","2015","es6","javascript","module","import","export"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-19-module","slug":"/blog/2018/12/19/es6-daily-19-module","type":"blog","date":"2018-12-19"}}},{"node":{"id":"1e3454ba-7cc2-5634-a22c-119de3b1f128","frontmatter":{"title":"一个非著名前端开发者的 2018","description":"资本寒冬大概是属燕子的吧，一到年末出现","tags":["summary","2018","2019"],"cover":{"publicURL":"/static/0e9c38c3d5d6b94d53a8dee2a7bdfbae/summary-2018.jpg"},"series":"summary","draft":false,"original":true},"fields":{"id":"summary-2018","slug":"/blog/2018/12/31/summary-2018","type":"blog","date":"2018-12-31"}}},{"node":{"id":"093cc794-9227-5d21-bf6c-c60704ee2e9e","frontmatter":{"title":"TradingView + WebSocket 脱坑指南","description":"让我来告诉你，K 线到底该怎么画","tags":["tradingview","chart","library","guide","websocket","webworker","ohlc","kchart"],"cover":{"publicURL":"/static/1ceaf53d99815784a18273970e741bfd/tradingview.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"tradingview-charting-library-simple-guide","slug":"/blog/2018/09/22/tradingview-charting-library-simple-guide","type":"blog","date":"2018-09-22"}}},{"node":{"id":"b3dd7ba2-e9e5-537a-882c-d0df4f176c3d","frontmatter":{"title":"解决 macOS 下 MySQL 2002 错误","description":"MySQL 真是个磨人的小妖精","tags":["mac","mysql","2002"],"cover":{"publicURL":"/static/6f1abf9c085f6538df6bced86e008157/mysql-error-2002.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"mysql-error-2002","slug":"/blog/2017/02/07/mysql-error-2002","type":"blog","date":"2017-02-07"}}},{"node":{"id":"365f7b61-b82f-5c85-8a00-2bb2b3727a29","frontmatter":{"title":"PHP 处理多源 CORS 的解决办法","description":"一个老生常谈的话题，碰到了顺便记录一下","tags":["php","cors"],"cover":{"publicURL":"/static/77fc63594cf3a06c31921df671acd258/cors.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"multi-origin-cors-with-php","slug":"/blog/2017/03/30/multi-origin-cors-with-php","type":"blog","date":"2017-03-30"}}},{"node":{"id":"a4f0e1c3-c9be-5aa6-96f6-2fbcc42c06a0","frontmatter":{"title":"iOS 下 click() 无效的问题","description":"iOS这个傲娇的小公举","tags":["ios","click"],"cover":{"publicURL":"/static/f79051a5758b8a973902b2e5d190b714/ios-click.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"unable-to-trigger-click-on-ios","slug":"/blog/2017/03/31/unable-to-trigger-click-on-ios","type":"blog","date":"2017-03-31"}}},{"node":{"id":"c269a601-55c5-5074-b2a4-94c8a36143cd","frontmatter":{"title":"记 new Date().toString() 的一个坑","description":"万万没想到，竟在这里踩了个坑……","tags":["javascript","date","tostring"],"cover":{"publicURL":"/static/e192283893c7e97feb631571134bb805/date-tostring.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"a-pit-in-date-tostring","slug":"/blog/2017/03/08/a-pit-in-date-tostring","type":"blog","date":"2017-03-08"}}},{"node":{"id":"e8900516-96a3-5afc-ba47-56be137e9802","frontmatter":{"title":"每天一点ES6(10)：对象的扩展","description":"迟来的更新……","tags":["ecmascript","2015","es6","javascript","object"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-10-object","slug":"/blog/2017/04/05/es6-daily-10-object","type":"blog","date":"2017-04-05"}}},{"node":{"id":"63b88481-8f9c-5763-a7c9-909f73caa826","frontmatter":{"title":"Leetcode 第一刷：Two Sum","description":"都闪开，我要开始装逼了","tags":["leetcode","two","sum"],"cover":{"publicURL":"/static/1aa86b8eea674fca29117e535cfba751/leetcode.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"leetcode-01-two-sum","slug":"/blog/2017/04/11/leetcode-01-two-sum","type":"blog","date":"2017-04-11"}}},{"node":{"id":"1dd94850-d54c-5dee-958a-56dd1fdcd2a4","frontmatter":{"title":"Webpack \"Invalid Host Header\"","description":"更新有风险，更新需谨慎……","tags":["webpack","dev","server","invalid","host"],"cover":{"publicURL":"/static/977bc2ebe23a9b6b10fdac4b470847b8/webpack-dev-server.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"webpack-dev-server-invalid-host-header","slug":"/blog/2017/05/04/webpack-dev-server-invalid-host-header","type":"blog","date":"2017-05-04"}}},{"node":{"id":"1fabb41d-0d56-5e0e-ad33-14c4f5d0dacd","frontmatter":{"title":"每天一点ES6(11)：Symbol","description":"原始类型家族的新成员","tags":["ecmascript","2015","es6","javascript","symbol"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-11-symbol","slug":"/blog/2017/07/02/es6-daily-11-symbol","type":"blog","date":"2017-07-02"}}},{"node":{"id":"0208345d-0316-5c87-9158-174790345da6","frontmatter":{"title":"每天一点ES6(12)：Set 和 Map","description":"多余的，一概不要","tags":["ecmascript","2015","es6","javascript","map","set"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-12-set-and-map","slug":"/blog/2017/07/03/es6-daily-12-set-and-map","type":"blog","date":"2017-07-03"}}},{"node":{"id":"73d8f599-3f9e-5ab8-8285-f7cc15693bb3","frontmatter":{"title":"Electron 安装出坑指南","description":"世界本无坑，用的人多了，也就有了坑","tags":["electron"],"cover":{"publicURL":"/static/a9838665d68ab68d327e48d8720bac3f/electron.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"electron-install-guide","slug":"/blog/2017/07/06/electron-install-guide","type":"blog","date":"2017-07-06"}}},{"node":{"id":"598854e9-096f-5356-a1ee-50b4c7283058","frontmatter":{"title":"ECMAScript 2017 正式到来","description":"ES 的世界开始日趋平静","tags":["ecmascript","2017","es8","javascript"],"cover":{"publicURL":"/static/77b7677386d27526bcb0b2687218f3f1/es2017.jpg"},"series":"ecmascript","draft":false,"original":true},"fields":{"id":"ecmascript-2017-is-here","slug":"/blog/2017/07/12/ecmascript-2017-is-here","type":"blog","date":"2017-07-12"}}},{"node":{"id":"f5795f58-cfdd-53fd-8ecc-dac397dafc99","frontmatter":{"title":"TypeScript + Vue 踩坑纪实","description":"坑这种东西，多踩踩就平了","tags":["typescript","vue"],"cover":{"publicURL":"/static/fe6f5086d26293f21adf217a84141fd6/guide-for-vue-with-typescript.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"guide-for-vue-with-typescript","slug":"/blog/2017/10/26/guide-for-vue-with-typescript","type":"blog","date":"2017-10-26"}}},{"node":{"id":"0cd86905-fb73-50d5-8f46-1a5167553882","frontmatter":{"title":"童话说 V2.0 改版小结","description":"时隔多年，终于换新面貌了","tags":["blog","2.0","update"],"cover":{"publicURL":"/static/630ee6fc7ad1be564eebffb0e0dd447d/introducing-ths-v2.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"introducing-ths-v2","slug":"/blog/2017/08/12/introducing-ths-v2","type":"blog","date":"2017-08-12"}}},{"node":{"id":"391a7def-24c1-5557-97d3-60963b282da5","frontmatter":{"title":"Node.js 9.0.0 发布","description":"一转眼，又半年过去了","tags":["nodejs","release"],"cover":{"publicURL":"/static/86f3115cebbb8dd82646ff1d231fa317/nodejs-9-release.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"nodejs-9-release","slug":"/blog/2017/11/01/nodejs-9-release","type":"blog","date":"2017-11-01"}}},{"node":{"id":"90f390a6-9da3-5ee0-b978-15f5e12edfdd","frontmatter":{"title":"每天一点ES6(13)：Proxy 和 Reflect","description":"对不起，有代理真就是可以为所欲为","tags":["ecmascript","2015","es6","javascript","proxy","reflect"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-13-proxy-and-reflect","slug":"/blog/2017/12/20/es6-daily-13-proxy-and-reflect","type":"blog","date":"2017-12-20"}}},{"node":{"id":"6a23b961-96d3-5e53-a734-c0a0810ef667","frontmatter":{"title":"一个非著名前端开发者的 2017","description":"哎 ~ 又一年过去了","tags":["summary","2017","2018"],"cover":{"publicURL":"/static/0d96380257d25f6b398d9bc8e47af5a1/summary-2017.jpg"},"series":"summary","draft":false,"original":true},"fields":{"id":"summary-2017","slug":"/blog/2017/12/29/summary-2017","type":"blog","date":"2017-12-29"}}},{"node":{"id":"64247806-26f2-5252-ab98-62801520568b","frontmatter":{"title":"每天一点ES6(1)：概述","description":"伊艾斯6大法好，每天一点不会老！","tags":["ecmascript","2015","es6","javascript"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-01-intro","slug":"/blog/2016/01/24/es6-daily-01-intro","type":"blog","date":"2016-01-24"}}},{"node":{"id":"5877d054-fb30-5e95-8b28-17d690660184","frontmatter":{"title":"电梯调度算法","description":"上上下下的感受","tags":["elevator","algorithm","project"],"cover":{"publicURL":"/static/7b7f4cefe4c7bf293ff2cdb266af33d9/elevator.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"elevator","slug":"/blog/2016/02/16/elevator","type":"blog","date":"2016-02-16"}}},{"node":{"id":"eb3a8f9d-9091-541e-aaa7-f316543981a2","frontmatter":{"title":"每天一点ES6(2)：let 和 const","description":"终于，JavaScript 也能用上块级作用域和常量了","tags":["ecmascript","2015","es6","javascript","let","const"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-02-let-and-const","slug":"/blog/2016/01/25/es6-daily-02-let-and-const","type":"blog","date":"2016-01-25"}}},{"node":{"id":"84b7c3cf-4d2d-5dcd-9990-4d3b389814f0","frontmatter":{"title":"每天一点ES6(3)：解构赋值","description":"让你一次赋个够","tags":["ecmascript","2015","es6","javascript","destructuring"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-03-destructuring","slug":"/blog/2016/02/02/es6-daily-03-destructuring","type":"blog","date":"2016-02-02"}}},{"node":{"id":"9cf0b0ff-919c-5d4b-bcd3-9330508608cc","frontmatter":{"title":"每天一点ES6(6)：正则的扩展","description":"四字节 Unicode 的春天","tags":["ecmascript","2015","es6","javascript","regular","expression","regexp"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-06-regexp","slug":"/blog/2016/04/06/es6-daily-06-regexp","type":"blog","date":"2016-04-06"}}},{"node":{"id":"55898dbe-23b7-556a-af60-02ccc40c7a2a","frontmatter":{"title":"每天一点ES6(5)：字符串的扩展","description":"不变的字符串现在更加多变了","tags":["ecmascript","2015","es6","javascript","string"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-05-string","slug":"/blog/2016/04/05/es6-daily-05-string","type":"blog","date":"2016-04-05"}}},{"node":{"id":"74ab144b-9216-540a-a5b6-e4f706fc219b","frontmatter":{"title":"每天一点ES6(4)：Babel","description":"《圣经》的光辉，永恒！","tags":["ecmascript","2015","es6","javascript","babel","npm"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-04-babel","slug":"/blog/2016/02/19/es6-daily-04-babel","type":"blog","date":"2016-02-19"}}},{"node":{"id":"c6168388-b0a3-59e1-bd2a-2ee728c71a87","frontmatter":{"title":"每天一点ES6(7)：数值的扩展","description":"每一个数字都不能放过","tags":["ecmascript","2015","es6","javascript","number"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-07-number","slug":"/blog/2016/04/12/es6-daily-07-number","type":"blog","date":"2016-04-12"}}},{"node":{"id":"54aab46c-595d-5e16-b5ee-9b8c471a57db","frontmatter":{"title":"每天一点ES6(8)：数组的扩展","description":"别拿语法糖不当干粮","tags":["ecmascript","2015","es6","javascript","array"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-08-array","slug":"/blog/2016/07/26/es6-daily-08-array","type":"blog","date":"2016-07-26"}}},{"node":{"id":"a6a47b16-74c7-5d9c-a530-78ce7c5fc9c2","frontmatter":{"title":"5 分钟彻底明白 JSONP","description":"说穿了，其实没那么难","tags":["javascript","jsonp"],"cover":{"publicURL":"/static/f8f2d118b15646398f7d00e19eb17ff9/jsonp.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"jsonp","slug":"/blog/2016/08/17/jsonp","type":"blog","date":"2016-08-17"}}},{"node":{"id":"d2b40478-e158-5448-99ac-51de602d98b6","frontmatter":{"title":"每天一点ES6(9)：函数的扩展","description":"博采众长的实用语法糖","tags":["ecmascript","2015","es6","javascript","function"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-09-function","slug":"/blog/2016/12/20/es6-daily-09-function","type":"blog","date":"2016-12-20"}}},{"node":{"id":"b3edad58-2d88-58b7-a4cd-56f1a91bb49d","frontmatter":{"title":"栈计算器","description":"通过“栈”实现的方程式计算器","tags":["stack","calculator","algorithm","project"],"cover":{"publicURL":"/static/256bbf9439e7f58974c946bc16f54832/stack-calculator.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"stack-calculator","slug":"/blog/2015/02/10/stack-calculator","type":"blog","date":"2015-02-10"}}},{"node":{"id":"5b5a084b-eeb2-57ab-b981-4c8b9d82ce9e","frontmatter":{"title":"一个非著名前端开发者的 2016","description":"回顾 2016，是充实的一年，不负青春。2017 加油继续！","tags":["summary","2016","2017"],"cover":{"publicURL":"/static/d4bc85d6ff1aa8985e03c3875f90ea51/summary-2016.jpg"},"series":"summary","draft":false,"original":true},"fields":{"id":"summary-2016","slug":"/blog/2016/12/31/summary-2016","type":"blog","date":"2016-12-31"}}},{"node":{"id":"16d261c5-a0ce-5f9e-81e2-f1034254846b","frontmatter":{"title":"使用 Sublime Text 编写 LaTeX","description":"用你最熟悉的工具来写 LaTeX 吧","tags":["sublime","latex"],"cover":{"publicURL":"/static/e7689b7e9fe6160a6ed614a10125ca29/latex-with-sublime-text.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"latex-with-sublime-text","slug":"/blog/2015/04/01/latex-with-sublime-text","type":"blog","date":"2015-04-01"}}},{"node":{"id":"34603905-f3b9-5d64-aea2-22e4763ceb27","frontmatter":{"title":"时间是什么颜色的","description":"如果时间有颜色……","tags":["color","time","project"],"cover":{"publicURL":"/static/03c874556dd31d9db5f30b7609751b92/tik-tok-color.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"tik-tok-color","slug":"/blog/2015/02/11/tik-tok-color","type":"blog","date":"2015-02-11"}}},{"node":{"id":"1711cb2b-a1df-521e-a2ad-2baac24ddd99","frontmatter":{"title":"纯 CSS3 绘制月饼","description":"中秋佳节，用CSS3来画个月饼吧","tags":["css","mooncake","project"],"cover":{"publicURL":"/static/9aaefaae86216c79623893c080f1ccc2/css3-mooncake.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"css3-mooncake","slug":"/blog/2015/09/27/css3-mooncake","type":"blog","date":"2015-09-27"}}},{"node":{"id":"0563bb73-7712-51a4-809b-0649e646184f","frontmatter":{"title":"substr() 和 substring() 的区别","description":"两个函数，傻傻分不清楚","tags":["javascript","substr","substring","slice"],"cover":{"publicURL":"/static/289ad52fc38963e15549cd1dc24678e4/substring.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"substr-and-substring","slug":"/blog/2015/05/15/substr-and-substring","type":"blog","date":"2015-05-15"}}},{"node":{"id":"eed17ff1-3597-5706-91c0-25f26af1c8ad","frontmatter":{"title":"MIUI 图标缓存问题","description":"离奇失踪的图标","tags":["android","miui","icon","cache"],"cover":{"publicURL":"/static/2e66c31a61d5319c1849ea082e8c80ee/miui-icon-cache.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"miui-icon-cache","slug":"/blog/2015/04/18/miui-icon-cache","type":"blog","date":"2015-04-18"}}}]},"markdownRemark":{"id":"d66a351c-5c82-5b53-85ba-d46840f71f87","html":"<p>年底了，才想起来今年的 ES 版本还没正经看过。ES 标准的发展已经逐渐让人开始忘记其归属哪个版本了，只知道有这么个东西存在，至于 Babel 支持了没？TypeScript 支持了没？Chrome 支持了没？Node 支持了没？进标准了吗？能用于生产了吗？只能靠查了。</p>\n<p>上一次正儿八百讨论 ES 标准还是大概快 2 年前，是的，我特意翻了一下，ES 2019 那一篇是在 19 年 2 月份写的，和 ES2018 一起……所以想必到这个时候，大家该关心的已经关心的差不多了，不关心的也不差这会儿了。</p>\n<p>我就当给自己补个卡，大家随意吧。</p>\n<h2>先看标准</h2>\n<p>如果不是踩到深坑没别的办法，其实不推荐大家去看 <a href=\"https://tc39.es/ecma262/\" target=\"_blank\" rel=\"noopener noreferrer\">ECMA-262</a>，这东西太细了。你不必非得对螺丝的技术规范了如指掌，才能开始拧螺丝，拧不动的时候再来翻，误不了事儿。</p>\n<p>对于大部分朋友，我比较推荐看 TC39 的 Github 上整理的<a href=\"https://github.com/tc39/proposals/blob/master/finished-proposals.md\" target=\"_blank\" rel=\"noopener noreferrer\">这份表格</a>，一目了然。这里我截取了其中归属 ES 2020 的部分，就当做本文的目录吧。</p>\n<table>\n<thead>\n<tr>\n<th>Proposal</th>\n<th>Publication Year</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"gatsby-code-text\">String.prototype.matchAll</code></td>\n<td>2020</td>\n</tr>\n<tr>\n<td><code class=\"gatsby-code-text\">import()</code></td>\n<td>2020</td>\n</tr>\n<tr>\n<td><code class=\"gatsby-code-text\">BigInt</code></td>\n<td>2020</td>\n</tr>\n<tr>\n<td><code class=\"gatsby-code-text\">Promise.allSettled</code></td>\n<td>2020</td>\n</tr>\n<tr>\n<td><code class=\"gatsby-code-text\">globalThis</code></td>\n<td>2020</td>\n</tr>\n<tr>\n<td><code class=\"gatsby-code-text\">for-in</code> mechanics</td>\n<td>2020</td>\n</tr>\n<tr>\n<td>Optional Chaining</td>\n<td>2020</td>\n</tr>\n<tr>\n<td>Nullish coalescing Operator</td>\n<td>2020</td>\n</tr>\n<tr>\n<td><code class=\"gatsby-code-text\">import.meta</code></td>\n<td>2020</td>\n</tr>\n</tbody>\n</table>\n<p>总体来看，ES 2020 的内容还是很实用的，其中不乏大家期待已久终于转正的特性。下面就来逐个介绍下：</p>\n<h2><code class=\"gatsby-code-text\">String.prototype.matchAll</code></h2>\n<p>可以看做是对 <code class=\"gatsby-code-text\">String.prototype.match</code> 的增强，返回一个 Iterator，内容包含了所有正则匹配到的结果（支持捕获组）</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-js line-numbers\"><code class=\"gatsby-code-js\"><span class=\"token keyword\">const</span> regexp <span class=\"token operator\">=</span> <span class=\"token regex\">/t(e)(st(\\d?))/g</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">'test1test2'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">matchAll</span><span class=\"token punctuation\">(</span>regexp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// expected output: Array [\"test1\", \"e\", \"st1\", \"1\"]</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// expected output: Array [\"test2\", \"e\", \"st2\", \"2\"]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2><code class=\"gatsby-code-text\">import()</code></h2>\n<p>Dynamic Import，众望所归终于到来，ES 2019 发布时这项特性还在 Stage 3，今年妥妥转正。</p>\n<p>通过 <code class=\"gatsby-code-text\">import()</code>，我们可以像用 Axios 发起一个 HTTP 请求一样，去异步加载一个模块，并得到一个 Promise 的返回。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-js line-numbers\"><code class=\"gatsby-code-js\"><span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">./module-1.js</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">module</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    module<span class=\"token punctuation\">.</span><span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h2><code class=\"gatsby-code-text\">import.meta</code></h2>\n<p>这个看起来像是访问某个对象的属性的语句，实际上这一整段是一个对象，用于获取当前模块被引用的环境上下文，目前仅支持 url 一个参数。</p>\n<p>有了这个语法，我们可以在加载模块的时候给 URL 添加查询参数，以此对模块进行传值。</p>\n<p>需要注意的是，<code class=\"gatsby-code-text\">import</code> 本身就是一个关键字，同时还可以是一个方法，现在看来可能还是一个对象，但我们不能直接做 <code class=\"gatsby-code-text\">console.log(import)</code> 这种骚操作，会报错：</p>\n<blockquote>\n<p>Error: import can only be used in import() or import.meta</p>\n</blockquote>\n<p>因此尽管 <code class=\"gatsby-code-text\">import</code> 背后很可能就是一个特别的对象，但我们并不能直接访问它，还是老老实实记住 <code class=\"gatsby-code-text\">import.meta</code> 这个固定搭配吧</p>\n<h2><code class=\"gatsby-code-text\">BigInt</code></h2>\n<p>BigInt 是一个新增的内置对象，用于表示比 Number 类型能可靠表示的最大整数 Number.MAX<em>SAFE</em>INTEGER （2^53 - 1）更大的整数。</p>\n<p>当然这只是 BigInt 的设计用途，硬要用它代替 Number 来表示一般的自然数也不是不可以。比如 1 可以表示为 1n。</p>\n<p>BigInt 有两种表达方式，可以当做函数使用，也可以在整数的字面直接量后面加 n 来表示。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-js line-numbers\"><code class=\"gatsby-code-js\"><span class=\"token keyword\">const</span> previouslyMaxSafeInteger <span class=\"token operator\">=</span> <span class=\"token number\">9007199254740991n</span>\n\n<span class=\"token keyword\">const</span> alsoHuge <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">9007199254740991</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// ↪ 9007199254740991n</span>\n\n<span class=\"token keyword\">const</span> hugeString <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"9007199254740991\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// ↪ 9007199254740991n</span>\n\n<span class=\"token keyword\">const</span> hugeHex <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0x1fffffffffffff\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// ↪ 9007199254740991n</span>\n\n<span class=\"token keyword\">const</span> hugeOctal <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0o377777777777777777\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// ↪ 9007199254740991n</span>\n\n<span class=\"token keyword\">const</span> hugeBin <span class=\"token operator\">=</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0b11111111111111111111111111111111111111111111111111111\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// ↪ 9007199254740991n</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>BigInt 是一种新的数据类型，和 Number 不完全等价，在一些极端场景的判断中需要特别注意。但是 BigInt 可以和 Number 一起进行比大小，因此在排序等场景下可以同时出现没有问题。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-js line-numbers\"><code class=\"gatsby-code-js\"><span class=\"token keyword\">typeof</span> <span class=\"token number\">1n</span> <span class=\"token operator\">===</span> <span class=\"token string\">'bigint'</span>           <span class=\"token comment\">// true</span>\n<span class=\"token keyword\">typeof</span> <span class=\"token function\">BigInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'bigint'</span>  <span class=\"token comment\">// true</span>\n\n<span class=\"token number\">0n</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token comment\">// false</span>\n<span class=\"token number\">0n</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span>  <span class=\"token comment\">// true</span>\n\n<span class=\"token number\">1n</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span> <span class=\"token comment\">// true</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>另外特别需要强调「整数」这一点，BigInt 的四则运算是不会出现小数的，除法运算的结果会向下取整。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-js line-numbers\"><code class=\"gatsby-code-js\"><span class=\"token keyword\">const</span> rounded <span class=\"token operator\">=</span> <span class=\"token number\">5n</span> <span class=\"token operator\">/</span> <span class=\"token number\">2n</span>\n<span class=\"token comment\">// ↪ 2n, not 2.5n</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h2><code class=\"gatsby-code-text\">Promise.allSettled</code></h2>\n<p>类似 <code class=\"gatsby-code-text\">Promise.all</code>，但不要求全部 fulfilled，只要全部都返回了即可。</p>\n<h2><code class=\"gatsby-code-text\">globalThis</code></h2>\n<p>JavaScript 的顶级对象在不同环境中表现不一致：</p>\n<ul>\n<li>浏览器中的顶级对象是 window，但 Node 和 Web Worker 中没有 window。</li>\n<li>浏览器和 Web Worker 中 self 也指向顶层对象，但是 Node 没有 self。</li>\n<li>Node 中的顶级对象是 global，但其他环境都不支持。</li>\n</ul>\n<p>globalThis 被设计用来统一这些顶级对象，不管哪种环境，都可以通过 globalThis 来访问顶级对象</p>\n<h2><code class=\"gatsby-code-text\">for-in</code> mechanics</h2>\n<p><code class=\"gatsby-code-text\">for-in</code> 语句并不新鲜，但一直以来，该语句在不同环境下的遍历顺序是不尽相同的，这一次只是规范了一下它的遍历顺序。</p>\n<p>不过尽管如此，在对遍历顺序有要求的场景下，还是排序最为靠谱，不建议依靠这种不确定的特性。大部分时候 <code class=\"gatsby-code-text\">for-of</code> 和 <code class=\"gatsby-code-text\">Object.entries()</code> 等已经可以很好的满足我们了。</p>\n<h2>Optional Chaining</h2>\n<p>可选链式操作，这应该是今年大家用的最多的特性了，在 TypeScript 的支持下，这一特性可以说已经比较普及了，我也已经用得很习惯了。</p>\n<p>简单来说，这是一个语法糖，引入了 <code class=\"gatsby-code-text\">?.</code> 操作符，用来更好的处理如下的场景：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-js line-numbers\"><code class=\"gatsby-code-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n  user <span class=\"token operator\">&amp;&amp;</span>\n  user<span class=\"token punctuation\">.</span>profile <span class=\"token operator\">&amp;&amp;</span>\n  user<span class=\"token punctuation\">.</span>profile<span class=\"token punctuation\">.</span>name\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 这种场景下很容易出现 Cannot read property 'name' of undefined</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 现在可以写作</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user<span class=\"token operator\">?.</span>profile<span class=\"token operator\">?.</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"gatsby-code-text\">?.</code> 操作符可以跟在任何你怀疑可能为 undefined 或 null 的属性后面，返回能访问到的最深层级的属性的值，如果中途遇到 undefined 或 null 则提前返回。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-js line-numbers\"><code class=\"gatsby-code-js\">obj<span class=\"token operator\">?.</span>props      <span class=\"token comment\">// 静态属性</span>\nobj<span class=\"token operator\">?.</span><span class=\"token punctuation\">[</span>expr<span class=\"token punctuation\">]</span>     <span class=\"token comment\">// 动态属性</span>\nfunc<span class=\"token operator\">?.</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 函数调用</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h2>Nullish coalescing Operator</h2>\n<p>空值合并，这是和 Optional Chaining 同期出现的特性，同样拜 TypeScript 所赐得到了不错的普及。</p>\n<p>这同样也是个语法糖，引入了 <code class=\"gatsby-code-text\">??</code> 操作符，作为用 <code class=\"gatsby-code-text\">||</code> 取默认值的一种补充。</p>\n<p>用 <code class=\"gatsby-code-text\">||</code> 取默认值时，只要左值为 falsy，就会用右值代替，而在用 <code class=\"gatsby-code-text\">??</code> 时，仅当左值为 undefined 或 null 时，才会取右值，否则即便是 falsy 的值，也会得到返回。</p>\n<p>简单案例说明一下：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-js line-numbers\"><code class=\"gatsby-code-js\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nullValue<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n  num<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  text<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  isOk<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 只要 falsy 就取默认值</span>\n<span class=\"token keyword\">const</span> undefValue <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>undefValue <span class=\"token operator\">||</span> <span class=\"token string\">'defaultVal'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// result: 'defaultVal'</span>\n<span class=\"token keyword\">const</span> nullValue <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>nullValue <span class=\"token operator\">||</span> <span class=\"token string\">'defaultVal'</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// result: 'defaultVal'</span>\n<span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>text <span class=\"token operator\">||</span> <span class=\"token string\">'Hello, world!'</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// result: 'Hello, world!'</span>\n<span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>num <span class=\"token operator\">||</span> <span class=\"token number\">300</span><span class=\"token punctuation\">;</span>                        <span class=\"token comment\">// result: 300</span>\n<span class=\"token keyword\">const</span> isOk <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>isOk <span class=\"token operator\">||</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>                     <span class=\"token comment\">// result: true</span>\n\n<span class=\"token comment\">// 仅 undefined 或 null 才去默认值</span>\n<span class=\"token keyword\">const</span> undefValue <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>undefValue <span class=\"token operator\">??</span> <span class=\"token string\">'defaultVal'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// result: 'defaultVal'</span>\n<span class=\"token keyword\">const</span> nullValue <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>nullValue <span class=\"token operator\">??</span> <span class=\"token string\">'defaultVal'</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// result: 'defaultVal'</span>\n<span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>text <span class=\"token operator\">??</span> <span class=\"token string\">'Hello, world!'</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// result: ''</span>\n<span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>num <span class=\"token operator\">??</span> <span class=\"token number\">300</span><span class=\"token punctuation\">;</span>                        <span class=\"token comment\">// result: 0</span>\n<span class=\"token keyword\">const</span> isOk <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>isOk <span class=\"token operator\">??</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>                     <span class=\"token comment\">// result: false</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"title":"你铁定已经知道的 ES 2020","description":"迟到，总比不到好","cover":{"publicURL":"/static/5bbe9cbd4d341256fe533f89aa242cb6/es2020.jpg"},"tags":["ecmascript","2020"],"series":"ecmascript","draft":false},"fields":{"id":"es-2020","date":"2020-12-28"},"headings":[{"value":"先看标准","depth":2},{"value":"<code class=\"gatsby-code-text\">String.prototype.matchAll</code>","depth":2},{"value":"<code class=\"gatsby-code-text\">import()</code>","depth":2},{"value":"<code class=\"gatsby-code-text\">import.meta</code>","depth":2},{"value":"<code class=\"gatsby-code-text\">BigInt</code>","depth":2},{"value":"<code class=\"gatsby-code-text\">Promise.allSettled</code>","depth":2},{"value":"<code class=\"gatsby-code-text\">globalThis</code>","depth":2},{"value":"<code class=\"gatsby-code-text\">for-in</code> mechanics","depth":2},{"value":"Optional Chaining","depth":2},{"value":"Nullish coalescing Operator","depth":2}],"tableOfContents":"<ul>\n<li><a href=\"/blog/2020/12/28/es-2020/#%E5%85%88%E7%9C%8B%E6%A0%87%E5%87%86\">先看标准</a></li>\n<li><a href=\"/blog/2020/12/28/es-2020/#code-classgatsby-code-textstringprototypematchallcode\"><code class=\"gatsby-code-text\">String.prototype.matchAll</code></a></li>\n<li><a href=\"/blog/2020/12/28/es-2020/#code-classgatsby-code-textimportcode\"><code class=\"gatsby-code-text\">import()</code></a></li>\n<li><a href=\"/blog/2020/12/28/es-2020/#code-classgatsby-code-textimportmetacode\"><code class=\"gatsby-code-text\">import.meta</code></a></li>\n<li><a href=\"/blog/2020/12/28/es-2020/#code-classgatsby-code-textbigintcode\"><code class=\"gatsby-code-text\">BigInt</code></a></li>\n<li><a href=\"/blog/2020/12/28/es-2020/#code-classgatsby-code-textpromiseallsettledcode\"><code class=\"gatsby-code-text\">Promise.allSettled</code></a></li>\n<li><a href=\"/blog/2020/12/28/es-2020/#code-classgatsby-code-textglobalthiscode\"><code class=\"gatsby-code-text\">globalThis</code></a></li>\n<li><a href=\"/blog/2020/12/28/es-2020/#code-classgatsby-code-textfor-incode-mechanics\"><code class=\"gatsby-code-text\">for-in</code> mechanics</a></li>\n<li><a href=\"/blog/2020/12/28/es-2020/#optional-chaining\">Optional Chaining</a></li>\n<li><a href=\"/blog/2020/12/28/es-2020/#nullish-coalescing-operator\">Nullish coalescing Operator</a></li>\n</ul>","timeToRead":6}},"pageContext":{"slug":"/blog/2020/12/28/es-2020"}}}