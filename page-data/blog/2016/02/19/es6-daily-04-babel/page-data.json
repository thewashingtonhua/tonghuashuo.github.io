{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/2016/02/19/es6-daily-04-babel","result":{"data":{"site":{"siteMetadata":{"title":"童话说","keywords":["tonghuashuo","github","front-end","javascript","typescript","react","node","washington","hua","童话","童话说","前端","博客","技术","计算机","互联网"]}},"allMarkdownRemark":{"totalCount":77,"edges":[{"node":{"id":"eb774da5-3c5b-5dc1-bf6d-9f1ec040e222","frontmatter":{"title":"CSS Scan","description":"VSCode 扩展，自动补全 CSS 变量","tags":null,"cover":{"publicURL":"/static/72e94c39ebb670dd23625675c0a22ace/blank.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"css-scan","slug":"/project/css-scan","type":"project","date":null}}},{"node":{"id":"52c14666-2e1f-5d9d-8200-41713b54c39a","frontmatter":{"title":"FBC","description":"联合办公空间的会员服务","tags":null,"cover":{"publicURL":"/static/73b8b250e607c97c493edf1b542345fa/fbc.jpg"},"series":null,"draft":false,"original":null},"fields":{"id":"fbc","slug":"/project/fbc","type":"project","date":null}}},{"node":{"id":"1c347cf5-624a-553b-9ba1-5200bcbe404e","frontmatter":{"title":"Fridge","description":"Teambition 设计资产速查工具","tags":null,"cover":{"publicURL":"/static/97b869f04b74e763be87e4369e4690e3/fridge.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"fridge","slug":"/project/fridge","type":"project","date":null}}},{"node":{"id":"f6124abb-a556-558d-8053-b55bda280fc3","frontmatter":{"title":"Github-Flutter","description":"基于 Flutter 开发的 Github 客户端","tags":null,"cover":{"publicURL":"/static/72e94c39ebb670dd23625675c0a22ace/blank.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"github-flutter","slug":"/project/github-flutter","type":"project","date":null}}},{"node":{"id":"e66d25c0-b3d3-5be1-b1ce-8b3cc5796db0","frontmatter":{"title":"INEX 影力所","description":"泛娱乐领域的垂直数字货币交易所","tags":null,"cover":{"publicURL":"/static/40ff0dfa20bfd2e8e2b2ea8abb900b5b/inex.jpg"},"series":null,"draft":false,"original":null},"fields":{"id":"inex","slug":"/project/inex","type":"project","date":null}}},{"node":{"id":"deb4a6cb-73b2-5ef6-a124-4315ff0ea7a6","frontmatter":{"title":"Teamedia","description":"Teambition 出品的网盘应用","tags":null,"cover":{"publicURL":"/static/a5318825484a23816f7831bab7f12d82/teamedia.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"teamedia","slug":"/project/teamedia","type":"project","date":null}}},{"node":{"id":"49b65e31-f0a3-5d35-8eca-75779aea26b7","frontmatter":{"title":"小书签","description":"让 Chrome 的书签更好用","tags":null,"cover":{"publicURL":"/static/72e94c39ebb670dd23625675c0a22ace/blank.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"the-collector","slug":"/project/the-collector","type":"project","date":null}}},{"node":{"id":"55b24908-59a1-5e57-9e8b-179b74161064","frontmatter":{"title":"小图标","description":"一站式 Favicon 解决方案","tags":null,"cover":{"publicURL":"/static/72e94c39ebb670dd23625675c0a22ace/blank.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"the-favicon","slug":"/project/the-favicon","type":"project","date":null}}},{"node":{"id":"57655088-0ae6-54b7-aa97-c9df05e9a957","frontmatter":{"title":"小扫描","description":"磁盘占用一眼","tags":null,"cover":{"publicURL":"/static/72e94c39ebb670dd23625675c0a22ace/blank.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"the-scanner","slug":"/project/the-scanner","type":"project","date":null}}},{"node":{"id":"2fbcc3fe-6081-5ea1-a85b-af0ad5891342","frontmatter":{"title":"小剧透","description":"Web 版「剧情连拍」","tags":null,"cover":{"publicURL":"/static/72e94c39ebb670dd23625675c0a22ace/blank.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"the-spoiler","slug":"/project/the-spoiler","type":"project","date":null}}},{"node":{"id":"620f5a4f-5f68-5c8c-adb5-d9ce78e36ce7","frontmatter":{"title":"Thoughts 所思","description":"Teambition 出品的企业知识管理应用","tags":null,"cover":{"publicURL":"/static/faff3495c115cab9b6fd951f3c6b96f9/thoughts.jpg"},"series":null,"draft":false,"original":null},"fields":{"id":"thoughts","slug":"/project/thoughts","type":"project","date":null}}},{"node":{"id":"730b99c7-1786-5732-996d-7e988979e77a","frontmatter":{"title":"新阅","description":"在线视频协作平台","tags":null,"cover":{"publicURL":"/static/64b35564f5bc639232b66b6559065b31/xinyue.jpg"},"series":null,"draft":false,"original":null},"fields":{"id":"xinyue","slug":"/project/xinyue","type":"project","date":null}}},{"node":{"id":"6f125f9c-2618-512e-9a71-4df69bf960f8","frontmatter":{"title":"提效 50%，榨干 webpack","description":"我们的目标是：榨干 webpack","tags":["webpack"],"cover":{"publicURL":"/static/d221320d45d5d7ac530fe7af1ab4cd79/blank.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"speed-up-your-build","slug":"/blog/2020/02/20/speed-up-your-build","type":"blog","date":"2020-02-20"}}},{"node":{"id":"ffd2167f-246b-54a5-8ac1-75e907753ef5","frontmatter":{"title":"Xshowroom 买手圈","description":"时尚业专业买手服务平台","tags":null,"cover":{"publicURL":"/static/72ea2ae7921cb5aa0b3b4f56578ed2b9/xshowroom.jpg"},"series":null,"draft":false,"original":null},"fields":{"id":"xshowroom","slug":"/project/xshowroom","type":"project","date":null}}},{"node":{"id":"4b88a8c7-531c-5d5a-88c2-0248abe7825c","frontmatter":{"title":"再来聊聊前端面试","description":"人嘛，总是在不断的试错中成长起来的","tags":["interview"],"cover":{"publicURL":"/static/c6ee2544d5e90e8349ec2b751c37e298/interview.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"thoughts-about-fe-interview","slug":"/blog/2020/01/20/thoughts-about-fe-interview","type":"blog","date":"2020-01-20"}}},{"node":{"id":"e3e16ec9-50ee-5e7f-8b5a-3a58b94f5e26","frontmatter":{"title":"聊聊「深色模式」","description":"你说的黑不是黑，你说的暗是什么暗","tags":["design","dark"],"cover":{"publicURL":"/static/d221320d45d5d7ac530fe7af1ab4cd79/blank.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"dark-mode","slug":"/blog/2020/03/15/dark-mode","type":"blog","date":"2020-03-15"}}},{"node":{"id":"9b1edfe0-1c9a-5870-a750-4d415456e0fd","frontmatter":{"title":"Flutter 扫雷记","description":"穿上新买的鞋，走上复古的小路","tags":["flutter"],"cover":{"publicURL":"/static/b6ce1e63c11d6fddd7a988bfb312deb5/flutter.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"learning-flutter","slug":"/blog/2020/04/03/learning-flutter","type":"blog","date":"2020-04-03"}}},{"node":{"id":"b947a112-1719-5c1e-973b-2857833f2145","frontmatter":{"title":"我的数组返回了啥","description":"功夫再高，一针下去也得倒","tags":["javascript","array"],"cover":{"publicURL":"/static/805a58ee0da37d1812988339eb18df47/array.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"what-does-my-array-return","slug":"/blog/2020/02/30/what-does-my-array-return","type":"blog","date":"2020-02-30"}}},{"node":{"id":"d4daf12f-fd60-5e74-b1ba-c346c84a8d92","frontmatter":{"title":"「童话说」又改版啦","description":"只为遇见更好的自己","tags":["blog","4.0","update"],"cover":{"publicURL":"/static/d221320d45d5d7ac530fe7af1ab4cd79/blank.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"introducing-ths-v4","slug":"/blog/2020/03/15/introducing-ths-v4","type":"blog","date":"2020-03-15"}}},{"node":{"id":"6f7cc28d-7a7b-5a2d-b66b-428c0f78abc5","frontmatter":{"title":"为什么我们总是在不断地造轮子","description":"圆的圆的圆的东西","tags":["thinking"],"cover":{"publicURL":"/static/120fefa8e824de66889cf2e45b746ebe/wheel.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"why-do-we-keep-building-wheels","slug":"/blog/2020/05/10/why-do-we-keep-building-wheels","type":"blog","date":"2020-05-10"}}},{"node":{"id":"7895e729-cfea-58a7-87b8-d720f3130851","frontmatter":{"title":"GraphQL：从起飞到落地","description":"你经手的下一个项目，很可能就有它","tags":["design"],"cover":{"publicURL":"/static/d221320d45d5d7ac530fe7af1ab4cd79/blank.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"adopting-graphql","slug":"/blog/2020/08/10/adopting-graphql","type":"blog","date":"2020-08-10"}}},{"node":{"id":"711fcaa8-350a-581f-9182-83af7a066ef3","frontmatter":{"title":"设计一套乐观更新机制","description":"做人呐，最重要的就是乐观啦","tags":["design","optimistic","update"],"cover":{"publicURL":"/static/92603cdac7e5c420caea18ea2c459646/optimistic-update.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"building-an-optimisic-update-mechanism","slug":"/blog/2020/07/13/building-an-optimisic-update-mechanism","type":"blog","date":"2020-07-13"}}},{"node":{"id":"d3336392-f32b-5510-a57b-101ed2d0d909","frontmatter":{"title":"基于 Sass 的主题定制方案","description":"本以为很简单的事情，然而……","tags":["css","sass","theme"],"cover":{"publicURL":"/static/d221320d45d5d7ac530fe7af1ab4cd79/blank.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"custom-theme","slug":"/blog/2020/05/31/custom-theme","type":"blog","date":"2020-05-31"}}},{"node":{"id":"aad2bb3c-97c8-5c46-9510-206a702aef93","frontmatter":{"title":"Fridge 背后的故事","description":"能动手的，咱们尽量别吵吵","tags":["electron","iconfont","svg","fridge"],"cover":{"publicURL":"/static/d221320d45d5d7ac530fe7af1ab4cd79/blank.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"story-behind-fridge","slug":"/blog/2020/08/11/story-behind-fridge","type":"blog","date":"2020-08-11"}}},{"node":{"id":"93194ae7-8949-5ba1-96f6-5935a746f504","frontmatter":{"title":"除了 SSR，就没有别的办法了吗","description":"当 MVVM 遇上 SEO，该如何是好","tags":["static","site","gatsby","pug"],"cover":{"publicURL":"/static/c2ac5cf49eafd77a1b2ce1fab7f53515/explore-static-site-generation.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"explore-static-site-generation","slug":"/blog/2019/02/07/explore-static-site-generation","type":"blog","date":"2019-02-07"}}},{"node":{"id":"5438f8b3-6d57-508a-bfb4-668398c3fea0","frontmatter":{"title":"你可能已经知道的 ES 2018 和 2019","description":"好饭不怕晚","tags":["ecmascript","2018","2019"],"cover":{"publicURL":"/static/5646b4878e533cd7c725ce4c17984071/es2019.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"es2018-and-es2019","slug":"/blog/2019/02/11/es2018-and-es2019","type":"blog","date":"2019-02-11"}}},{"node":{"id":"1c7d5f58-bf2f-52ca-88b0-c53c8e639257","frontmatter":{"title":"如何 Think in Hooks","description":"差不多是时候该换换脑子了","tags":["react","hooks"],"cover":{"publicURL":"/static/26d13ef2591ee05a3c4bba7fc34daa88/think-in-hooks.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"how-to-think-in-hooks","slug":"/blog/2019/02/15/how-to-think-in-hooks","type":"blog","date":"2019-02-15"}}},{"node":{"id":"1380bd6b-1af2-5b4b-a1ba-b2306f104cca","frontmatter":{"title":"【译】我们为什么要写 super(props)?","description":"好像知道，又好像不知道","tags":["react"],"cover":{"publicURL":"/static/9fbf74366dc5b9e4aab57572a9f0470d/overreacted.jpg"},"series":"overreacted","draft":false,"original":false},"fields":{"id":"why-do-we-write-super-props","slug":"/blog/2019/02/22/why-do-we-write-super-props","type":"blog","date":"2019-02-22"}}},{"node":{"id":"7e2c164b-3855-5c39-9077-10a1c6d95461","frontmatter":{"title":"【译】React 如何区分 Class 和 Function？","description":"所谓的简单，只是因为有人帮你把复杂的问题给解决掉了","tags":["react"],"cover":{"publicURL":"/static/9fbf74366dc5b9e4aab57572a9f0470d/overreacted.jpg"},"series":"overreacted","draft":false,"original":false},"fields":{"id":"how-does-react-tell-a-class-from-a-function","slug":"/blog/2019/03/06/how-does-react-tell-a-class-from-a-function","type":"blog","date":"2019-03-06"}}},{"node":{"id":"273757fd-f6c0-5927-a4a5-8ad1d5a0fe08","frontmatter":{"title":"探索 React 组件之间的生命周期","description":"有时候，生活就是一团麻","tags":["react","lifecycle"],"cover":{"publicURL":"/static/0edf69056144aaf512a28d0670b53b57/react-lifecycle.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"react-lifecycle","slug":"/blog/2019/05/02/react-lifecycle","type":"blog","date":"2019-05-02"}}},{"node":{"id":"aa911d0a-c6f8-5b75-a468-7b98fec25ce4","frontmatter":{"title":"重新 Think in Hooks","description":"忘记过去之所学，我们从头来过","tags":["react","hooks"],"cover":{"publicURL":"/static/f9fcd719dcab55af4a1ad3d3cfbe0585/rethink-in-hooks.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"rethink-in-hooks","slug":"/blog/2019/05/27/rethink-in-hooks","type":"blog","date":"2019-05-27"}}},{"node":{"id":"da18a414-9b36-5dc7-92d5-792baf93a0ec","frontmatter":{"title":"TypeScript 次日指南","description":"坑这种东西，是不会写在文档上的","tags":["typescript"],"cover":{"publicURL":"/static/8239307adc5ccdfc32320e1bcadb6300/typescript.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"typescript-the-second-day","slug":"/blog/2019/07/28/typescript-the-second-day","type":"blog","date":"2019-07-28"}}},{"node":{"id":"1689b67b-a5fc-5bd1-92ec-437e8651321b","frontmatter":{"title":"TypeScript：又一个终将逝去的青春","description":"你，轰轰烈烈地来；你，平平淡淡地走。","tags":["typescript"],"cover":{"publicURL":"/static/b7b7642447ca6a5b28abf9f90bf06ef8/typescript-another-fading-youth.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"typescript-another-fading-youth","slug":"/blog/2019/10/10/typescript-another-fading-youth","type":"blog","date":"2019-10-10"}}},{"node":{"id":"a36d090f-1508-57bd-9957-902b4d03d960","frontmatter":{"title":"Homebrew 也有后悔药：回退一次小版本更新","description":"有了后悔药，可劲随便造","tags":["homebrew"],"cover":{"publicURL":"/static/2cd1cc709ca5d68b1a1fb9eb6283b820/homebrew.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"how-to-downgrade-from-homebrew","slug":"/blog/2019/10/11/how-to-downgrade-from-homebrew","type":"blog","date":"2019-10-11"}}},{"node":{"id":"7cad0010-d083-5470-9782-5bf8effe4971","frontmatter":{"title":"一个非著名前端开发者的 2019","description":"感谢曾经努力的自己","tags":["summary","2019","2020"],"cover":{"publicURL":"/static/1011f23d2ed2635035a07878c03ed1da/summary-2019.jpg"},"series":"summary","draft":false,"original":true},"fields":{"id":"summary-2019","slug":"/blog/2019/12/31/summary-2019","type":"blog","date":"2019-12-31"}}},{"node":{"id":"d76a7f7d-008f-5bb2-a930-639213185d5c","frontmatter":{"title":"每天一点ES6(14)：Iterator","description":"遍历也能搞出花来，怎么遍历你说了算","tags":["ecmascript","2015","es6","javascript","iterator","generator"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-14-iterator","slug":"/blog/2018/02/28/es6-daily-14-iterator","type":"blog","date":"2018-02-28"}}},{"node":{"id":"e534c1a6-0c0c-5fea-a0b2-f1abb3d10d3f","frontmatter":{"title":"每天一点ES6(15)：Promise","description":"对你的承诺，永远不变","tags":["ecmascript","2015","es6","javascript","promise"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-15-promise","slug":"/blog/2018/03/04/es6-daily-15-promise","type":"blog","date":"2018-03-04"}}},{"node":{"id":"2f1ddce6-841e-55c2-a557-50b5ec3c3713","frontmatter":{"title":"每天一点ES6(16)：Generator","description":"一起来摩擦摩擦发电吧","tags":["ecmascript","2015","es6","javascript","promise"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-16-generator","slug":"/blog/2018/06/14/es6-daily-16-generator","type":"blog","date":"2018-06-14"}}},{"node":{"id":"2c5d0720-ba96-51b5-b9c5-09ee319ac666","frontmatter":{"title":"TradingView + WebSocket 脱坑指南","description":"让我来告诉你，K 线到底该怎么画","tags":["tradingview","chart","library","guide","websocket","webworker","ohlc","kchart"],"cover":{"publicURL":"/static/1ceaf53d99815784a18273970e741bfd/tradingview.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"tradingview-charting-library-simple-guide","slug":"/blog/2018/09/22/tradingview-charting-library-simple-guide","type":"blog","date":"2018-09-22"}}},{"node":{"id":"fe9e19f8-efc1-5d7b-b35e-c2e504114e3a","frontmatter":{"title":"每天一点ES6(17)：Async / Await","description":"异步？先等等！","tags":["ecmascript","2015","es6","javascript","async","await","generator"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-17-async-await","slug":"/blog/2018/10/06/es6-daily-17-async-await","type":"blog","date":"2018-10-06"}}},{"node":{"id":"902bdc4e-f005-5757-8b6c-1a7b5a9bbfac","frontmatter":{"title":"每天一点ES6(18)：Class","description":"这回总没人质疑 JS 不是面向对象了吧？","tags":["ecmascript","2015","es6","javascript","class"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-18-class","slug":"/blog/2018/12/17/es6-daily-18-class","type":"blog","date":"2018-12-17"}}},{"node":{"id":"916ca434-4243-579e-bfc0-9619e1ec5e24","frontmatter":{"title":"一个非著名前端开发者的 2018","description":"资本寒冬大概是属燕子的吧，一到年末出现","tags":["summary","2018","2019"],"cover":{"publicURL":"/static/0e9c38c3d5d6b94d53a8dee2a7bdfbae/summary-2018.jpg"},"series":"summary","draft":false,"original":true},"fields":{"id":"summary-2018","slug":"/blog/2018/12/31/summary-2018","type":"blog","date":"2018-12-31"}}},{"node":{"id":"6bf194a4-a039-5e1f-b22c-d5d61bde30fb","frontmatter":{"title":"每天一点ES6(19)：Module","description":"可能是 ES6 中对未来影响最大的一项改变","tags":["ecmascript","2015","es6","javascript","module","import","export"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-19-module","slug":"/blog/2018/12/19/es6-daily-19-module","type":"blog","date":"2018-12-19"}}},{"node":{"id":"034170ee-35c3-5e70-97bd-1be86317f096","frontmatter":{"title":"解决 macOS 下 MySQL 2002 错误","description":"MySQL 真是个磨人的小妖精","tags":["mac","mysql","2002"],"cover":{"publicURL":"/static/6f1abf9c085f6538df6bced86e008157/mysql-error-2002.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"mysql-error-2002","slug":"/blog/2017/02/07/mysql-error-2002","type":"blog","date":"2017-02-07"}}},{"node":{"id":"14303392-eb0b-52ed-bbdd-b99f7e55381c","frontmatter":{"title":"记 new Date().toString() 的一个坑","description":"万万没想到，竟在这里踩了个坑……","tags":["javascript","date","tostring"],"cover":{"publicURL":"/static/e192283893c7e97feb631571134bb805/date-tostring.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"a-pit-in-date-tostring","slug":"/blog/2017/03/08/a-pit-in-date-tostring","type":"blog","date":"2017-03-08"}}},{"node":{"id":"14d7c2fb-7a6d-587c-8ef2-268e8dd08821","frontmatter":{"title":"PHP 处理多源 CORS 的解决办法","description":"一个老生常谈的话题，碰到了顺便记录一下","tags":["php","cors"],"cover":{"publicURL":"/static/77fc63594cf3a06c31921df671acd258/cors.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"multi-origin-cors-with-php","slug":"/blog/2017/03/30/multi-origin-cors-with-php","type":"blog","date":"2017-03-30"}}},{"node":{"id":"d7c2c685-5279-5f45-a60e-ac1bedb7ad3b","frontmatter":{"title":"iOS 下 click() 无效的问题","description":"iOS这个傲娇的小公举","tags":["ios","click"],"cover":{"publicURL":"/static/f79051a5758b8a973902b2e5d190b714/ios-click.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"unable-to-trigger-click-on-ios","slug":"/blog/2017/03/31/unable-to-trigger-click-on-ios","type":"blog","date":"2017-03-31"}}},{"node":{"id":"25b0a05a-f39a-5475-b2fb-6e890024a76f","frontmatter":{"title":"每天一点ES6(10)：对象的扩展","description":"迟来的更新……","tags":["ecmascript","2015","es6","javascript","object"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-10-object","slug":"/blog/2017/04/05/es6-daily-10-object","type":"blog","date":"2017-04-05"}}},{"node":{"id":"3c675b7a-e654-516b-a3e2-84f8428baf16","frontmatter":{"title":"Webpack \"Invalid Host Header\"","description":"更新有风险，更新需谨慎……","tags":["webpack","dev","server","invalid","host"],"cover":{"publicURL":"/static/977bc2ebe23a9b6b10fdac4b470847b8/webpack-dev-server.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"webpack-dev-server-invalid-host-header","slug":"/blog/2017/05/04/webpack-dev-server-invalid-host-header","type":"blog","date":"2017-05-04"}}},{"node":{"id":"841173f9-3c99-5b6d-90b0-edc1bc03200d","frontmatter":{"title":"Leetcode 第一刷：Two Sum","description":"都闪开，我要开始装逼了","tags":["leetcode","two","sum"],"cover":{"publicURL":"/static/1aa86b8eea674fca29117e535cfba751/leetcode.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"leetcode-01-two-sum","slug":"/blog/2017/04/11/leetcode-01-two-sum","type":"blog","date":"2017-04-11"}}},{"node":{"id":"28a799ed-61ac-5c52-ac1f-57be84d09783","frontmatter":{"title":"每天一点ES6(11)：Symbol","description":"原始类型家族的新成员","tags":["ecmascript","2015","es6","javascript","symbol"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-11-symbol","slug":"/blog/2017/07/02/es6-daily-11-symbol","type":"blog","date":"2017-07-02"}}},{"node":{"id":"6bcc4eb9-0018-5fd7-9319-75b1666de383","frontmatter":{"title":"每天一点ES6(12)：Set 和 Map","description":"多余的，一概不要","tags":["ecmascript","2015","es6","javascript","map","set"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-12-set-and-map","slug":"/blog/2017/07/03/es6-daily-12-set-and-map","type":"blog","date":"2017-07-03"}}},{"node":{"id":"03a55c90-b656-5fbe-9802-7bacfc9dfda6","frontmatter":{"title":"Electron 安装出坑指南","description":"世界本无坑，用的人多了，也就有了坑","tags":["electron"],"cover":{"publicURL":"/static/a9838665d68ab68d327e48d8720bac3f/electron.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"electron-install-guide","slug":"/blog/2017/07/06/electron-install-guide","type":"blog","date":"2017-07-06"}}},{"node":{"id":"429d3de7-b673-59b4-9374-bd47be2d84e8","frontmatter":{"title":"ECMAScript 2017 正式到来","description":"ES 的世界开始日趋平静","tags":["ecmascript","2017","es8","javascript"],"cover":{"publicURL":"/static/77b7677386d27526bcb0b2687218f3f1/es2017.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"ecmascript-2017-is-here","slug":"/blog/2017/07/12/ecmascript-2017-is-here","type":"blog","date":"2017-07-12"}}},{"node":{"id":"941cfa8a-fc4c-558a-81b8-6eaeedcd29c8","frontmatter":{"title":"童话说 V2.0 改版小结","description":"时隔多年，终于换新面貌了","tags":["blog","2.0","update"],"cover":{"publicURL":"/static/630ee6fc7ad1be564eebffb0e0dd447d/introducing-ths-v2.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"introducing-ths-v2","slug":"/blog/2017/08/12/introducing-ths-v2","type":"blog","date":"2017-08-12"}}},{"node":{"id":"ad555a36-adb9-5bd6-b1f5-6f3c4640c27b","frontmatter":{"title":"TypeScript + Vue 踩坑纪实","description":"坑这种东西，多踩踩就平了","tags":["typescript","vue"],"cover":{"publicURL":"/static/fe6f5086d26293f21adf217a84141fd6/guide-for-vue-with-typescript.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"guide-for-vue-with-typescript","slug":"/blog/2017/10/26/guide-for-vue-with-typescript","type":"blog","date":"2017-10-26"}}},{"node":{"id":"83d556ea-b054-54d2-8f01-0503872c8be2","frontmatter":{"title":"Node.js 9.0.0 发布","description":"一转眼，又半年过去了","tags":["nodejs","release"],"cover":{"publicURL":"/static/86f3115cebbb8dd82646ff1d231fa317/nodejs-9-release.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"nodejs-9-release","slug":"/blog/2017/11/01/nodejs-9-release","type":"blog","date":"2017-11-01"}}},{"node":{"id":"7a5bf0b6-4306-57ea-8aa7-c25f84b2e3fd","frontmatter":{"title":"每天一点ES6(13)：Proxy 和 Reflect","description":"对不起，有代理真就是可以为所欲为","tags":["ecmascript","2015","es6","javascript","proxy","reflect"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-13-proxy-and-reflect","slug":"/blog/2017/12/20/es6-daily-13-proxy-and-reflect","type":"blog","date":"2017-12-20"}}},{"node":{"id":"937ef5fa-f090-5154-9e5a-07ac71c21abd","frontmatter":{"title":"一个非著名前端开发者的 2017","description":"哎 ~ 又一年过去了","tags":["summary","2017","2018"],"cover":{"publicURL":"/static/0d96380257d25f6b398d9bc8e47af5a1/summary-2017.jpg"},"series":"summary","draft":false,"original":true},"fields":{"id":"summary-2017","slug":"/blog/2017/12/29/summary-2017","type":"blog","date":"2017-12-29"}}},{"node":{"id":"8d61cd08-e710-556d-9e07-027c78d1f981","frontmatter":{"title":"每天一点ES6(1)：概述","description":"伊艾斯6大法好，每天一点不会老！","tags":["ecmascript","2015","es6","javascript"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-01-intro","slug":"/blog/2016/01/24/es6-daily-01-intro","type":"blog","date":"2016-01-24"}}},{"node":{"id":"b97439aa-2e04-574e-8a3c-f2ae98ab05dc","frontmatter":{"title":"每天一点ES6(2)：let 和 const","description":"终于，JavaScript 也能用上块级作用域和常量了","tags":["ecmascript","2015","es6","javascript","let","const"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-02-let-and-const","slug":"/blog/2016/01/25/es6-daily-02-let-and-const","type":"blog","date":"2016-01-25"}}},{"node":{"id":"748c4aaa-f157-5f73-b098-822449e3e5fd","frontmatter":{"title":"电梯调度算法","description":"上上下下的感受","tags":["elevator","algorithm","project"],"cover":{"publicURL":"/static/7b7f4cefe4c7bf293ff2cdb266af33d9/elevator.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"elevator","slug":"/blog/2016/02/16/elevator","type":"blog","date":"2016-02-16"}}},{"node":{"id":"4c8921a6-6cf1-55ce-92ff-2db25424d835","frontmatter":{"title":"每天一点ES6(3)：解构赋值","description":"让你一次赋个够","tags":["ecmascript","2015","es6","javascript","destructuring"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-03-destructuring","slug":"/blog/2016/02/02/es6-daily-03-destructuring","type":"blog","date":"2016-02-02"}}},{"node":{"id":"23292539-577c-5367-a046-dcd590f4dd9e","frontmatter":{"title":"每天一点ES6(4)：Babel","description":"《圣经》的光辉，永恒！","tags":["ecmascript","2015","es6","javascript","babel","npm"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-04-babel","slug":"/blog/2016/02/19/es6-daily-04-babel","type":"blog","date":"2016-02-19"}}},{"node":{"id":"741e8e7b-be5c-5e76-8b7e-de57174d490e","frontmatter":{"title":"每天一点ES6(5)：字符串的扩展","description":"不变的字符串现在更加多变了","tags":["ecmascript","2015","es6","javascript","string"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-05-string","slug":"/blog/2016/04/05/es6-daily-05-string","type":"blog","date":"2016-04-05"}}},{"node":{"id":"64eae26e-fc44-5e11-b686-c51cde2dea6a","frontmatter":{"title":"每天一点ES6(6)：正则的扩展","description":"四字节 Unicode 的春天","tags":["ecmascript","2015","es6","javascript","regular","expression","regexp"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-06-regexp","slug":"/blog/2016/04/06/es6-daily-06-regexp","type":"blog","date":"2016-04-06"}}},{"node":{"id":"6572f129-a62e-5cc5-8f87-be06f67a0bda","frontmatter":{"title":"每天一点ES6(7)：数值的扩展","description":"每一个数字都不能放过","tags":["ecmascript","2015","es6","javascript","number"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-07-number","slug":"/blog/2016/04/12/es6-daily-07-number","type":"blog","date":"2016-04-12"}}},{"node":{"id":"7ee25fb2-ea5c-58c2-a8ac-6b42f8693a6d","frontmatter":{"title":"每天一点ES6(8)：数组的扩展","description":"别拿语法糖不当干粮","tags":["ecmascript","2015","es6","javascript","array"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-08-array","slug":"/blog/2016/07/26/es6-daily-08-array","type":"blog","date":"2016-07-26"}}},{"node":{"id":"4ad27401-b0f3-5269-ae01-3a2ad2dcfbfc","frontmatter":{"title":"每天一点ES6(9)：函数的扩展","description":"博采众长的实用语法糖","tags":["ecmascript","2015","es6","javascript","function"],"cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-09-function","slug":"/blog/2016/12/20/es6-daily-09-function","type":"blog","date":"2016-12-20"}}},{"node":{"id":"ac9d5bb7-c4df-5f1a-a3da-5fbdeae86177","frontmatter":{"title":"5 分钟彻底明白 JSONP","description":"说穿了，其实没那么难","tags":["javascript","jsonp"],"cover":{"publicURL":"/static/f8f2d118b15646398f7d00e19eb17ff9/jsonp.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"jsonp","slug":"/blog/2016/08/17/jsonp","type":"blog","date":"2016-08-17"}}},{"node":{"id":"5e1e4ab1-d9cd-5c67-bd5d-69efb1c8dfaa","frontmatter":{"title":"一个非著名前端开发者的 2016","description":"回顾 2016，是充实的一年，不负青春。2017 加油继续！","tags":["summary","2016","2017"],"cover":{"publicURL":"/static/d4bc85d6ff1aa8985e03c3875f90ea51/summary-2016.jpg"},"series":"summary","draft":false,"original":true},"fields":{"id":"summary-2016","slug":"/blog/2016/12/31/summary-2016","type":"blog","date":"2016-12-31"}}},{"node":{"id":"7499c4c1-4f63-5811-a96a-86630b44e5b9","frontmatter":{"title":"使用 Sublime Text 编写 LaTeX","description":"用你最熟悉的工具来写 LaTeX 吧","tags":["sublime","latex"],"cover":{"publicURL":"/static/e7689b7e9fe6160a6ed614a10125ca29/latex-with-sublime-text.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"latex-with-sublime-text","slug":"/blog/2015/04/01/latex-with-sublime-text","type":"blog","date":"2015-04-01"}}},{"node":{"id":"d896acb5-2868-5534-a355-63e02b49a0ae","frontmatter":{"title":"栈计算器","description":"通过“栈”实现的方程式计算器","tags":["stack","calculator","algorithm","project"],"cover":{"publicURL":"/static/256bbf9439e7f58974c946bc16f54832/stack-calculator.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"stack-calculator","slug":"/blog/2015/02/10/stack-calculator","type":"blog","date":"2015-02-10"}}},{"node":{"id":"eb3ee752-691c-5a06-a50b-6a96899697ce","frontmatter":{"title":"时间是什么颜色的","description":"如果时间有颜色……","tags":["color","time","project"],"cover":{"publicURL":"/static/03c874556dd31d9db5f30b7609751b92/tik-tok-color.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"tik-tok-color","slug":"/blog/2015/02/11/tik-tok-color","type":"blog","date":"2015-02-11"}}},{"node":{"id":"ffc4262c-5033-521b-b3d3-025203bb12eb","frontmatter":{"title":"MIUI 图标缓存问题","description":"离奇失踪的图标","tags":["android","miui","icon","cache"],"cover":{"publicURL":"/static/2e66c31a61d5319c1849ea082e8c80ee/miui-icon-cache.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"miui-icon-cache","slug":"/blog/2015/04/18/miui-icon-cache","type":"blog","date":"2015-04-18"}}},{"node":{"id":"e984ad39-2991-5a05-aa84-1dffb097c4c0","frontmatter":{"title":"substr() 和 substring() 的区别","description":"两个函数，傻傻分不清楚","tags":["javascript","substr","substring","slice"],"cover":{"publicURL":"/static/289ad52fc38963e15549cd1dc24678e4/substring.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"substr-and-substring","slug":"/blog/2015/05/15/substr-and-substring","type":"blog","date":"2015-05-15"}}},{"node":{"id":"f8806a62-d0b4-55b9-8d0e-cf83410ec466","frontmatter":{"title":"纯 CSS3 绘制月饼","description":"中秋佳节，用CSS3来画个月饼吧","tags":["css","mooncake","project"],"cover":{"publicURL":"/static/9aaefaae86216c79623893c080f1ccc2/css3-mooncake.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"css3-mooncake","slug":"/blog/2015/09/27/css3-mooncake","type":"blog","date":"2015-09-27"}}}]},"markdownRemark":{"html":"<h2>打脸</h2>\n<p>好吧，这个系列已经从一开始的日更变成现在周更都未必做得到了，啪！啪！啪！打脸呐！！！</p>\n<p>好，打脸完毕，下面我们来说正事儿。</p>\n<h2><del>ES6 无限好，就是用不了</del></h2>\n<p><del>尽管 ES6 发布有一阵子了，但各大浏览器的兼容工作才刚刚开始，最新版的 Chrome、Firefox、Safari 对 ES6 的支持度还处于起步阶段，而谁又能想到，Microsoft Edge 这次竟成黑马，现阶段的支持度已有 80% 左右，实战能力仅次于 Node.js 平台。</del></p>\n<p><del>但相信大部分开发者的信仰归属依然是 Chrome 和 Firefox，现阶段要想在这些环境下试用 ES6，最好的办法就是借助一些转码器，将 ES6 的代码转换成 ES5 的等效实现。目前最靠谱的转码器非 <a href=\"https://babeljs.io\" target=\"_blank\" rel=\"noopener noreferrer\">Babel</a> 莫属。</del></p>\n<h2>为什么需要 Babel</h2>\n<p>尽管如今主流环境对 ES 2015+ 的原生支持度越来越高，但各个环境的支持进度不尽相同，因此需要一个机制来确保新的语法在没有原生支持的平台上也能正常运行——这就是 Babel 的作用。不管你用什么样的语法标准，Babel 都把它统一成 ES5 的语法。</p>\n<h2>《圣经》的力量</h2>\n<p>第一眼看到这货的名字，就想到《圣经》（Bible），两者的拼写是何其的相似，果不其然，Babel 的英文释义是“巴别塔”，是《圣经》中提到的一座通天塔。</p>\n<p>Babel 是目前支持度最高，同时也是使用最广泛的 ES6 转码器，Facebook、Mozilla、Yahoo、npm、MongoDB 等国内外上百家科技公司都在使用它。该项目最初的名称叫 6to5，用意非常明显。</p>\n<h2>Babel 的版本</h2>\n<p>Babel 有两个比较重要的大版本，Babel 5 和 Babel 6，后面的章节都以 Babel6 为例。</p>\n<p>对新手而言 Babel 5 更加友好，因为只有 babel 一个命令行工具。Babel 6 将整套工具拆分为几个单独的工具和插件，更灵活，但上手也更麻烦。现在 Babel 5 虽然还能够安装，但已经没有什么卵用，命令行会提示你安装 Babel 6 的包。</p>\n<h2>Babel 的安装和配置</h2>\n<p>Babel 通过 npm 进行安装，这就需要你预先安装好 Node.js 的环境，前端发展到现在，不管你是否看好 Node.js 都免不了要和它打交道了。</p>\n<p>Babel 官方推荐将 Babel 安装在本地，因为 Babel 的不同版本以及不同转码规则会起到不同的效果。当然全局和本地的版本并不冲突，在项目中会优先使用本地安装的，但如果是在项目之外有测试需要，全局安装过就会方便许多。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-bash line-numbers\"><code class=\"gatsby-code-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev babel-cli // 本地\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g babel-cli // 全局</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>光有一个 babel-cli 什么也做不了，我们还要为 Babel 设置语法规则。官方提供了几套预设的插件集合，除了标准的 ES2015+，还针对主流的开发工具提供了相应的插件和预设，例如 React、Flow、TypeScript 等。一般我们选 env 就好了。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-bash line-numbers\"><code class=\"gatsby-code-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev babel-preset-env</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<blockquote>\n<p>现在 ES 的发布周期确定为一年一个大版本，Babel 为每个年度的标准提供了单独的预设包，但如果每次出新特性都要改预设太麻烦（虽然基本上也就一年一次的样子），为此 Babel 官方推出了 env 预设（之前叫 latest，现在已经 deprecated 了），把从 ES2015 开始到当年的所有用于标准 ECMAScript 转码工具全部打包到一起，后续只需要升级这个包就好了。开发者还可以在 <code class=\"gatsby-code-text\">.babelrc</code> 中设置要支持的环境范围，类似 auto-prefixer，以减少转码的工作量。</p>\n</blockquote>\n<p>在项目根目录下创建一个 <code class=\"gatsby-code-text\">.babelrc</code> 文件，注意这是个配置文件，以点号开头，没有后缀。Windows 系统是不允许直接创建这样格式的文件的，需要借助代码编辑器来新建文件。创建好后写入以下内容来启用预设：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-json line-numbers\"><code class=\"gatsby-code-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"env\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>当然这段配置也可以写到 <code class=\"gatsby-code-text\">package.json</code> 里，或是在构建工具的脚本中直接传入，但使用 <code class=\"gatsby-code-text\">.babelrc</code> 配置文件的方式更加符合关注点分离的思想，必要时还能够满足代码复用的需求，推荐这种方法。</p>\n<p>至此，我们就完成了 Babel 的安装，可以开始使用了。</p>\n<h2>通过命令行使用 Babel</h2>\n<p>对于全局安装了的用户，打开 Terminal 并切换到 JS 文件所在位置，就可以开始用了。下面的命令会将转码结果输出到 Terminal 的标准输出中：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-bash line-numbers\"><code class=\"gatsby-code-bash\">babel es6.js</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>当然更多的时候我们是希望把结果放入文件中的：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-bash line-numbers\"><code class=\"gatsby-code-bash\">babel es6.js -o es6-babeled.js</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Babel 支持对文件进行监测，文件内容有改动，会自动执行转码，无需人工再干预。（通过 Ctrl/Command + C 结束）</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-bash line-numbers\"><code class=\"gatsby-code-bash\">babel es6.js --watch -o es6-babeled.js</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Babel 还能批量处理整个路径下的 JS 文件，下面的代码把 src 目录下的文件批量转码，并放到 lib 目录下：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-bash line-numbers\"><code class=\"gatsby-code-bash\">babel src -d lib</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>还可以从 Terminal 的标准输入中读取文件进行转码：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-bash line-numbers\"><code class=\"gatsby-code-bash\">babel -o es6-babeled.js <span class=\"token operator\">&lt;</span> es6.js</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2>通过 npm 安装 Babel</h2>\n<p>全局安装的 Babel 适合偶尔测试一些代码片段，如果是在项目中使用，还是推荐本地安装，然后在 <code class=\"gatsby-code-text\">package.json</code> 中的 <code class=\"gatsby-code-text\">scripts</code> 属性中添加相关命令： <code class=\"gatsby-code-text\">&quot;build&quot;: &quot;babel src -d build&quot;</code> ，之后只要在项目根目录执行 <code class=\"gatsby-code-text\">npm run build</code> ，就会自动调用本地版本的 Babel 对 <code class=\"gatsby-code-text\">src</code> 目录下的 js 文件转码并将转码后的文件放到 <code class=\"gatsby-code-text\">build</code> 目录下。</p>\n<p>如果你使用了其他的构建/打包工具，如 Grunt、Gulp、Webpack、Rollup 等，也都有各自适用的 Babel 插件可以使用。</p>\n<h3>关于 npm 包的全局安装和本地安装</h3>\n<p> npm 的包分全局安装和本地安装，只有全局安装的包才能直接使用其命令行（如果有的话），因为全局安装过程会把命令行工具添加进环境变量，因而系统能够查找到。本地安装由于项目根目录不属于环境变量中，因此无法直接通过全局命令访问，但可以通过 <code class=\"gatsby-code-text\">package.json</code> 中的 <code class=\"gatsby-code-text\">scripts</code> 属性进行调用。</p>\n<p>  对于全局安装：</p>\n<ul>\n<li>mac 和 linux 下是通过在 <code class=\"gatsby-code-text\">/usr/local/bin</code> 目录下（环境变量中默认包含）创建软连接指向 npm 全局安装目录下对应的文件。</li>\n<li>Windows 是在 Node 安装目录下的 <code class=\"gatsby-code-text\">node_global</code> 目录中创建 <code class=\"gatsby-code-text\">*.cmd</code> 后缀的脚本（Node 安装配置过程已将该目录添加至环境变量），通过脚本调用 npm 全局安装目录下对应的文件。</li>\n</ul>\n<p>  本地安装的命令行工具会在项目根目录下的  <code class=\"gatsby-code-text\">/node_modules/.bin</code>  目录中创建一个软连接，指向本地安装目录下对应的入口文件，该目录下的命令都可以在 <code class=\"gatsby-code-text\">package.json</code> 中的 <code class=\"gatsby-code-text\">scripts</code> 属性中直接使用，node 会优先到  <code class=\"gatsby-code-text\">/node_modules/.bin</code> 目录查找，找不到再到父级 <code class=\"gatsby-code-text\">node_modules</code> 目录找，直到全局目录。</p>\n<p>  本地安装的包也可以手动执行 <code class=\"gatsby-code-text\">node_modules/package_name/bin/index.js</code> 来运行命令行工具（一般都是这么个套路，有“bin”目录就找“bin”目录，没有就具体看包的 <code class=\"gatsby-code-text\">package.json</code> 里 <code class=\"gatsby-code-text\">main</code> 字段的描述）， <code class=\"gatsby-code-text\">package.json</code> 里的 <code class=\"gatsby-code-text\">scripts</code> 属性里也可以这么写，尽管没有必要。</p>\n<h2><del>babel-node</del>（新版中已移除）</h2>\n<p><del>babel-node 是随 babel-cli 一起安装的另一款命令行工具，是一个模拟 Node.js 环境的 REPL（Read-Evel-Print Loop，一种循环执行“读取-执行-输出”的程序）。执行 <code class=\"gatsby-code-text\">babel-node</code> 会进入一个类似 Node.js 的环境，在这里你可以直接运行 ES6 的代码。你也可以用形如 <code class=\"gatsby-code-text\">babel-node es6.js</code> 的命令来直接运行用 ES6 编写的文件，babel-node 会在运行代码之前先将其编译成 ES5 的等效代码，然后执行。</del></p>\n<p><del>甚至可以改写 <code class=\"gatsby-code-text\">package.json</code> 文件，用 babel-node 替代 node 命令来直接运行。</del></p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-json line-numbers\"><code class=\"gatsby-code-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"run-node\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"babel-node app.js\"</span>    <span class=\"token comment\">// 需替换成实际文件名</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><del>此时执行 <code class=\"gatsby-code-text\">npm run script</code> 就等同于执行 <code class=\"gatsby-code-text\">babel-node script.js</code></del></p>\n<h2><del>babel-doctor</del>（新版中已移除）</h2>\n<p><del>看名字就知道，这个工具大概是排错用的。没错，如果在命令行中执行 `</del>babel<del><code class=\"gatsby-code-text\">命令有问题的，可以用它来检查一下环境配置是否正确。</code></del>babel-doctor<del>` 主要检查以下几项内容：</del></p>\n<ul>\n<li><del>项目根目录下是否存在 `</del>.babelrc<del>` 文件</del></li>\n<li><del>是否有重复的 Babel 版本，例如同时安装了 Babel 5 和 Babel 6</del></li>\n<li><del>所有已安装的 Babel 工具是否升级到了最新版</del></li>\n<li><del>npm 的版本是否大于等于 3.3.0</del></li>\n</ul>\n<h2>在 Node.js 中使用 Babel</h2>\n<p>在 Node.js 环境中，可以直接在 js 文件里调用 Babel 的转码功能。</p>\n<h3>babel-register</h3>\n<p>该模块给 <code class=\"gatsby-code-text\">require()</code> 加上一个钩子，加载它之后，每当再 require 其他 js、jsx、es、es6 类型的文件，就会先用 Babel 进行转码。需要注意的是，使用该模块的文件本身并不会被转码，需要从外部执行转码。另外由于是实时转码，从效率上考虑不适用与生产环境，仅供学习研究使用。</p>\n<h3>babel-core</h3>\n<p>这是 Babel 的核心 API 所在，在项目中加载该模块 <code class=\"gatsby-code-text\">var babel = require(&quot;babel-core&quot;);</code> ，然后就可以通过 <code class=\"gatsby-code-text\">babel.transform(code, options)</code> 方法来执行转码， <code class=\"gatsby-code-text\">code</code> 是待转码的 ES6 代码字符串， <code class=\"gatsby-code-text\">options</code> 提供了一些转码说明，例如指定语法规则、启用一些插件、设定编码等，具体用法可以参考 <a href=\"http://babeljs.io/docs/usage/options\" target=\"_blank\" rel=\"noopener noreferrer\">这里</a>。</p>\n<h2>在浏览器中使用 Babel</h2>\n<h3>babel-polyfill</h3>\n<p>这是 Babel 官方提供的语言环境垫片。Babel 只负责转码 ES6 的新语法（syntax），而不转换新的 API，比如 Iterator、Generator、Set、Maps、Proxy、Reflect、Symbol、Promise 等全局对象，以及一些定义在全局对象上的方法（比如 Object.assign、Array.from）都不会转码。主流浏览器的最新版基本都已经原生支持了这些语法，但如果你的代码需要运行在比较老的环境，可以通过在文件顶部加上 <code class=\"gatsby-code-text\">require(&quot;babel-polyfill&quot;)</code> 来引入垫片。</p>\n<h3>browser.js</h3>\n<p>在命令行中使用 Babel 虽然在功能性上没得挑，但毕竟还有各种配置，多少有点麻烦。Babel 提供了一种可以在浏览器中使用的方法，只需两步就能一劳永逸。这个方法唯一的缺点就是实时转码需要时间，性能上不及预先转换的方案，因此生产环境中不推荐使用，仅供学习研究使用。</p>\n<p>首先我们需要下载 <a href=\"https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.29/browser.min.js\" target=\"_blank\" rel=\"noopener noreferrer\">browser.js</a>，注意，这是 Babel 5 的版本，Babel 6 开始不再直接提供该文件，需要自行构建。</p>\n<p>除了从上面的链接下载，你也可以用 npm 下载：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-bash line-numbers\"><code class=\"gatsby-code-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> babel-core@5</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>下载后在 <code class=\"gatsby-code-text\">node_modules/babel-core</code> 子目录中就能找到 <code class=\"gatsby-code-text\">browser.js</code> 文件。</p>\n<p>使用方法如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-html line-numbers\"><code class=\"gatsby-code-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>`browser.js`</span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span>`your_own_es6_file.js`</span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>有两点需要注意</p>\n<ol>\n<li>browser.js 文件必须放在你自己的 js 文件之前</li>\n<li>你自己的文件的类型要写成 <code class=\"gatsby-code-text\">type=&quot;text/babel&quot;</code></li>\n</ol>\n<h2>在线试用 Babel</h2>\n<p>有时候我们并不需要在项目中操作什么，纯粹就想看看 Babel 到底做了什么。为此 Babel 官方提供了一套在线的 <a href=\"https://babeljs.io/repl/\" target=\"_blank\" rel=\"noopener noreferrer\">REPL (Read-Eval-Print-Loop)</a>，可以方便的试用 Babel。</p>\n<h2>路由查询命令的近亲 —— Traceur</h2>\n<p>除了 Babel 之外，还有一款不错的 ES6 转码器叫做 <a href=\"https://github.com/google/traceur-compiler\" target=\"_blank\" rel=\"noopener noreferrer\">Traceur</a>，是由科技巨头 Google 开发的，支持度虽然差 Babel 一大截，但使用非常简单，可以作为备用方案。Traceur 同样支持浏览器、在线 REPL、命令行、Node.js 四种环境下的使用。</p>\n<p>学过计算机网络的同学，或多或少都应该听说过 Linux 下的  <code class=\"gatsby-code-text\">tracerouter</code>  命令，和 Windows 下的  <code class=\"gatsby-code-text\">tracert</code> 命令。这两个命令都是用来追踪数据包从起点到终点所经过的路由的。而 Traceur 的名字，和它们实在是太像了，科技圈的命名方式真是一道风景。</p>","frontmatter":{"title":"每天一点ES6(4)：Babel","description":"《圣经》的光辉，永恒！","cover":{"publicURL":"/static/0950334fb8899f1006423341cbfeecb9/es6daily.jpg"},"tags":["ecmascript","2015","es6","javascript","babel","npm"],"series":"es6daily","draft":false},"fields":{"id":"es6-daily-04-babel","date":"2016-02-19"},"headings":[{"value":"打脸","depth":2},{"value":"ES6 无限好，就是用不了","depth":2},{"value":"为什么需要 Babel","depth":2},{"value":"《圣经》的力量","depth":2},{"value":"Babel 的版本","depth":2},{"value":"Babel 的安装和配置","depth":2},{"value":"通过命令行使用 Babel","depth":2},{"value":"通过 npm 安装 Babel","depth":2},{"value":"关于 npm 包的全局安装和本地安装","depth":3},{"value":"babel-node（新版中已移除）","depth":2},{"value":"babel-doctor（新版中已移除）","depth":2},{"value":"在 Node.js 中使用 Babel","depth":2},{"value":"babel-register","depth":3},{"value":"babel-core","depth":3},{"value":"在浏览器中使用 Babel","depth":2},{"value":"babel-polyfill","depth":3},{"value":"browser.js","depth":3},{"value":"在线试用 Babel","depth":2},{"value":"路由查询命令的近亲 —— Traceur","depth":2}],"tableOfContents":"<ul>\n<li><a href=\"/blog/2016/02/19/es6-daily-04-babel/#%E6%89%93%E8%84%B8\">打脸</a></li>\n<li><a href=\"/blog/2016/02/19/es6-daily-04-babel/#es6-%E6%97%A0%E9%99%90%E5%A5%BD%EF%BC%8C%E5%B0%B1%E6%98%AF%E7%94%A8%E4%B8%8D%E4%BA%86\"><del>ES6 无限好，就是用不了</del></a></li>\n<li><a href=\"/blog/2016/02/19/es6-daily-04-babel/#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81-babel\">为什么需要 Babel</a></li>\n<li><a href=\"/blog/2016/02/19/es6-daily-04-babel/#%E3%80%8A%E5%9C%A3%E7%BB%8F%E3%80%8B%E7%9A%84%E5%8A%9B%E9%87%8F\">《圣经》的力量</a></li>\n<li><a href=\"/blog/2016/02/19/es6-daily-04-babel/#babel-%E7%9A%84%E7%89%88%E6%9C%AC\">Babel 的版本</a></li>\n<li><a href=\"/blog/2016/02/19/es6-daily-04-babel/#babel-%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE\">Babel 的安装和配置</a></li>\n<li><a href=\"/blog/2016/02/19/es6-daily-04-babel/#%E9%80%9A%E8%BF%87%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8-babel\">通过命令行使用 Babel</a></li>\n<li>\n<p><a href=\"/blog/2016/02/19/es6-daily-04-babel/#%E9%80%9A%E8%BF%87-npm-%E5%AE%89%E8%A3%85-babel\">通过 npm 安装 Babel</a></p>\n<ul>\n<li><a href=\"/blog/2016/02/19/es6-daily-04-babel/#%E5%85%B3%E4%BA%8E-npm-%E5%8C%85%E7%9A%84%E5%85%A8%E5%B1%80%E5%AE%89%E8%A3%85%E5%92%8C%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85\">关于 npm 包的全局安装和本地安装</a></li>\n</ul>\n</li>\n<li><a href=\"/blog/2016/02/19/es6-daily-04-babel/#babel-node%EF%BC%88%E6%96%B0%E7%89%88%E4%B8%AD%E5%B7%B2%E7%A7%BB%E9%99%A4%EF%BC%89\"><del>babel-node</del>（新版中已移除）</a></li>\n<li><a href=\"/blog/2016/02/19/es6-daily-04-babel/#babel-doctor%EF%BC%88%E6%96%B0%E7%89%88%E4%B8%AD%E5%B7%B2%E7%A7%BB%E9%99%A4%EF%BC%89\"><del>babel-doctor</del>（新版中已移除）</a></li>\n<li>\n<p><a href=\"/blog/2016/02/19/es6-daily-04-babel/#%E5%9C%A8-nodejs-%E4%B8%AD%E4%BD%BF%E7%94%A8-babel\">在 Node.js 中使用 Babel</a></p>\n<ul>\n<li><a href=\"/blog/2016/02/19/es6-daily-04-babel/#babel-register\">babel-register</a></li>\n<li><a href=\"/blog/2016/02/19/es6-daily-04-babel/#babel-core\">babel-core</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/blog/2016/02/19/es6-daily-04-babel/#%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E4%BD%BF%E7%94%A8-babel\">在浏览器中使用 Babel</a></p>\n<ul>\n<li><a href=\"/blog/2016/02/19/es6-daily-04-babel/#babel-polyfill\">babel-polyfill</a></li>\n<li><a href=\"/blog/2016/02/19/es6-daily-04-babel/#browserjs\">browser.js</a></li>\n</ul>\n</li>\n<li><a href=\"/blog/2016/02/19/es6-daily-04-babel/#%E5%9C%A8%E7%BA%BF%E8%AF%95%E7%94%A8-babel\">在线试用 Babel</a></li>\n<li><a href=\"/blog/2016/02/19/es6-daily-04-babel/#%E8%B7%AF%E7%94%B1%E6%9F%A5%E8%AF%A2%E5%91%BD%E4%BB%A4%E7%9A%84%E8%BF%91%E4%BA%B2--traceur\">路由查询命令的近亲 —— Traceur</a></li>\n</ul>","timeToRead":9}},"pageContext":{"slug":"/blog/2016/02/19/es6-daily-04-babel"}}}