{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/2019/08/09/i-use-typescript-but-my-dependencies-dont","webpackCompilationHash":"","result":{"data":{"site":{"siteMetadata":{"title":"童话说","keywords":["tonghuashuo","github","front-end","javascript","typescript","react","node","washington","hua","童话","童话说","前端","博客","技术","计算机","互联网"]}},"markdownRemark":{"html":"<h2>一个悲伤的故事</h2>\n<p>你好不容易学会了 TypeScript，离食物链的顶端又近了一步。</p>\n<p>你开始用它写项目，准备好好享受静态类型带来的成果。</p>\n<p>你打开编辑器，发现有些第三方的模块下面有一条小红线。</p>\n<p>你把鼠标移到红线上，被告知这个模块不支持 TypeScript……</p>\n<h2>理解万岁</h2>\n<p>这个场景，相信小伙伴们多多少少都遇到过。主流的库基本都已经提供了对 TypeScript 的支持，但一些相对小众的库就没这么幸运了，或许是维护者没这个能力，或许是维护者没这个意向。</p>\n<p>技术选型这个事儿吧，向来都是萝卜青菜各有所爱，强扭不甜。但我们也不能因为一棵枯树就放弃整片森林。TypeScript 依然是大势所趋，但毕竟整个生态的迁移不是一朝一夕就能完成的，在终点之前，我们还是免不了要做两手准备。</p>\n<h2>我是要抓耗子，不是要养猫</h2>\n<p>如果有同类的并且支持 TypeScript 的模块，并且你也愿意换坑的，那么问题解决，出口在您左手边，慢走不送。</p>\n<p>你说换不了？非得是它？也行，忍一忍用 <code class=\"gatsby-code-text\">require</code> 语法引入；或者态度强硬一点，修改 Lint 工具的规则，跳过这部分规则。也算问题解决，左手边，慢走不送。</p>\n<p>你说你有洁癖，不能接受奇技淫巧，想正面刚，用纯正的 TypeScript 解决问题。那你来着了，咱俩是一路人。</p>\n<p>这一篇，我们重点解决如何用正规的方式把 JavaScript 模块顺利引入到用 TypeScript 开发的项目中来。</p>\n<h2>能动手我们尽量不 BB</h2>\n<p>在 TypeScript 中支持 JavaScript 其实并不是什么蜀道之难，当老子的还能怕孙子不成。</p>\n<p>TypeScript 团队其实已经提供了对应的方案，开发者们可以通过后缀名为 <code class=\"gatsby-code-text\">*.d.ts</code> 的文件，来给 JavaScript 模块提供类型定义。这个方案有点类似 C 语言中的 <code class=\"gatsby-code-text\">*.h</code> 头文件，允许把模块的定义和实现分开。这样一来，开发者不需要修改现有的代码，只要额外添加一些类型定义文件，就可以完成对 TypeScript 的支持。也正是得益于这样一种模式，才诞生了 <a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped/\" target=\"_blank\" rel=\"noopener noreferrer\">DefinitelyTyped</a> 这个项目，借助整个社区的力量，来推动对已有生态的改造。</p>\n<h2>「治标之计」——独善其身</h2>\n<p>在项目的维护者提供官方支持之前，我们可以自行编写 <code class=\"gatsby-code-text\">*.d.ts</code> 进行补充，得益于 TypeScript 的良好设计，我们不需要侵入 <code class=\"gatsby-code-text\">node_modules</code>，在我们自己的 <code class=\"gatsby-code-text\">src</code> 中就能搞定。</p>\n<p>前阵子刚好有用到一个叫 <a href=\"https://github.com/Macil/react-dnd-html5-mixed-backend/\" target=\"_blank\" rel=\"noopener noreferrer\">react-dnd-html5-mixed-backend</a> 的模块，我们就以它为例来看一下要怎么操作。</p>\n<p>本着实用主义的原则，我们先从影响我们使用的地方开始。</p>\n<h2>「治本之法」——兼济天下</h2>\n<p>方便的话，那就回馈一下社区呗，<a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped/\" target=\"_blank\" rel=\"noopener noreferrer\">DefinitelyTyped</a> 了解一下</p>","frontmatter":{"title":"你是我脚下的巨人，可你却不支持 TypeScript","description":"本想踩在巨人的肩膀上眺望远方，怎奈何巨人族里也有矮子。","cover":{"publicURL":"/static/typescript-8239307adc5ccdfc32320e1bcadb6300.jpg"},"tags":["typescript"],"series":"","draft":true},"fields":{"id":"i-use-typescript-but-my-dependencies-dont","date":"2019-08-08T16:00:00.000Z"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2019/08/09/i-use-typescript-but-my-dependencies-dont"}}}