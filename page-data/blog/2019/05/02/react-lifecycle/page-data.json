{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/2019/05/02/react-lifecycle","result":{"data":{"site":{"siteMetadata":{"title":"童话说","keywords":["tonghuashuo","github","front-end","javascript","typescript","react","node","washington","hua","童话","童话说","前端","博客","技术","计算机","互联网"]}},"allMarkdownRemark":{"totalCount":70,"edges":[{"node":{"id":"6a3bf076-bd85-5f11-8eb1-16e95286adaf","frontmatter":{"title":"FBC","description":"联合办公空间的会员服务","tags":null,"cover":{"publicURL":"/static/fbc-73b8b250e607c97c493edf1b542345fa.jpg"},"series":null,"draft":false,"original":null},"fields":{"id":"fbc","slug":"/project/fbc","type":"project","date":null}}},{"node":{"id":"096c5d70-0164-57e4-91c0-1aafddde7880","frontmatter":{"title":"INEX 影力所","description":"泛娱乐领域的垂直数字货币交易所","tags":null,"cover":{"publicURL":"/static/inex-40ff0dfa20bfd2e8e2b2ea8abb900b5b.jpg"},"series":null,"draft":false,"original":null},"fields":{"id":"inex","slug":"/project/inex","type":"project","date":null}}},{"node":{"id":"c205d1bc-0577-5639-90aa-37b6f09d3547","frontmatter":{"title":"CSS Scan","description":"VSCode 扩展，自动补全 CSS 变量","tags":null,"cover":{"publicURL":"/static/blank-72e94c39ebb670dd23625675c0a22ace.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"css-scan","slug":"/project/css-scan","type":"project","date":null}}},{"node":{"id":"290932e4-635f-592d-be69-7d9c3b5d7ba0","frontmatter":{"title":"小书签","description":"让 Chrome 的书签更好用","tags":null,"cover":{"publicURL":"/static/blank-72e94c39ebb670dd23625675c0a22ace.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"the-collector","slug":"/project/the-collector","type":"project","date":null}}},{"node":{"id":"d3fe6409-636c-5419-97f1-f15c8dca1056","frontmatter":{"title":"小图标","description":"一站式 Favicon 解决方案","tags":null,"cover":{"publicURL":"/static/blank-72e94c39ebb670dd23625675c0a22ace.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"the-favicon","slug":"/project/the-favicon","type":"project","date":null}}},{"node":{"id":"a2ea7f53-9ec5-5042-b8ca-5be79e9c6785","frontmatter":{"title":"小扫描","description":"磁盘占用一眼","tags":null,"cover":{"publicURL":"/static/blank-72e94c39ebb670dd23625675c0a22ace.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"the-scanner","slug":"/project/the-scanner","type":"project","date":null}}},{"node":{"id":"4f46ae77-847c-5508-acae-7c8d89c42804","frontmatter":{"title":"Thoughts 所思","description":"企业知识管理应用","tags":null,"cover":{"publicURL":"/static/thoughts-faff3495c115cab9b6fd951f3c6b96f9.jpg"},"series":null,"draft":false,"original":null},"fields":{"id":"thoughts","slug":"/project/thoughts","type":"project","date":null}}},{"node":{"id":"71ffc9c2-24f4-5a91-a9fc-4694778e43c7","frontmatter":{"title":"Github-Flutter","description":"基于 Flutter 开发的 Github 客户端","tags":null,"cover":{"publicURL":"/static/blank-72e94c39ebb670dd23625675c0a22ace.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"github-flutter","slug":"/project/github-flutter","type":"project","date":null}}},{"node":{"id":"7b74e9c9-8dc8-59b9-86d9-ad7f13a67df6","frontmatter":{"title":"小剧透","description":"Web 版「剧情连拍」","tags":null,"cover":{"publicURL":"/static/blank-72e94c39ebb670dd23625675c0a22ace.jpg"},"series":null,"draft":true,"original":null},"fields":{"id":"the-spoiler","slug":"/project/the-spoiler","type":"project","date":null}}},{"node":{"id":"7a64b536-2246-5627-93d5-c19fa4db4d5d","frontmatter":{"title":"Xshowroom 买手圈","description":"时尚业专业买手服务平台","tags":null,"cover":{"publicURL":"/static/xshowroom-72ea2ae7921cb5aa0b3b4f56578ed2b9.jpg"},"series":null,"draft":false,"original":null},"fields":{"id":"xshowroom","slug":"/project/xshowroom","type":"project","date":null}}},{"node":{"id":"24f860b7-781d-5fca-a7d2-dc224a10bd4c","frontmatter":{"title":"新阅","description":"在线视频协作平台","tags":null,"cover":{"publicURL":"/static/xinyue-64b35564f5bc639232b66b6559065b31.jpg"},"series":null,"draft":false,"original":null},"fields":{"id":"xinyue","slug":"/project/xinyue","type":"project","date":null}}},{"node":{"id":"5920ff7d-5749-5463-b37b-23cc9a8b122c","frontmatter":{"title":"使用 Sublime Text 编写 LaTeX","description":"用你最熟悉的工具来写 LaTeX 吧","tags":["sublime","latex"],"cover":{"publicURL":"/static/latex-with-sublime-text-e7689b7e9fe6160a6ed614a10125ca29.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"latex-with-sublime-text","slug":"/blog/2015/04/01/latex-with-sublime-text","type":"blog","date":"2015-04-01"}}},{"node":{"id":"4421f486-85ac-5dd2-8347-cb417b4085ac","frontmatter":{"title":"栈计算器","description":"通过“栈”实现的方程式计算器","tags":["stack","calculator","algorithm","project"],"cover":{"publicURL":"/static/stack-calculator-256bbf9439e7f58974c946bc16f54832.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"stack-calculator","slug":"/blog/2015/02/10/stack-calculator","type":"blog","date":"2015-02-10"}}},{"node":{"id":"029e2e2f-9244-5e03-8940-1c8581163583","frontmatter":{"title":"substr() 和 substring() 的区别","description":"两个函数，傻傻分不清楚","tags":["javascript","substr","substring","slice"],"cover":{"publicURL":"/static/substring-289ad52fc38963e15549cd1dc24678e4.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"substr-and-substring","slug":"/blog/2015/05/15/substr-and-substring","type":"blog","date":"2015-05-15"}}},{"node":{"id":"499d6aa3-64ca-5ff7-9dbe-f2dc15620111","frontmatter":{"title":"时间是什么颜色的","description":"如果时间有颜色……","tags":["color","time","project"],"cover":{"publicURL":"/static/tik-tok-color-03c874556dd31d9db5f30b7609751b92.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"tik-tok-color","slug":"/blog/2015/02/11/tik-tok-color","type":"blog","date":"2015-02-11"}}},{"node":{"id":"a7bb9a3a-e254-5aa9-bb0b-151acf106547","frontmatter":{"title":"每天一点ES6(1)：概述","description":"伊艾斯6大法好，每天一点不会老！","tags":["ecmascript","2015","es6","javascript"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-01-intro","slug":"/blog/2016/01/24/es6-daily-01-intro","type":"blog","date":"2016-01-24"}}},{"node":{"id":"13b8d1d1-789b-5dc9-916c-7b7893210310","frontmatter":{"title":"纯 CSS3 绘制月饼","description":"中秋佳节，用CSS3来画个月饼吧","tags":["css","mooncake","project"],"cover":{"publicURL":"/static/css3-mooncake-9aaefaae86216c79623893c080f1ccc2.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"css3-mooncake","slug":"/blog/2015/09/27/css3-mooncake","type":"blog","date":"2015-09-27"}}},{"node":{"id":"f736dccd-78cb-5c90-bd99-5a07fa51913a","frontmatter":{"title":"MIUI 图标缓存问题","description":"离奇失踪的图标","tags":["android","miui","icon","cache"],"cover":{"publicURL":"/static/miui-icon-cache-2e66c31a61d5319c1849ea082e8c80ee.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"miui-icon-cache","slug":"/blog/2015/04/18/miui-icon-cache","type":"blog","date":"2015-04-18"}}},{"node":{"id":"05523bfe-fa16-5b14-aa80-42a411b2f859","frontmatter":{"title":"电梯调度算法","description":"上上下下的感受","tags":["elevator","algorithm","project"],"cover":{"publicURL":"/static/elevator-7b7f4cefe4c7bf293ff2cdb266af33d9.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"elevator","slug":"/blog/2016/02/16/elevator","type":"blog","date":"2016-02-16"}}},{"node":{"id":"8ac916b6-109e-53d3-8208-b858de01b8b3","frontmatter":{"title":"每天一点ES6(6)：正则的扩展","description":"四字节 Unicode 的春天","tags":["ecmascript","2015","es6","javascript","regular","expression","regexp"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-06-regexp","slug":"/blog/2016/04/06/es6-daily-06-regexp","type":"blog","date":"2016-04-06"}}},{"node":{"id":"c265e8ec-ef97-51b2-8bb4-53e1b6e2b4c9","frontmatter":{"title":"每天一点ES6(2)：let 和 const","description":"终于，JavaScript 也能用上块级作用域和常量了","tags":["ecmascript","2015","es6","javascript","let","const"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-02-let-and-const","slug":"/blog/2016/01/25/es6-daily-02-let-and-const","type":"blog","date":"2016-01-25"}}},{"node":{"id":"63080f8f-fd06-5b77-87ba-fa49b124abc6","frontmatter":{"title":"每天一点ES6(8)：数组的扩展","description":"别拿语法糖不当干粮","tags":["ecmascript","2015","es6","javascript","array"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-08-array","slug":"/blog/2016/07/26/es6-daily-08-array","type":"blog","date":"2016-07-26"}}},{"node":{"id":"e3ed4d20-d956-5578-bc5f-12619bd85faf","frontmatter":{"title":"5 分钟彻底明白 JSONP","description":"说穿了，其实没那么难","tags":["javascript","jsonp"],"cover":{"publicURL":"/static/jsonp-f8f2d118b15646398f7d00e19eb17ff9.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"jsonp","slug":"/blog/2016/08/17/jsonp","type":"blog","date":"2016-08-17"}}},{"node":{"id":"70de981c-ab69-5cb2-be03-b2517a2c4342","frontmatter":{"title":"PHP 处理多源 CORS 的解决办法","description":"一个老生常谈的话题，碰到了顺便记录一下","tags":["php","cors"],"cover":{"publicURL":"/static/cors-77fc63594cf3a06c31921df671acd258.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"multi-origin-cors-with-php","slug":"/blog/2017/03/30/multi-origin-cors-with-php","type":"blog","date":"2017-03-30"}}},{"node":{"id":"a9d38fb9-9cbb-5162-9315-03ab6d83727d","frontmatter":{"title":"记 new Date().toString() 的一个坑","description":"万万没想到，竟在这里踩了个坑……","tags":["javascript","date","tostring"],"cover":{"publicURL":"/static/date-tostring-e192283893c7e97feb631571134bb805.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"a-pit-in-date-tostring","slug":"/blog/2017/03/08/a-pit-in-date-tostring","type":"blog","date":"2017-03-08"}}},{"node":{"id":"b59e8376-90fa-5473-a44e-442ca891df72","frontmatter":{"title":"iOS 下 click() 无效的问题","description":"iOS这个傲娇的小公举","tags":["ios","click"],"cover":{"publicURL":"/static/ios-click-f79051a5758b8a973902b2e5d190b714.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"unable-to-trigger-click-on-ios","slug":"/blog/2017/03/31/unable-to-trigger-click-on-ios","type":"blog","date":"2017-03-31"}}},{"node":{"id":"efd68842-6b4e-5a6a-81b0-8c3a3b324c22","frontmatter":{"title":"每天一点ES6(7)：数值的扩展","description":"每一个数字都不能放过","tags":["ecmascript","2015","es6","javascript","number"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-07-number","slug":"/blog/2016/04/12/es6-daily-07-number","type":"blog","date":"2016-04-12"}}},{"node":{"id":"5caebd71-bf77-5d58-a3fe-1609e95678a6","frontmatter":{"title":"解决 macOS 下 MySQL 2002 错误","description":"MySQL 真是个磨人的小妖精","tags":["mac","mysql","2002"],"cover":{"publicURL":"/static/mysql-error-2002-6f1abf9c085f6538df6bced86e008157.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"mysql-error-2002","slug":"/blog/2017/02/07/mysql-error-2002","type":"blog","date":"2017-02-07"}}},{"node":{"id":"3c2c676f-674b-5a0c-9f99-beb36ff42844","frontmatter":{"title":"Webpack \"Invalid Host Header\"","description":"更新有风险，更新需谨慎……","tags":["webpack","dev","server","invalid","host"],"cover":{"publicURL":"/static/webpack-dev-server-977bc2ebe23a9b6b10fdac4b470847b8.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"webpack-dev-server-invalid-host-header","slug":"/blog/2017/05/04/webpack-dev-server-invalid-host-header","type":"blog","date":"2017-05-04"}}},{"node":{"id":"091655de-9bba-5969-adf6-648155248dcb","frontmatter":{"title":"Electron 安装出坑指南","description":"世界本无坑，用的人多了，也就有了坑","tags":["electron"],"cover":{"publicURL":"/static/electron-a9838665d68ab68d327e48d8720bac3f.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"electron-install-guide","slug":"/blog/2017/07/06/electron-install-guide","type":"blog","date":"2017-07-06"}}},{"node":{"id":"5c1bab2a-a42b-5d3a-ad4d-04994d6278b8","frontmatter":{"title":"每天一点ES6(11)：Symbol","description":"原始类型家族的新成员","tags":["ecmascript","2015","es6","javascript","symbol"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-11-symbol","slug":"/blog/2017/07/02/es6-daily-11-symbol","type":"blog","date":"2017-07-02"}}},{"node":{"id":"a6d4a8b6-f020-52a2-9ab3-263c7526ec29","frontmatter":{"title":"Node.js 9.0.0 发布","description":"一转眼，又半年过去了","tags":["nodejs","release"],"cover":{"publicURL":"/static/nodejs-9-release-86f3115cebbb8dd82646ff1d231fa317.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"nodejs-9-release","slug":"/blog/2017/11/01/nodejs-9-release","type":"blog","date":"2017-11-01"}}},{"node":{"id":"2420224b-ff97-5758-bfc7-8fd774bfbd96","frontmatter":{"title":"每天一点ES6(12)：Set 和 Map","description":"多余的，一概不要","tags":["ecmascript","2015","es6","javascript","map","set"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-12-set-and-map","slug":"/blog/2017/07/03/es6-daily-12-set-and-map","type":"blog","date":"2017-07-03"}}},{"node":{"id":"a7518a19-a4da-554a-998b-03878e21bd40","frontmatter":{"title":"每天一点ES6(13)：Proxy 和 Reflect","description":"对不起，有代理真就是可以为所欲为","tags":["ecmascript","2015","es6","javascript","proxy","reflect"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-13-proxy-and-reflect","slug":"/blog/2017/12/20/es6-daily-13-proxy-and-reflect","type":"blog","date":"2017-12-20"}}},{"node":{"id":"f4aaf2e2-6eb9-57e2-9b9d-cf58e38dfa71","frontmatter":{"title":"每天一点ES6(14)：Iterator","description":"遍历也能搞出花来，怎么遍历你说了算","tags":["ecmascript","2015","es6","javascript","iterator","generator"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-14-iterator","slug":"/blog/2018/02/28/es6-daily-14-iterator","type":"blog","date":"2018-02-28"}}},{"node":{"id":"2032ccd8-f390-5d45-9dab-b79ab54a905d","frontmatter":{"title":"每天一点ES6(17)：Async / Await","description":"异步？先等等！","tags":["ecmascript","2015","es6","javascript","async","await","generator"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-17-async-await","slug":"/blog/2018/10/06/es6-daily-17-async-await","type":"blog","date":"2018-10-06"}}},{"node":{"id":"06008135-1b93-5a7b-a498-94098ee5ebb2","frontmatter":{"title":"一个非著名前端开发者的 2018","description":"资本寒冬大概是属燕子的吧，一到年末出现","tags":["summary","2018","2019"],"cover":{"publicURL":"/static/summary-2018-0e9c38c3d5d6b94d53a8dee2a7bdfbae.jpg"},"series":"summary","draft":false,"original":true},"fields":{"id":"summary-2018","slug":"/blog/2018/12/31/summary-2018","type":"blog","date":"2018-12-31"}}},{"node":{"id":"3201b0bb-9550-5617-a5a2-4df3a309b2f0","frontmatter":{"title":"【译】我们为什么要写 super(props)?","description":"好像知道，又好像不知道","tags":["react"],"cover":{"publicURL":"/static/overreacted-9fbf74366dc5b9e4aab57572a9f0470d.jpg"},"series":"overreacted","draft":false,"original":false},"fields":{"id":"why-do-we-write-super-props","slug":"/blog/2019/02/22/why-do-we-write-super-props","type":"blog","date":"2019-02-22"}}},{"node":{"id":"75045fce-2b37-559a-b519-62fef7e992da","frontmatter":{"title":"为什么我们总是在不断地造轮子","description":"圆的圆的圆的东西","tags":["thinking"],"cover":{"publicURL":"/static/wheel-120fefa8e824de66889cf2e45b746ebe.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"why-do-we-keep-building-wheels","slug":"/blog/2019/11/15/why-do-we-keep-building-wheels","type":"blog","date":"2019-11-15"}}},{"node":{"id":"bafd8336-ff70-50b1-9a4a-c2c105c4cd96","frontmatter":{"title":"Homebrew 也有后悔药：回退一次小版本更新","description":"有了后悔药，可劲随便造","tags":["homebrew"],"cover":{"publicURL":"/static/homebrew-2cd1cc709ca5d68b1a1fb9eb6283b820.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"how-to-downgrade-from-homebrew","slug":"/blog/2019/10/11/how-to-downgrade-from-homebrew","type":"blog","date":"2019-10-11"}}},{"node":{"id":"c5f39bda-8264-5392-a4d2-2f2f2861c18a","frontmatter":{"title":"「童话说」又改版啦","description":"酒还是那酒，但瓶子已经不是那瓶子了","tags":["blog","4.0","update"],"cover":{"publicURL":"/static/blank-d221320d45d5d7ac530fe7af1ab4cd79.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"introducing-ths-v4","slug":"/blog/2019/12/02/introducing-ths-v4","type":"blog","date":"2019-12-02"}}},{"node":{"id":"47ae9e45-56fa-5fc9-bcd2-0256ac0c9cb6","frontmatter":{"title":"TypeScript：又一个终将逝去的青春","description":"你，轰轰烈烈地来；你，平平淡淡地走。","tags":["typescript"],"cover":{"publicURL":"/static/typescript-another-fading-youth-b7b7642447ca6a5b28abf9f90bf06ef8.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"typescript-another-fading-youth","slug":"/blog/2019/10/10/typescript-another-fading-youth","type":"blog","date":"2019-10-10"}}},{"node":{"id":"1a4948a9-1702-5bb8-9e1b-a9b2aafb0a5a","frontmatter":{"title":"我的数组返回了啥","description":"功夫再高，一针下去也得倒","tags":["javascript","array"],"cover":{"publicURL":"/static/array-805a58ee0da37d1812988339eb18df47.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"what-does-my-array-return","slug":"/blog/2019/12/10/what-does-my-array-return","type":"blog","date":"2019-12-10"}}},{"node":{"id":"4a0c441a-a4da-5f0a-ad86-0c53a7fe8d0a","frontmatter":{"title":"Flutter 扫雷记","description":"目标，移动端，走起","tags":["flutter"],"cover":{"publicURL":"/static/flutter-b6ce1e63c11d6fddd7a988bfb312deb5.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"learning-flutter","slug":"/blog/2019/12/03/learning-flutter","type":"blog","date":"2019-12-03"}}},{"node":{"id":"cedd0941-7ae6-58c4-b22e-099949c049aa","frontmatter":{"title":"提效 50%，榨干 webpack","description":"我们的目标是：榨干 webpack","tags":["webpack"],"cover":{"publicURL":"/static/blank-d221320d45d5d7ac530fe7af1ab4cd79.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"speed-up-your-build","slug":"/blog/2020/01/20/speed-up-your-build","type":"blog","date":"2020-01-20"}}},{"node":{"id":"acf607a8-7894-5f69-be93-a1d6fc8bc92a","frontmatter":{"title":"聊聊前端面试","description":"人嘛，总是在不断的试错中成长起来的","tags":["interview"],"cover":{"publicURL":"/static/interview-c6ee2544d5e90e8349ec2b751c37e298.jpg"},"series":"","draft":true,"original":true},"fields":{"id":"thoughts-about-fe-interview","slug":"/blog/2020/01/20/thoughts-about-fe-interview","type":"blog","date":"2020-01-20"}}},{"node":{"id":"118361c5-5726-55ed-8350-5ce368d488b1","frontmatter":{"title":"每天一点ES6(3)：解构赋值","description":"让你一次赋个够","tags":["ecmascript","2015","es6","javascript","destructuring"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-03-destructuring","slug":"/blog/2016/02/02/es6-daily-03-destructuring","type":"blog","date":"2016-02-02"}}},{"node":{"id":"89d7b739-7a7d-551a-8db0-eda594cc06c1","frontmatter":{"title":"每天一点ES6(5)：字符串的扩展","description":"不变的字符串现在更加多变了","tags":["ecmascript","2015","es6","javascript","string"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-05-string","slug":"/blog/2016/04/05/es6-daily-05-string","type":"blog","date":"2016-04-05"}}},{"node":{"id":"2594b15f-ccec-543c-974e-ec904ba23a3b","frontmatter":{"title":"每天一点ES6(4)：Babel","description":"《圣经》的光辉，永恒！","tags":["ecmascript","2015","es6","javascript","babel","npm"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-04-babel","slug":"/blog/2016/02/19/es6-daily-04-babel","type":"blog","date":"2016-02-19"}}},{"node":{"id":"fd299029-9c49-5b21-9569-3399040fdc66","frontmatter":{"title":"每天一点ES6(9)：函数的扩展","description":"博采众长的实用语法糖","tags":["ecmascript","2015","es6","javascript","function"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-09-function","slug":"/blog/2016/12/20/es6-daily-09-function","type":"blog","date":"2016-12-20"}}},{"node":{"id":"27d50f62-9cdb-50bc-9b9b-2a7c98c5c92e","frontmatter":{"title":"Leetcode 第一刷：Two Sum","description":"都闪开，我要开始装逼了","tags":["leetcode","two","sum"],"cover":{"publicURL":"/static/leetcode-1aa86b8eea674fca29117e535cfba751.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"leetcode-01-two-sum","slug":"/blog/2017/04/11/leetcode-01-two-sum","type":"blog","date":"2017-04-11"}}},{"node":{"id":"25995aa2-2b02-5db0-b65b-1bc827bf60a0","frontmatter":{"title":"每天一点ES6(10)：对象的扩展","description":"迟来的更新……","tags":["ecmascript","2015","es6","javascript","object"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-10-object","slug":"/blog/2017/04/05/es6-daily-10-object","type":"blog","date":"2017-04-05"}}},{"node":{"id":"adcf3ad8-3ea4-54c3-a0f4-209e1e518dbd","frontmatter":{"title":"ECMAScript 2017 正式到来","description":"ES 的世界开始日趋平静","tags":["ecmascript","2017","es8","javascript"],"cover":{"publicURL":"/static/es2017-77b7677386d27526bcb0b2687218f3f1.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"ecmascript-2017-is-here","slug":"/blog/2017/07/12/ecmascript-2017-is-here","type":"blog","date":"2017-07-12"}}},{"node":{"id":"2c071f6a-f91e-5144-ae6a-44e6e5265429","frontmatter":{"title":"童话说 V2.0 改版小结","description":"时隔多年，终于换新面貌了","tags":["blog","2.0","update"],"cover":{"publicURL":"/static/introducing-ths-v2-630ee6fc7ad1be564eebffb0e0dd447d.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"introducing-ths-v2","slug":"/blog/2017/08/12/introducing-ths-v2","type":"blog","date":"2017-08-12"}}},{"node":{"id":"bac95ff2-76be-59c9-9d8c-173de3cdacc4","frontmatter":{"title":"TypeScriptS + Vue 踩坑纪实","description":"坑这种东西，多踩踩就平了","tags":["typescript","vue"],"cover":{"publicURL":"/static/guide-for-vue-with-typescript-fe6f5086d26293f21adf217a84141fd6.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"guide-for-vue-with-typescript","slug":"/blog/2017/10/26/guide-for-vue-with-typescript","type":"blog","date":"2017-10-26"}}},{"node":{"id":"d87372c5-7ed2-53da-bdb4-5f5e446e6aa1","frontmatter":{"title":"每天一点ES6(15)：Promise","description":"对你的承诺，永远不变","tags":["ecmascript","2015","es6","javascript","promise"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-15-promise","slug":"/blog/2018/03/04/es6-daily-15-promise","type":"blog","date":"2018-03-04"}}},{"node":{"id":"7bd9aa4d-d774-5b54-ad31-bdda42c47ab9","frontmatter":{"title":"每天一点ES6(16)：Generator","description":"一起来摩擦摩擦发电吧","tags":["ecmascript","2015","es6","javascript","promise"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-16-generator","slug":"/blog/2018/06/14/es6-daily-16-generator","type":"blog","date":"2018-06-14"}}},{"node":{"id":"c776fd0e-b7ac-5ead-a74f-b96ceb48d75b","frontmatter":{"title":"除了 SSR，就没有别的办法了吗","description":"当 MVVM 遇上 SEO，该如何是好","tags":["static","site","gatsby","pug"],"cover":{"publicURL":"/static/explore-static-site-generation-c2ac5cf49eafd77a1b2ce1fab7f53515.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"explore-static-site-generation","slug":"/blog/2019/02/07/explore-static-site-generation","type":"blog","date":"2019-02-07"}}},{"node":{"id":"8477f3e8-e0f0-5969-a545-fb5c5843246e","frontmatter":{"title":"你可能已经知道的 ES 2018 和 2019","description":"好饭不怕晚","tags":["ecmascript","2018","2019"],"cover":{"publicURL":"/static/es2019-5646b4878e533cd7c725ce4c17984071.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"es2018-and-es2019","slug":"/blog/2019/02/11/es2018-and-es2019","type":"blog","date":"2019-02-11"}}},{"node":{"id":"8215bee6-5bed-50dd-8acd-94c865145e35","frontmatter":{"title":"每天一点ES6(18)：Class","description":"这回总没人质疑 JS 不是面向对象了吧？","tags":["ecmascript","2015","es6","javascript","class"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-18-class","slug":"/blog/2018/12/17/es6-daily-18-class","type":"blog","date":"2018-12-17"}}},{"node":{"id":"74c9ea53-35c1-5f8d-9a70-6325c8908983","frontmatter":{"title":"如何 Think in Hooks","description":"差不多是时候该换换脑子了","tags":["react","hooks"],"cover":{"publicURL":"/static/think-in-hooks-26d13ef2591ee05a3c4bba7fc34daa88.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"how-to-think-in-hooks","slug":"/blog/2019/02/15/how-to-think-in-hooks","type":"blog","date":"2019-02-15"}}},{"node":{"id":"7117f3a5-1987-5f74-aaee-d6c004857b4b","frontmatter":{"title":"每天一点ES6(19)：Module","description":"可能是 ES6 中对未来影响最大的一项改变","tags":["ecmascript","2015","es6","javascript","module","import","export"],"cover":{"publicURL":"/static/es6daily-0950334fb8899f1006423341cbfeecb9.jpg"},"series":"es6daily","draft":false,"original":true},"fields":{"id":"es6-daily-19-module","slug":"/blog/2018/12/19/es6-daily-19-module","type":"blog","date":"2018-12-19"}}},{"node":{"id":"a1adc2ee-2a64-5653-bc31-a00ea3b70407","frontmatter":{"title":"探索 React 组件之间的生命周期","description":"有时候，生活就是一团麻","tags":["react","lifecycle"],"cover":{"publicURL":"/static/react-lifecycle-0edf69056144aaf512a28d0670b53b57.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"react-lifecycle","slug":"/blog/2019/05/02/react-lifecycle","type":"blog","date":"2019-05-02"}}},{"node":{"id":"4cdbfcff-81fd-5c18-ac98-bba8d122f8e3","frontmatter":{"title":"一个非著名前端开发者的 2019","description":"感谢曾经努力的自己","tags":["summary","2019","2020"],"cover":{"publicURL":"/static/summary-2019-1011f23d2ed2635035a07878c03ed1da.jpg"},"series":"summary","draft":false,"original":true},"fields":{"id":"summary-2019","slug":"/blog/2019/12/31/summary-2019","type":"blog","date":"2019-12-31"}}},{"node":{"id":"3141b4c6-4a37-5347-a5cc-92327f36cee6","frontmatter":{"title":"TypeScript 次日指南","description":"坑这种东西，是不会写在文档上的","tags":["typescript"],"cover":{"publicURL":"/static/typescript-8239307adc5ccdfc32320e1bcadb6300.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"typescript-the-second-day","slug":"/blog/2019/07/28/typescript-the-second-day","type":"blog","date":"2019-07-28"}}},{"node":{"id":"b2993941-a485-5c65-9de7-17cba65b2418","frontmatter":{"title":"一个非著名前端开发者的 2016","description":"回顾 2016，是充实的一年，不负青春。2017 加油继续！","tags":["summary","2016","2017"],"cover":{"publicURL":"/static/summary-2016-d4bc85d6ff1aa8985e03c3875f90ea51.jpg"},"series":"summary","draft":false,"original":true},"fields":{"id":"summary-2016","slug":"/blog/2016/12/31/summary-2016","type":"blog","date":"2016-12-31"}}},{"node":{"id":"c78c2577-3dc3-580d-9aa3-059949484423","frontmatter":{"title":"一个非著名前端开发者的 2017","description":"哎 ~ 又一年过去了","tags":["summary","2017","2018"],"cover":{"publicURL":"/static/summary-2017-0d96380257d25f6b398d9bc8e47af5a1.jpg"},"series":"summary","draft":false,"original":true},"fields":{"id":"summary-2017","slug":"/blog/2017/12/29/summary-2017","type":"blog","date":"2017-12-29"}}},{"node":{"id":"66c964e4-0a45-548e-9f94-6fd84283c9a4","frontmatter":{"title":"【译】React 如何区分 Class 和 Function？","description":"所谓的简单，只是因为有人帮你把复杂的问题给解决掉了","tags":["react"],"cover":{"publicURL":"/static/overreacted-9fbf74366dc5b9e4aab57572a9f0470d.jpg"},"series":"overreacted","draft":false,"original":false},"fields":{"id":"how-does-react-tell-a-class-from-a-function","slug":"/blog/2019/03/06/how-does-react-tell-a-class-from-a-function","type":"blog","date":"2019-03-06"}}},{"node":{"id":"9483d67a-7761-50d0-aa75-ecdf8077db2d","frontmatter":{"title":"TradingView + WebSocket 脱坑指南","description":"让我来告诉你，K 线到底该怎么画","tags":["tradingview","chart","library","guide","websocket","webworker","ohlc","kchart"],"cover":{"publicURL":"/static/tradingview-1ceaf53d99815784a18273970e741bfd.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"tradingview-charting-library-simple-guide","slug":"/blog/2018/09/22/tradingview-charting-library-simple-guide","type":"blog","date":"2018-09-22"}}},{"node":{"id":"3b0c4aa9-d3ba-5bba-aad0-51cad6f0dd1c","frontmatter":{"title":"重新 Think in Hooks","description":"忘记过去之所学，我们从头来过","tags":["react","hooks"],"cover":{"publicURL":"/static/rethink-in-hooks-f9fcd719dcab55af4a1ad3d3cfbe0585.jpg"},"series":"","draft":false,"original":true},"fields":{"id":"rethink-in-hooks","slug":"/blog/2019/05/27/rethink-in-hooks","type":"blog","date":"2019-05-27"}}}]},"markdownRemark":{"html":"<h2>0）写在前面</h2>\n<p>React 组件的生命周期，相信大家都非常熟悉了，无非那么几个函数，官方文档已经写得非常清楚了。（那还有什么好说的？浪费感情！合上！）</p>\n<p>一般我们所讨论的，都是单个组件的生命周期。如果是多个组件之间呢？比如父子组件？兄弟组件？各个周期又是什么样的？异步路由的情况呢？前阵子新出的 Hooks 呢？有几个人敢站出来说我全知道的？（反正我是不敢）</p>\n<p>刚好也是最近遇到一些关于生命周期的问题，项目中涉及到大量的异步操作，需要清楚地知道各部分的执行顺序，借此机会整理一下。</p>\n<h2>1）在你继续之前</h2>\n<p>这篇文章并不是入门教学，如果你对 React 一点不了解的话，或许这篇文章并不适合你。</p>\n<p>我假定你已经掌握 React 的基本知识，例如：组件的生命周期、Hooks 的基本概念、类组件和函数组件的区别 等，并用 React 开发过有一定复杂度的应用。</p>\n<p>这里我们不讨论 <code class=\"gatsby-code-text\">shouldComponentUpdate()</code>、<code class=\"gatsby-code-text\">React.memo()</code> 等优化手段，只考虑最原始的情况。</p>\n<p>本文以浏览器作为目标环境，React Native 和 Electron 在基本概念上是一样的，细节上的不同不作为本文的讨论重点，</p>\n<h2>2）关于 Hooks 的生命周期</h2>\n<p>确切地说，Hooks 并不是一种新的组件类型，它只是一种代码复用的方式，并且总是伴随着函数组件一起出现。</p>\n<p>在 Hooks 之前，函数组件是没有 state 的概念的，因而也就不存在生命周期一说，就只是一个 render 函数。Hooks 的出现，让函数组件也可以拥有 state，相应的也就引入了生命周期的概念，具体来说也就是 <code class=\"gatsby-code-text\">useEffect()</code> 和 <code class=\"gatsby-code-text\">useLayoutEffect()</code> 具体何时执行的问题。</p>\n<p>函数组件的本质是函数，而函数本身是没有生命周期的，Hooks 的出现也没有改变这一点。这里我们讨论的对象是「组件」，组件是可以有生命周期的。因此当我在后面的文字中提到 Hooks 时，我其实是在表示「使用了 Hooks 的函数组件」（虽然这个说法不是很严谨，但是这不重要，你懂我意思就好）。</p>\n<h2>3）那么我们就来做个实验吧</h2>\n<p>为了一探究竟，我写了一个 <a href=\"https://tonghuashuo.github.io/react-lifecycle\" target=\"_blank\" rel=\"noopener noreferrer\">Demo</a> 来模拟一些常见的用例：父子组件、兄弟组件、同步/异步路由、类组件和 Hooks、组件初始化时的异步操作（如访问 API）等。</p>\n<p>如果你有遇到 Demo 没覆盖到的使用场景，欢迎提 Issue。</p>\n<h3>3.1）TL,DR;</h3>\n<p>我知道大家的时间都很宝贵，赶时间的朋友可以直接看结论；时间宽裕的朋友，我们从下一节开始细聊：</p>\n<ol>\n<li>同步路由，父组件在 <code class=\"gatsby-code-text\">render</code> 阶段创建子组件。</li>\n<li>异步路由，父组件在自身挂载完成之后才开始创建子组件。</li>\n<li>挂载完成之后，在更新时，同步组件和异步组件是一样的。</li>\n<li>无论是挂载还是更新，以 <code class=\"gatsby-code-text\">render</code> 完成为界，之前父组件先执行，之后子组件先执行。</li>\n<li>兄弟组件大体上按照在父组件中的出场顺序执行。</li>\n<li><code class=\"gatsby-code-text\">useEffect</code> 会在挂载/更新完成之后，延迟执行。</li>\n<li>异步请求（如访问 API）何时得到响应与组件的生命周期无关，即父组件中发起的异步请求不保证在子组件挂载完成前得到响应。</li>\n</ol>\n<h3>3.2）挂载过程</h3>\n<p>父子组件的挂载分为三个阶段。</p>\n<p>第一阶段，父组件执行到自身的 <code class=\"gatsby-code-text\">render</code>，解析其下有哪些子组件需要渲染，并对其中同步的子组件进行创建，挨个执行各组件到 <code class=\"gatsby-code-text\">render</code>，生成到目前为止的 Virtual DOM 树，并 commit 到 DOM。</p>\n<p>第二阶段，此时 DOM 节点已经生成完毕，组件挂载完成，开始后续流程。先依次触发同步子组件各自的 <code class=\"gatsby-code-text\">componentDidMount</code> / <code class=\"gatsby-code-text\">useLayoutEffect</code>，最后触发父组件的。</p>\n<p>第三阶段，如果组件使用了 <code class=\"gatsby-code-text\">useEffect</code>，则会在第二阶段之后触发 <code class=\"gatsby-code-text\">useEffect</code>。如果父子组件都使用了 <code class=\"gatsby-code-text\">useEffect</code>，那么子组件先触发，然后是父组件。</p>\n<p>如果父组件中包含异步子组件，则会在父组件挂载完成后被创建。</p>\n<p>对于兄弟组件，如果是同步路由，它们的创建顺序和在父组件中定义的出场顺序是一致的。</p>\n<blockquote>\n<p>对于「异步的兄弟组件」，最终的加载顺序是按照 JSX 中定义的顺序，还是按照 js 文件下载完成的顺序，我暂时还不能确定。</p>\n<p>按照我对“异步”的理解，我更倾向于认为是按照下载完成的顺序，这更符合“按需加载”的概念。</p>\n<p>之所以会造成困扰，是因为据我目前所观察到的情况，两种顺序是一致的，我还没有遇到过后定义但先加载的情况。</p>\n<p>大部分时候我们会以页面为单位去划分异步组件，单个页面需要加载多个异步组件的场景比较少；即便在这些少数场景中，单次需要请求的文件数量也不会很多，不至于超过浏览器的并发上限；即便超过，也会按照在父组件中定义的出场顺序去分批发起请求。考虑到单个异步组件的文件尺寸通常都很小，加载速度非常快，同一批发起的请求基本上也都是同时到达，因此大部分时候下载完成的顺序和定义的顺序是一致的。</p>\n<p>但没遇到不代表不存在，该问题我会进一步验证，已经有结果的小伙伴也可以分享一下。</p>\n</blockquote>\n<p>如果组件的初始化过程包含异步操作（通常在 <code class=\"gatsby-code-text\">componentDidMount()</code> 和 <code class=\"gatsby-code-text\">useEffect(fn, [])</code> 中进行），这些操作何时得到响应与组件的生命周期无关，完全看异步操作本身花了多少时间。</p>\n<h3>3.3）更新过程</h3>\n<p>React 的设计遵循单向数据流模型，兄弟节点之间的通信也会经过父组件（Redux 和 Context 也是通过改变父组件传递下来的 <code class=\"gatsby-code-text\">props</code> 实现的），因此任何两个组件之间的通信，本质上都可以归结为父组件更新导致子组件更新的情况。</p>\n<p>父子组件的更新同样分为三个阶段。</p>\n<p>第一、三阶段，和挂载过程基本一样，无非是第一阶段多了一个 Reconciliation 的过程，第三阶段需要先执行 <code class=\"gatsby-code-text\">useEffect</code> 的 Cleanup 函数。</p>\n<p>第二阶段，和挂载过程也很类似，都是子组件先于父组件，但更新比挂载涉及的函数要多一些：</p>\n<ol>\n<li><code class=\"gatsby-code-text\">getSnapshotBeforeUpdate()</code></li>\n<li><code class=\"gatsby-code-text\">useLayoutEffect() 的 Cleanup</code></li>\n<li><code class=\"gatsby-code-text\">useLayoutEffect()</code> / <code class=\"gatsby-code-text\">componentDidUpdate()</code></li>\n</ol>\n<p>React 会按照上面的顺序依次执行这些函数，每个函数都是各个子组件的先执行，然后才是父组件的执行。具体说来，就是先执行各个子组件的 <code class=\"gatsby-code-text\">getSnapshotBeforeUpdate()</code>，然后是父组件的 <code class=\"gatsby-code-text\">getSnapshotBeforeUpdate()</code>，再然后是各个子组件的 <code class=\"gatsby-code-text\">componentDidUpdate()</code>，父组件的 <code class=\"gatsby-code-text\">componentDidUpdate()</code>，以此类推。</p>\n<p>这里我们把类组件和 Hooks 的生命周期函数放在了一起，因为父子组件可以是这两种组件类型的任意排列组合。实际渲染时不一定每一个函数都有用到，只会调用组件实际拥有的函数。</p>\n<h3>3.4）卸载过程</h3>\n<p>卸载过程涉及到 <code class=\"gatsby-code-text\">componentWillUnmount()</code>、<code class=\"gatsby-code-text\">useEffect()</code> 的 Cleanup、<code class=\"gatsby-code-text\">useLayoutEffect()</code> 的 Cleanup 这三种函数，顺序固定为父组件的先执行，子组件按照在 JSX 中定义的顺序依次执行各自的方法。</p>\n<p>注意，此时的 Cleanup 函数会按照在代码中定义的顺序先后执行，与函数本身的特性无关。</p>\n<p>如果卸载旧组件的同时伴随有新组件的创建，新组件会先被创建并执行完 <code class=\"gatsby-code-text\">render</code>，然后卸载不需要的旧组件，最后新组件执行挂载完成的回调。</p>\n<h2>4）Hooks 的特别之处</h2>\n<p>根据 React 的官方文档，<code class=\"gatsby-code-text\">useEffect()</code> 和 <code class=\"gatsby-code-text\">useLayoutEffect()</code> 都是等效于 <code class=\"gatsby-code-text\">componentDidUpdate()</code> / <code class=\"gatsby-code-text\">componentDidMount()</code> 的存在，但实际上两者在一些细节上还是有所不同：</p>\n<h3>4.1）先来未必先走</h3>\n<p><code class=\"gatsby-code-text\">useLayoutEffect()</code> 永远比 <code class=\"gatsby-code-text\">useEffect()</code> 先执行，即便在你的代码中 <code class=\"gatsby-code-text\">useEffect()</code> 是写在前面的。所以 <code class=\"gatsby-code-text\">useLayoutEffect()</code> 才是事实上和 <code class=\"gatsby-code-text\">componentDidUpdate()</code> / <code class=\"gatsby-code-text\">componentDidMount()</code> 平起平坐的存在。</p>\n<p><code class=\"gatsby-code-text\">useEffect()</code> 会在父子组件的 <code class=\"gatsby-code-text\">componentDidUpdate()</code> / <code class=\"gatsby-code-text\">componentDidMount()</code> 都触发之后才被触发。当父子组件都用到 <code class=\"gatsby-code-text\">useEffect()</code> 时，子组件中的会比父组件中的先触发。</p>\n<h3>4.2）不团结的 Cleanup</h3>\n<p>同样都拥有 Cleanup 函数，<code class=\"gatsby-code-text\">useLayoutEffect()</code> 和它的 Cleanup 未必是挨着的。</p>\n<p>当父组件是 Hooks、子组件是 Class 时，能够很明显看出，<code class=\"gatsby-code-text\">useLayoutEffect()</code> 的 Cleanup 会在 <code class=\"gatsby-code-text\">getSnapshotBeforeUpdate()</code> 和 <code class=\"gatsby-code-text\">componentDidUpdate()</code> 之间被调用，而 <code class=\"gatsby-code-text\">useLayoutEffect()</code> 则是和 <code class=\"gatsby-code-text\">componentDidUpdate()</code> 同级，按照更新过程的顺序被调用。</p>\n<p>Hooks 作为子组件时也是这么个过程，只是没有了子组件，看上去不那么明显罢了。</p>\n<p>而 <code class=\"gatsby-code-text\">useEffect()</code> 就不一样，它和它的 Cleanup 紧密团结在一起，每次执行都是前后脚一起的，从不分离。</p>\n<h2>5）小结</h2>\n<p>无论是类组件还是 Hooks，单拎出来大家肯定都很熟悉它们的生命周期，但当把它们混在一起，就没那么简单了。撰写这篇博客的过程，帮助我理清了这通乱麻，但愿也能够帮到坚持看到这里的你。</p>","frontmatter":{"title":"探索 React 组件之间的生命周期","description":"有时候，生活就是一团麻","cover":{"publicURL":"/static/react-lifecycle-0edf69056144aaf512a28d0670b53b57.jpg"},"tags":["react","lifecycle"],"series":"","draft":false},"fields":{"id":"react-lifecycle","date":"2019-05-02"},"headings":[{"value":"0）写在前面","depth":2},{"value":"1）在你继续之前","depth":2},{"value":"2）关于 Hooks 的生命周期","depth":2},{"value":"3）那么我们就来做个实验吧","depth":2},{"value":"3.1）TL,DR;","depth":3},{"value":"3.2）挂载过程","depth":3},{"value":"3.3）更新过程","depth":3},{"value":"3.4）卸载过程","depth":3},{"value":"4）Hooks 的特别之处","depth":2},{"value":"4.1）先来未必先走","depth":3},{"value":"4.2）不团结的 Cleanup","depth":3},{"value":"5）小结","depth":2}],"tableOfContents":"<ul>\n<li><a href=\"/blog/2019/05/02/react-lifecycle/#0%EF%BC%89%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2\">0）写在前面</a></li>\n<li><a href=\"/blog/2019/05/02/react-lifecycle/#1%EF%BC%89%E5%9C%A8%E4%BD%A0%E7%BB%A7%E7%BB%AD%E4%B9%8B%E5%89%8D\">1）在你继续之前</a></li>\n<li><a href=\"/blog/2019/05/02/react-lifecycle/#2%EF%BC%89%E5%85%B3%E4%BA%8E-hooks-%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\">2）关于 Hooks 的生命周期</a></li>\n<li>\n<p><a href=\"/blog/2019/05/02/react-lifecycle/#3%EF%BC%89%E9%82%A3%E4%B9%88%E6%88%91%E4%BB%AC%E5%B0%B1%E6%9D%A5%E5%81%9A%E4%B8%AA%E5%AE%9E%E9%AA%8C%E5%90%A7\">3）那么我们就来做个实验吧</a></p>\n<ul>\n<li><a href=\"/blog/2019/05/02/react-lifecycle/#31%EF%BC%89tldr\">3.1）TL,DR;</a></li>\n<li><a href=\"/blog/2019/05/02/react-lifecycle/#32%EF%BC%89%E6%8C%82%E8%BD%BD%E8%BF%87%E7%A8%8B\">3.2）挂载过程</a></li>\n<li><a href=\"/blog/2019/05/02/react-lifecycle/#33%EF%BC%89%E6%9B%B4%E6%96%B0%E8%BF%87%E7%A8%8B\">3.3）更新过程</a></li>\n<li><a href=\"/blog/2019/05/02/react-lifecycle/#34%EF%BC%89%E5%8D%B8%E8%BD%BD%E8%BF%87%E7%A8%8B\">3.4）卸载过程</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/blog/2019/05/02/react-lifecycle/#4%EF%BC%89hooks-%E7%9A%84%E7%89%B9%E5%88%AB%E4%B9%8B%E5%A4%84\">4）Hooks 的特别之处</a></p>\n<ul>\n<li><a href=\"/blog/2019/05/02/react-lifecycle/#41%EF%BC%89%E5%85%88%E6%9D%A5%E6%9C%AA%E5%BF%85%E5%85%88%E8%B5%B0\">4.1）先来未必先走</a></li>\n<li><a href=\"/blog/2019/05/02/react-lifecycle/#42%EF%BC%89%E4%B8%8D%E5%9B%A2%E7%BB%93%E7%9A%84-cleanup\">4.2）不团结的 Cleanup</a></li>\n</ul>\n</li>\n<li><a href=\"/blog/2019/05/02/react-lifecycle/#5%EF%BC%89%E5%B0%8F%E7%BB%93\">5）小结</a></li>\n</ul>"}},"pageContext":{"slug":"/blog/2019/05/02/react-lifecycle"}}}