{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/2015/02/11/tik-tok-color","webpackCompilationHash":"e59d3f6df542cc34ed00","result":{"data":{"site":{"siteMetadata":{"title":"童话说","keywords":["tonghuashuo","github","front-end","javascript","typescript","react","node","washington","hua","童话","童话说","前端","博客","技术","计算机","互联网"]}},"markdownRemark":{"html":"<h2>简单说两句</h2>\n<p>最初在 <a href=\"http://whatcolourisit.scn9a.org\" target=\"_blank\" rel=\"noopener noreferrer\">这里</a> 看到了这个案例，觉得挺有意思的，就尝试自己仿制了一个。</p>\n<p>原理上讲其实很简单，将时间的值对应为颜色通道的数值，并通过视觉效果体现出来。原作仅为 RGB 模式，我在其基础之上还尝试了 HSL 模式和 CMYK 的效果，并支持 3 种模式之间的切换查看。CMYK 模式在 Web 端并没有原生支持，无法直接使用，因此我把时、分、秒分别对应到 C、M、Y 通道，K 通道用日期表示，一天一变，保证每个通道都能有变化。</p>\n<p>原理虽然简单，但实现过程涉及颜色空间和数值进制之间的格式转换，需要多加注意，否则会出现各种 Bug。</p>\n<p>不同色彩空间的色域不完全相同，彼此间也不是简单的包含关系，因此存在一定程度的转换失真。但由于时间的各个值最大不超过 60，对应可显示的颜色范围只有完整色域的一小部分（当然，我们完全可以通过换算来覆盖完整的色域空间，但是没有必要，这个 idea 的重点就在于把时间的值直接用做颜色值，看会是什么效果，因此这里我们不考虑这个问题）。</p>\n<p>下面给出一些关键之处的实现说明。</p>\n<h2>HSL 到 RGB 的转换</h2>\n<p>CSS 中原生支持通过 HSL 模式来表示颜色，因此可以直接调用 <code class=\"gatsby-code-text\">hsl(h, s, l)</code> 来进行显示。这里我们为了显示其对应的十六进制表示，还需要进行一次从 HSL 到 RGB 的转换。转换算法如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-js line-numbers\"><code class=\"gatsby-code-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">hsl2rgb</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">hsl</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> hsl_array <span class=\"token operator\">=</span> hsl<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>hsl<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">var</span> h <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>hsl_array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>hsl_array<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> hsl_array<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">100</span>\n  <span class=\"token keyword\">var</span> l <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>hsl_array<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> hsl_array<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">100</span>\n\n  <span class=\"token keyword\">var</span> r<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> b\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    r <span class=\"token operator\">=</span> l g <span class=\"token operator\">=</span> l b <span class=\"token operator\">=</span> l\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> tmp2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>l <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token operator\">+</span> s <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> l <span class=\"token operator\">*</span> s <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">100</span>\n    <span class=\"token keyword\">var</span> tmp1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> l <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token operator\">-</span> tmp2 <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">100</span>\n    <span class=\"token keyword\">var</span> h2   <span class=\"token operator\">=</span> h <span class=\"token operator\">/</span> <span class=\"token number\">360</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">hue2rgb</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">tmp1<span class=\"token punctuation\">,</span> tmp2<span class=\"token punctuation\">,</span> tmp3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmp3 <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> tmp3 <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmp3 <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> tmp3 <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n      <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmp3 <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        result <span class=\"token operator\">=</span> tmp1 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>tmp2 <span class=\"token operator\">-</span> tmp1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">*</span> tmp3\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmp3 <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        result <span class=\"token operator\">=</span> tmp2\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmp3 <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        result <span class=\"token operator\">=</span> tmp1 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>tmp2 <span class=\"token operator\">-</span> tmp1<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span> <span class=\"token operator\">-</span> tmp3<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        result <span class=\"token operator\">=</span> tmp1\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    r <span class=\"token operator\">=</span> <span class=\"token function\">hue2rgb</span><span class=\"token punctuation\">(</span>tmp1<span class=\"token punctuation\">,</span> tmp2<span class=\"token punctuation\">,</span> h2 <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    g <span class=\"token operator\">=</span> <span class=\"token function\">hue2rgb</span><span class=\"token punctuation\">(</span>tmp1<span class=\"token punctuation\">,</span> tmp2<span class=\"token punctuation\">,</span> h2<span class=\"token punctuation\">)</span>\n    b <span class=\"token operator\">=</span> <span class=\"token function\">hue2rgb</span><span class=\"token punctuation\">(</span>tmp1<span class=\"token punctuation\">,</span> tmp2<span class=\"token punctuation\">,</span> h2 <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">var</span> rgb <span class=\"token operator\">=</span> <span class=\"token string\">\"rgb(\"</span> <span class=\"token operator\">+</span> r <span class=\"token operator\">+</span> <span class=\"token string\">\",\"</span> <span class=\"token operator\">+</span> g <span class=\"token operator\">+</span> <span class=\"token string\">\",\"</span> <span class=\"token operator\">+</span> b <span class=\"token operator\">+</span> <span class=\"token string\">\")\"</span>\n  <span class=\"token keyword\">return</span> rgb\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>函数接受一个形如 <code class=\"gatsby-code-text\">hsl(h, s%, l%)</code> 的表达式作为参数，返回值为形如 <code class=\"gatsby-code-text\">rgb(r, g, b)</code> 的表达式。由于 IEEE745 浮点数的精度问题，在计算过程中不得不通过缩放来维持计算的准确性。详细的算法描述可以参见：<a href=\"&#x27;http://zh.wikipedia.org/wiki/HSL%E5%92%8CHSV%E8%89%B2%E5%BD%A9%E7%A9%BA%E9%97%B4\">[Wikipedia] HSL到RGB的转换算法</a></p>\n<h2>CMYK 到 RGB 的转换</h2>\n<p>CMYK 模式作为一种印刷行业的色彩空间，在 Web 上并没有原生的实现，因此只能借助 RGB 进行中转。好在 CMYK 到 RGB 的转换并不复杂，公式化简之后可以一步到位，关键算法如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-js line-numbers\"><code class=\"gatsby-code-js\"><span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> hour\n<span class=\"token keyword\">var</span> m <span class=\"token operator\">=</span> min\n<span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> sec\n<span class=\"token keyword\">var</span> k <span class=\"token operator\">=</span> day\n\n<span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> c <span class=\"token operator\">/</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> k <span class=\"token operator\">/</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> k <span class=\"token operator\">/</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> g <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> m <span class=\"token operator\">/</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> k <span class=\"token operator\">/</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> k <span class=\"token operator\">/</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> y <span class=\"token operator\">/</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> k <span class=\"token operator\">/</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> k <span class=\"token operator\">/</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>变量 <code class=\"gatsby-code-text\">hour</code> ,  <code class=\"gatsby-code-text\">min</code> ,  <code class=\"gatsby-code-text\">sec</code> ,  <code class=\"gatsby-code-text\">day</code> 在之前的代码中有定义，来自于 <code class=\"gatsby-code-text\">new Date()</code>，这里将其省略了。时间值与 CMYK 值的映射关系是我自定义的，因为色相主要由 C、M、Y 决定，如果这三个值变化太慢的话，视觉上不容易看出效果，而K主要负责定位套版的颜色，一天一变问题不大，你也可以变换尝试其他的组合，说不定会有意想不到的效果。详细的算法描述可以参见：<a href=\"http://zh.wikipedia.org/wiki/%E5%8D%B0%E5%88%B7%E5%9B%9B%E5%88%86%E8%89%B2%E6%A8%A1%E5%BC%8F\" target=\"_blank\" rel=\"noopener noreferrer\">[Wikipedia] CMYK 到 RGB 的转换算法</a></p>\n<h2>RGB 的十六进制表示法</h2>\n<p>前面计算所得的 R、G、B 数值，不管是在 RGB 模式下，还是从 HSL 和 CMYK 转换过来的，我们都是将其作为十进制看待的，取值范围为 0-255，这一步我们需要将其转换为 6 位十六进制进行显示。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"gatsby-code-js line-numbers\"><code class=\"gatsby-code-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">rgb2hex</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">color</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> rgb_array <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>color<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">var</span> rd <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>rgb_array<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">var</span> gd <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>rgb_array<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">var</span> bd <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>rgb_array<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">var</span> rh <span class=\"token operator\">=</span> rd<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">var</span> gh <span class=\"token operator\">=</span> gd<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">var</span> bh <span class=\"token operator\">=</span> bd<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">var</span> hex <span class=\"token operator\">=</span> <span class=\"token string\">\"#\"</span> <span class=\"token operator\">+</span> rh <span class=\"token operator\">+</span> gh <span class=\"token operator\">+</span> bh\n  <span class=\"token keyword\">return</span> hex\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p> <code class=\"gatsby-code-text\">rd</code> 、 <code class=\"gatsby-code-text\">gd</code> 、 <code class=\"gatsby-code-text\">bd</code> 为从 color 中分离出来的 RGB 通道各自的十进制数，后缀 d 表示 decimal，十进制。 <code class=\"gatsby-code-text\">rh</code> 、 <code class=\"gatsby-code-text\">gh</code> 、 <code class=\"gatsby-code-text\">bh</code> 为转换后 RGB 通道各自的 2 位的十六进制值，后缀 h 表示 hexadecimal，十六进制。 <code class=\"gatsby-code-text\">toString()</code> 方法中的 16 表示以十六进制表示。</p>\n<h2>小结</h2>\n<p>看似简单的东西，做起来却又陷阱重重，没有扎实的基本功就免不了漏洞百出。实践才是检验真理的唯一标准啊。</p>","frontmatter":{"title":"时间是什么颜色的","description":"如果时间有颜色……","cover":{"publicURL":"/static/tik-tok-color-03c874556dd31d9db5f30b7609751b92.jpg"},"tags":["color","time","project"],"series":"","draft":false},"fields":{"id":"tik-tok-color","date":"2015-02-10T16:00:00.000Z"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2015/02/11/tik-tok-color"}}}