{"version":3,"sources":["webpack:///./src/templates/project-detail.tsx","webpack:///./src/config/index.ts","webpack:///./src/images/logo.png","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","props","data","post","markdownRemark","a","createElement","title","concat","frontmatter","keywords","site","siteMetadata","className","to","id","fields","dangerouslySetInnerHTML","__html","html","IS_PROD","process","module","exports","p","SEO","_props$description","description","_props$lang","lang","_props$meta","meta","_props$keywords","_props$title","_props$exactTitle","exactTitle","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","render","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","menus","text","Header","_useState","useState","_useState2","Object","slicedToArray","navMenuOpen","setNavMenuOpen","close","e","stopPropagation","isMenuActive","isMenuActiveProps","isPartiallyCurrent","react_default","Fragment","gatsby_browser_entry","src","logo","alt","onClick","map","key","getProps","Sentry","dsn","Layout","children","components_header","_755544856"],"mappings":"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","file":"component---src-templates-project-detail-tsx-af34c25f117342a6a226.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport './project-detail.scss'\nimport { GatsbyDataProps } from '../utils/interface'\n\nexport default (props: GatsbyDataProps) => {\n  const { data } = props\n  const post = data.markdownRemark\n\n  return (\n    <Layout>\n      <SEO\n        title={`${post.frontmatter.title} | 代表作`}\n        keywords={data.site.siteMetadata.keywords}\n      />\n      <div className='mf-content project-detail'>\n        <p className='back-to-parent'><Link to='/project'>&laquo; 回到项目列表</Link></p>\n        <article className='content' id={`project__${post.fields.id}`} dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\nquery($slug: String!) {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n  markdownRemark(fields: { slug: { eq: $slug } }) {\n    html\n    frontmatter {\n      title\n    }\n    fields {\n      id\n    }\n  }\n}`\n","export const IS_PROD = process.env.NODE_ENV === 'production'\n\nexport const DEBUG_MODE = !IS_PROD\n","module.exports = __webpack_public_path__ + \"static/logo-8503f6989dba3ce27939964a48c8b787.png\";","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ninterface SEOProps {\n  description?: string,\n  lang?: string,\n  meta?: { name: string; content: any; property?: undefined; } | { property: string; content: any; name?: undefined; } | ConcatArray<{ name: string; content: any; property?: undefined; } | { property: string; content: any; name?: undefined; }>,\n  keywords?: string[],\n  title?: string,\n  exactTitle?: boolean\n}\n\nconst SEO = (props: SEOProps) => {\n  const { description = '', lang = `zh`, meta = [], keywords = [], title = '', exactTitle = false } = props\n\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || data.site.siteMetadata.description\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={exactTitle ? '' : `%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              }\n            ].concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                : []\n            )\n            .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { useState, MouseEvent } from 'react'\nimport { Link } from 'gatsby'\nimport logo from '../images/logo.png'\nimport './header.scss'\nimport { LinkGetProps } from '@reach/router';\n\nconst menus = [\n  { to: '/blog', text: '博客' },\n  { to: '/project', text: '代表作' },\n  { to: '/lab', text: '实验室' },\n  { to: '/friend', text: '朋友' },\n  { to: '/about', text: '我' }\n]\n\nconst Header = () => {\n\n  const [navMenuOpen, setNavMenuOpen] = useState(false)\n\n  function toggle (e: MouseEvent) {\n    e && e.stopPropagation()\n    setNavMenuOpen(!navMenuOpen)\n  }\n\n  function close (e: MouseEvent) {\n    e && e.stopPropagation()\n    setNavMenuOpen(false)\n  }\n\n  function isMenuActive (isMenuActiveProps: LinkGetProps) {\n    const { isPartiallyCurrent } = isMenuActiveProps\n    return isPartiallyCurrent\n      ? { className: 'menu-link active' }\n      : { className: 'menu-link' }\n  }\n\n  return (\n    <>\n      <header id='mf-header'>\n        <div className='mf-header-wrapper'>\n          <Link to='/' className='logo'>\n            <img src={logo} alt=''/>\n            <span>童话说</span>\n          </Link>\n          <div className={'hamberger' + (navMenuOpen ? ' open' : '')} onClick={toggle}>\n            <div className='bar' />\n            <div className='bar' />\n            <div className='bar' />\n          </div>\n          <nav className={'nav-menu' + (navMenuOpen ? ' open' : '')}>\n            <ul className='menus'>\n              { menus.map(n => (\n                <li className='menu' key={n.to}>\n                  <Link\n                    to={n.to}\n                    getProps={isMenuActive}\n                    onClick={close}\n                  >{n.text}</Link>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </div>\n      </header>\n      <section id='mf-header-placeholder' />\n    </>\n  )\n}\n\nexport default Header\n","import React, { ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport * as Sentry from '@sentry/browser'\nimport 'normalize-scss/sass/normalize/_import-now.scss'\nimport './layout.scss'\nimport Header from './header'\nimport { IS_PROD } from 'config';\n\nif (IS_PROD) {\n  Sentry.init({\n    dsn: 'https://9638de4372be4acebf892d0732a86a4a@sentry.io/1450204'\n  })\n}\n\ninterface LayoutProps {\n  children?: ReactNode\n}\n\nconst Layout = (props: LayoutProps) => {\n  const { children } = props\n\n  return <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header />\n        <main>\n          {children}\n        </main>\n      </>\n    )}\n  />\n}\n\nexport default Layout\n"],"sourceRoot":""}