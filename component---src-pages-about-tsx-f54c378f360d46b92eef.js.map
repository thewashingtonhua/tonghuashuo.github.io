{"version":3,"sources":["webpack:///./src/pages/about.tsx","webpack:///./src/config/index.ts","webpack:///./src/images/logo.png","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx","webpack:///./src/images/about/brain.png","webpack:///./src/images/QR/qr-dark.png"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_images_about_brain_png__WEBPACK_IMPORTED_MODULE_4__","_images_about_brain_png__WEBPACK_IMPORTED_MODULE_4___default","_images_QR_qr_dark_png__WEBPACK_IMPORTED_MODULE_5__","_images_QR_qr_dark_png__WEBPACK_IMPORTED_MODULE_5___default","Date","About","props","data","a","createElement","title","keywords","site","siteMetadata","className","id","src","brain","alt","qr","IS_PROD","process","module","exports","p","SEO","_props$description","description","_props$lang","lang","_props$meta","meta","_props$keywords","_props$title","_props$exactTitle","exactTitle","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","render","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","concat","name","content","property","author","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","menus","to","text","Header","_useState","useState","_useState2","Object","slicedToArray","navMenuOpen","setNavMenuOpen","close","e","stopPropagation","isMenuActive","isMenuActiveProps","isPartiallyCurrent","react_default","Fragment","gatsby_browser_entry","logo","onClick","map","key","getProps","Sentry","dsn","Layout","children","components_header","_755544856"],"mappings":"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","file":"component---src-pages-about-tsx-f54c378f360d46b92eef.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport './about.scss'\nimport brain from '../images/about/brain.png'\nimport qr from '../images/QR/qr-dark.png'\nimport { GatsbyDataProps } from '../utils/interface'\n// import { useInterval } from '../hooks'\n\nconst START_DATE = new Date('2016-03-01 10:00:00')\n// const DAYS_PER_MONTH = 365 / 12\n\nconst About = (props: GatsbyDataProps) => {\n  const { data } = props\n\n  /* const [experience, setExperience] = useState(0)\n\n  const updateExperience = () => {\n    const now = new Date()\n    const secondsPassed = (now.getTime() - START_DATE.getTime()) / 1000\n    const daysPassed = secondsPassed / 60 / 60 / 24\n\n    // const year = Math.floor(daysPassed / 365)\n    // const month = Math.floor(daysPassed / DAYS_PER_MONTH % 12)\n    // const day = Math.floor(daysPassed % DAYS_PER_MONTH)\n    // const hour = Math.floor(secondsPassed / 60 / 60 % 24)\n    // const minute = Math.floor(secondsPassed / 60 % 60)\n    // const second = Math.floor(secondsPassed % 60)\n\n    // setExperience(`${year} 年 ${month} 个月 ${day} 天 ${hour} 小时 ${minute} 分钟 ${second} 秒`)\n    // setExperience(`${year} 年 ${month} 个月 ${day} 天`)\n    setExperience(Math.floor(daysPassed))\n  }\n\n  useEffect(() => {\n    // updateExperience()\n  }, []) */\n\n  // useInterval(updateExperience, 1000)\n\n  return (\n    <Layout>\n      <SEO\n        title='我'\n        keywords={data.site.siteMetadata.keywords}\n      />\n      <div className='mf-content' id='about'>\n        <article>\n\n          <h1>我</h1>\n          <img src={brain} alt='Code in my left brain. Color in my right brain.' />\n          <p>Washington Hua，花名「童话」</p>\n          {/* <p>一个出道 {experience} 天的前端工程师</p> */}\n          <p>前端工程师</p>\n          <p>目前在马老师门下修福报</p>\n          <p>征途是成为「懂设计的全栈工程师」</p>\n\n          <h1>联系方式</h1>\n          <img src={qr} alt='' />\n\n          <h1>为什么写博客</h1>\n          <ul>\n            <li>把「以为懂了」的东西讲给别人听，以此验证是否真的懂了。</li>\n            <li>锻炼自己的表达能力，让自己懂和让别人懂是两个境界。</li>\n            <li>Review 自己的代码，看有哪些是可以优化的，哪些甚至是解释不通的。</li>\n            <li>用大白话分享技术知识，为社区贡献一点有价值的内容。</li>\n            <li>装逼这事儿没什么说不出口的。</li>\n          </ul>\n        </article>\n\n      </div>\n    </Layout>\n  )\n}\n\nexport default About\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      title,\n      keywords\n    }\n  }\n}`\n","export const IS_PROD = process.env.NODE_ENV === 'production'\n\nexport const DEBUG_MODE = !IS_PROD\n","module.exports = __webpack_public_path__ + \"static/logo-8503f6989dba3ce27939964a48c8b787.png\";","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ninterface SEOProps {\n  description?: string,\n  lang?: string,\n  meta?: { name: string; content: any; property?: undefined; } | { property: string; content: any; name?: undefined; } | ConcatArray<{ name: string; content: any; property?: undefined; } | { property: string; content: any; name?: undefined; }>,\n  keywords?: string[],\n  title?: string,\n  exactTitle?: boolean\n}\n\nconst SEO = (props: SEOProps) => {\n  const { description = '', lang = `zh`, meta = [], keywords = [], title = '', exactTitle = false } = props\n\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription = description || data.site.siteMetadata.description\n\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={exactTitle ? '' : `%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              }\n            ].concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`,`),\n                  }\n                : []\n            )\n            .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React, { useState, MouseEvent } from 'react'\nimport { Link } from 'gatsby'\nimport logo from '../images/logo.png'\nimport './header.scss'\nimport { LinkGetProps } from '@reach/router';\n\nconst menus = [\n  { to: '/blog', text: '博客' },\n  { to: '/project', text: '代表作' },\n  { to: '/lab', text: '实验室' },\n  { to: '/friend', text: '朋友' },\n  { to: '/recruit', text: '招人' },\n  { to: '/about', text: '我' }\n]\n\nconst Header = () => {\n\n  const [navMenuOpen, setNavMenuOpen] = useState(false)\n\n  function toggle (e: MouseEvent) {\n    e && e.stopPropagation()\n    setNavMenuOpen(!navMenuOpen)\n  }\n\n  function close (e: MouseEvent) {\n    e && e.stopPropagation()\n    setNavMenuOpen(false)\n  }\n\n  function isMenuActive (isMenuActiveProps: LinkGetProps) {\n    const { isPartiallyCurrent } = isMenuActiveProps\n    return isPartiallyCurrent\n      ? { className: 'menu-link active' }\n      : { className: 'menu-link' }\n  }\n\n  return (\n    <>\n      <header id='mf-header'>\n        <div className='mf-header-wrapper'>\n          <Link to='/' className='logo'>\n            <img src={logo} alt=''/>\n            <span>童话说</span>\n          </Link>\n          <div className={'hamberger' + (navMenuOpen ? ' open' : '')} onClick={toggle}>\n            <div className='bar' />\n            <div className='bar' />\n            <div className='bar' />\n          </div>\n          <nav className={'nav-menu' + (navMenuOpen ? ' open' : '')}>\n            <ul className='menus'>\n              { menus.map(n => (\n                <li className='menu' key={n.to}>\n                  <Link\n                    to={n.to}\n                    getProps={isMenuActive}\n                    onClick={close}\n                  >{n.text}</Link>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </div>\n      </header>\n      <section id='mf-header-placeholder' />\n    </>\n  )\n}\n\nexport default Header\n","import React, { ReactNode } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport * as Sentry from '@sentry/browser'\nimport 'normalize-scss/sass/normalize/_import-now.scss'\nimport './layout.scss'\nimport Header from './header'\nimport { IS_PROD } from 'config';\n\nif (IS_PROD) {\n  Sentry.init({\n    dsn: 'https://9638de4372be4acebf892d0732a86a4a@sentry.io/1450204'\n  })\n}\n\ninterface LayoutProps {\n  children?: ReactNode\n}\n\nconst Layout = (props: LayoutProps) => {\n  const { children } = props\n\n  return <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header />\n        <main>\n          {children}\n        </main>\n      </>\n    )}\n  />\n}\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/brain-7dc10532e2058d66744cd1398811518d.png\";","module.exports = __webpack_public_path__ + \"static/qr-dark-580f34891d0a0efb404579610eb531e6.png\";"],"sourceRoot":""}